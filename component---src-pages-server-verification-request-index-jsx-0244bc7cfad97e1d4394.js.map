{"version":3,"sources":["webpack:///./src/pages/server/verification/request/index.jsx"],"names":["ServerVerification","React","Component","render","postEdges","this","props","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_6__","location","IndexContainer","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","title","config","siteTitle","_components_SEO_SEO__WEBPACK_IMPORTED_MODULE_7__","IndexHeadContainer","_components_Layout_Header__WEBPACK_IMPORTED_MODULE_8__","activeCategory","categories","navCategories","className","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","BodyContainer","_components_server_verification_ServerVerificationValueProp__WEBPACK_IMPORTED_MODULE_11__","_components_server_verification_ServerVerificationResources__WEBPACK_IMPORTED_MODULE_10__","FooterContainer","_components_Layout_Footer__WEBPACK_IMPORTED_MODULE_9__","styled","div","withConfig","displayName","componentId","theme","brand","footer","query","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","_public_static_d_1741435308_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"8i5BAcA,MAAMA,UAA2BC,IAAMC,UACrCC,SACE,MAAMC,EAAYC,KAAKC,MAAMC,KAAKC,kBAAkBC,MACpD,OAAQC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUT,KAAKC,MAAMQ,UACnCJ,EAAAC,EAAAC,cAACG,EAAD,KACEL,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAQM,MAAOC,IAAOC,YACtBT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAKhB,UAAWA,IAChBM,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACS,EAAD,KACEX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEC,eAAgB,GAChBT,SAAUT,KAAKC,MAAMQ,SACrBU,WAAYnB,KAAKC,MAAMC,KAAKkB,iBAEhCf,EAAAC,EAAAC,cAAA,OAAKc,UAAU,eACbhB,EAAAC,EAAAC,cAAA,OAAKc,UAAU,OACbhB,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,gFAGAF,EAAAC,EAAAC,cAACe,EAAA,KAAD,CAAMC,GAAG,6BACPlB,EAAAC,EAAAC,cAAA,OAAKc,UAAU,cAAf,kBAMNhB,EAAAC,EAAAC,cAACiB,EAAD,CAAeH,UAAY,kBACzBhB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,MACApB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,OAEFrB,EAAAC,EAAAC,cAACoB,EAAD,KACEtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,WAQZ,MAAMlB,EAAiBmB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,YAAGJ,CAAH,knBAmDdb,EAAqBa,IAAOC,IAAVC,WAAA,CAAAC,YAAA,8BAAAC,YAAA,YAAGJ,CAAH,oBACV5B,GAASA,EAAMiC,MAAMC,OAG7BX,EAAgBK,IAAOC,IAAVC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,YAAGJ,CAAH,6CAKbF,EAAkBE,IAAOO,OAAVL,WAAA,CAAAC,YAAA,2BAAAC,YAAA,YAAGJ,CAAH,yCA2DL5B,cAASI,EAAAC,EAAAC,cAACe,EAAA,YAAD,CACvBe,MAtDS,aAuDTvC,OAAQI,GAAQG,EAAAC,EAAAC,cAACZ,EAAD2C,IAAA,GAAwBrC,EAAxB,CAA+BC,KAAMA,KAF9BA,KAAAqC","file":"component---src-pages-server-verification-request-index-jsx-0244bc7cfad97e1d4394.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport styled from 'styled-components'\nimport { graphql, Link, StaticQuery } from 'gatsby'\n\nimport Layout from '../../../../components/layout'\nimport SEO from '../../../../components/SEO/SEO'\nimport SiteHeader from '../../../../components/Layout/Header'\nimport SiteFooter from '../../../../components/Layout/Footer'\nimport ServerVerificationResources from '../../../../components/server/verification/ServerVerificationResources'\nimport ServerVerificationValueProp from '../../../../components/server/verification/ServerVerificationValueProp'\nimport config from '../../../../../data/SiteConfig'\nimport AutoLinkText from 'react-autolink-text2'\n\nclass ServerVerification extends React.Component {\n  render () {\n    const postEdges = this.props.data.allMarkdownRemark.edges\n    return (<Layout location={this.props.location}>\n      <IndexContainer>\n        <Helmet title={config.siteTitle} />\n        <SEO postEdges={postEdges} />\n        <main>\n          <IndexHeadContainer>\n            <SiteHeader\n              activeCategory={''}\n              location={this.props.location}\n              categories={this.props.data.navCategories} />\n          </IndexHeadContainer>\n          <div className='cta-wrapper'>\n            <div className='cta'>\n              <h4>SERVER APPS</h4>\n              <h1>Verification</h1>\n              <p>\n                A simple Credential Verification Solution for Your Server-side dApp\n              </p>\n              <Link to='/credentials/verification'>\n                <div className='cta-button'>\n                  GET STARTED\n                </div>\n              </Link>\n            </div>\n          </div>\n          <BodyContainer className={`body-container`}>\n            <ServerVerificationValueProp />\n            <ServerVerificationResources />\n          </BodyContainer>\n          <FooterContainer>\n            <SiteFooter />\n          </FooterContainer>\n        </main>\n      </IndexContainer>\n    </Layout>)\n  }\n}\n\nconst IndexContainer = styled.div`\na {\n  text-decoration: none;\n}\n.cta {\n  margin: 109px auto 90px; auto;\n  height: 320px;\n  width: 589px;\n  text-align: center;\n}\n.cta-button {\n  height: 60px;\n  width: 260px;\n  margin: 31px auto 0 auto;\n  background: #4C9EA6;\n  border: none;\n  color: #FFFFFF;\n  font-style: normal;\n  font-weight: 800;\n  line-height: 58px;\n  font-size: 16px;\n  text-align: center;\n  border-radius: 4px;\n}\nh1 {\n  color: #3E3C49;\n  font-size: 48px;\n  line-height: 72px;\n  font-weight: 800;\n  margin: unset;\n  margin: initial;\n}\nh4 {\n  font-style: normal;\n  font-weight: 800;\n  line-height: 24px;\n  font-size: 18px;\n  color: #4C9EA6;\n  padding-bottom: 9px;\n  margin: unset;\n  margin: initial;\n}\np {\n  color: #504F5C;\n  font-size: 24px;\n  line-height: 36px;\n  font-weight: normal;\n  font-style: normal;\n}\n`\n\nconst IndexHeadContainer = styled.div`\nbackground: ${props => props.theme.brand};\n`\n\nconst BodyContainer = styled.div`\n  background-color: #F9F9FA;\n  margin: 0 auto;\n`\n\nconst FooterContainer = styled.footer`\n  background-color: #6c59cf;\n  clear: all;\n`\n\n/* eslint no-undef: \"off\"*/\nconst query = graphql`\n  query RequestVerificationQuery {\n    allMarkdownRemark(\n      limit: 2000\n      filter: { frontmatter: { type: { ne: null }}}\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n    navCategories:\n    allMarkdownRemark(\n      filter: { frontmatter: { category: { ne: null }, index: { ne: null }}}\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          headings {\n            value\n            depth\n          }\n          frontmatter {\n            category\n            index\n          }\n        }\n      }\n    }\n    announcement: allMarkdownRemark(\n      filter: { frontmatter: { announcement: { ne: null } } }) {\n        totalCount\n        edges {\n          node {\n            frontmatter {\n              announcement\n            }\n          }\n        }\n      }\n  }\n`\n\nexport default (props => <StaticQuery\n  query={query}\n  render={data => <ServerVerification {...props} data={data} /> } />)\n"],"sourceRoot":""}