webpackJsonp([0x89a604d6a966],{1181:function(e,t){e.exports={data:{allMarkdownRemark:{edges:[{node:{fields:{slug:"/readme"},excerpt:"uPort Specs uPort is a platform for user centric identity and communication. The platform currently consists of our mobile app, Ethereum…",timeToRead:2,frontmatter:{title:"Uport Specs"}}},{node:{fields:{slug:"/credentials/index"},excerpt:"Server-side Login Solution The Login Solution for Your Server-side dApp Login a user Keep a user logged in QR code scan Compatible with your…",timeToRead:1,frontmatter:{title:"index"}}},{node:{fields:{slug:"/connect/login"},excerpt:"Introduction Using uport-connect to create a login solution is easy!  Instead of creating your own solution using uPort Credentials + uPort…",timeToRead:3,frontmatter:{title:"Web3 Login Example"}}},{node:{fields:{slug:"/credentials/createverification"},excerpt:"Introduction Creating and issuing verifications from your server application is a simple matter of utilizing uport-credentials to create…",timeToRead:9,frontmatter:{title:"Create Verification Example"}}},{node:{fields:{slug:"/credentials/login"},excerpt:"Introduction Creating a simple login solution with uport-credentials can be accomplished with a small Node.js application to request…",timeToRead:5,frontmatter:{title:"Server Side Login Example"}}},{node:{fields:{slug:"/connect/requestverification"},excerpt:"Introduction Much like logging in, using uport-connect to request verified data about uPort mobile clients is simple.  So simple we will…",timeToRead:3,frontmatter:{title:"Request Verification Example"}}},{node:{fields:{slug:"/connect/sendverification"},excerpt:"Introduction Much like logging in, using uport-connect to create and send verifications to uPort mobile clients is simple.  Our connect…",timeToRead:3,frontmatter:{title:"Send Verification Example"}}},{node:{fields:{slug:"/credentials/transactions"},excerpt:"Introduction It is possible with uport-credentials to create an ethereum transaction request and have a mobile client approve and sign that…",timeToRead:6,frontmatter:{title:"Transaction Signing Example"}}},{node:{fields:{slug:"/credentials/requestverification"},excerpt:"Introduction Requesting verifications with your server application is the same process as creating a disclosure request as seen in the login…",timeToRead:5,frontmatter:{title:"Request Verification Example"}}},{node:{fields:{slug:"/ethr-did-registry/readme"},excerpt:"Ethereum DID Registry This contract allows on-chain and off-chain resolving and management for  DIDs (Decentralized Identifiers) . A DID is…",timeToRead:9,frontmatter:{title:"Ethereum DID Registry"}}},{node:{fields:{slug:"/ethr-did-resolver/readme"},excerpt:"ethr DID Resolver This library is intended to use ethereum addresses as fully self managed  Decentralized Identifiers  and wrap them in a…",timeToRead:8,frontmatter:{title:"Ethr DID Resolver"}}},{node:{fields:{slug:"/messages/encryption"},excerpt:"Message Encryption Some  message transports  are not directly secure and require encryption of the message. We currently use the  box public…",timeToRead:5,frontmatter:{title:"Message Encryption"}}},{node:{fields:{slug:"/messages/claims"},excerpt:"Issuer Claims The issuer of a message is the signer of the request. The issuer can present claims about themselves. This either as…",timeToRead:4,frontmatter:{title:"Issuer Claims"}}},{node:{fields:{slug:"/messages/personalsignresp"},excerpt:"Personal Sign Response A personal sign response is a JWT containing within it a hex string of data, and an object representing the signature…",timeToRead:2,frontmatter:{title:"Sign Typed Data Response"}}},{node:{fields:{slug:"/messages/sharereq"},excerpt:"Selective Disclosure Request The Selective Disclosure Request is created by a client app and sent to a user's mobile app during the…",timeToRead:4,frontmatter:{title:"Selective Disclosure Request"}}},{node:{fields:{slug:"/messages/index"},excerpt:"Off-chain Messages Most request and responses are performed privately off-chain between the different parties to a flow. JSON Web Token Most…",timeToRead:5,frontmatter:{title:"Off-chain Messages"}}},{node:{fields:{slug:"/messages/personalsignreq"},excerpt:"Personal Sign Request The Personal Sign Request is a message created by a client app and sent to a user's mobile app, which contains a…",timeToRead:2,frontmatter:{title:"Personal Sign Request"}}},{node:{fields:{slug:"/messages/shareresp"},excerpt:"Selective Disclosure Response The Selective Disclosure Response is created by a users mobile app as a response to a  Selective Disclosure…",timeToRead:2,frontmatter:{title:"Off-chain Messages"}}},{node:{fields:{slug:"/messages/signtypeddatareq"},excerpt:"Sign Typed Data Request The Sign Typed Data Request is a message created by a client app and sent to a user's mobile app, which contains a…",timeToRead:3,frontmatter:{title:"Sign Typed Data Request"}}},{node:{fields:{slug:"/messages/privatechain"},excerpt:"Private Chain Provisioning Message A Private Chain Provisioning Message can be used for adding an account created on a private Ethereum…",timeToRead:3,frontmatter:{title:"Private Chain Provisioning"}}},{node:{fields:{slug:"/messages/verificationreq"},excerpt:"Verified Claim Request The Verified Claim Request is created by a client app and sent to a user's mobile app during the  Verified Claim…",timeToRead:3,frontmatter:{title:"Verification Claim Request"}}},{node:{fields:{slug:"/messages/tx"},excerpt:"Ethereum Transaction Request This message allows an application to request that a client signs an ethereum transaction. The Ethereum…",timeToRead:8,frontmatter:{title:"Ethereum Transaction Request"}}},{node:{fields:{slug:"/messages/verification"},excerpt:"Verified Claims A Verified Claim is a statement issued by a third party verifying claims about an identity  Verified Claim Flow . Verified…",timeToRead:2,frontmatter:{title:"Verified Claims"}}},{node:{fields:{slug:"/messages/signtypeddataresp"},excerpt:"Signed Typed Data Response A signed typed data response is a message created by a client app which includes a structured object that…",timeToRead:3,frontmatter:{title:"Sign Typed Data Response"}}},{node:{fields:{slug:"/guides/gettingstarted"},excerpt:"Get Started To hit the ground running with Uport Connect this guide will help you get setup. If you have any questions or difficulties, head…",timeToRead:2,frontmatter:{title:"Quick Start"}}},{node:{fields:{slug:"/guides/requestcredentials"},excerpt:"Requesting Credentials Credentials are cryptographically signed messages containing information about a subject identity. They can be used…",timeToRead:3,frontmatter:{title:"Requesting Credentials"}}},{node:{fields:{slug:"/guides/reactuporttruffle"},excerpt:"React-uport Truffle box This a short tutorial to requesting credentials and signing attestations with uPort.  We will be leveraging the…",timeToRead:4,frontmatter:{title:"React-Uport Truffle Box"}}},{node:{fields:{slug:"/guides/attestcredentials"},excerpt:"Attesting Credentials One of the core needs of Web 3.0 is to build trust in a self-sovereign world. We establish facts which are not…",timeToRead:2,frontmatter:{title:"Attesting Credentials"}}},{node:{fields:{slug:"/guides/signtransactions"},excerpt:"Ethereum Transactions and Contract Calls  offers two Ethereum interaction models. The first is similar to above, where all Ethereum…",timeToRead:3,frontmatter:{title:"Signing Transactions"}}},{node:{fields:{slug:"/flows/personalsign"},excerpt:"Personal Signature Request Flow Similar to a  Typed Data Signature Request , a client application can request that the user sign an…",timeToRead:1,frontmatter:{title:"Personal Signature Request Flow"}}},{node:{fields:{slug:"/flows/selectivedisclosure"},excerpt:"Selective Disclosure Flow A client application can request various information from the user. The following shows the basic flow: Endpoint…",timeToRead:2,frontmatter:{title:"Selective Disclosure Flow"}}},{node:{fields:{slug:"/flows/index"},excerpt:"Uport Request Flows A request will typically be signed by a client app and sent to mobile app using this generic request flow: Unified…",timeToRead:1,frontmatter:{title:"Uport Request Flows"}}},{node:{fields:{slug:"/flows/privatechain"},excerpt:"Private Chain Provisioning Flow Experimental support for supporting Ethereum Accounts on private chains. The following shows the basic flow…",timeToRead:2,frontmatter:{title:"Private Chain Provisioning Flows"}}},{node:{fields:{slug:"/flows/tx"},excerpt:"Ethereum Transaction Flow A client application can request that a user signs an Ethereum transaction. The following shows the basic flow…",timeToRead:2,frontmatter:{title:"Ethereum Transaction Flow"}}},{node:{fields:{slug:"/flows/verification"},excerpt:"Send Verification Flow A client application can verify information about a user The following shows the basic flow: A more complete example…",timeToRead:2,frontmatter:{title:"Send Verification Flow"}}},{node:{fields:{slug:"/uport-connect/index"},excerpt:"uPort Connect Instantly Connect Users to Your dApp uPort is a self-sovereign digital identity platform — anchored on the Ethereum blockchain…",timeToRead:1,frontmatter:{title:"uPort Connect"}}},{node:{fields:{slug:"/pki/diddocument"},excerpt:"Decentralized Identity Document (DID Document) This is the subset of the  DID Document  spec that we implement as part of the uPort platform…",timeToRead:3,frontmatter:{title:"Decentralized Identity Document"}}},{node:{fields:{slug:"/pki/index"},excerpt:"uPort PKI uPort implements a simple yet general purpose decentralized PKI system, making it easy to create and verify off-chain JWT messages…",timeToRead:2,frontmatter:{title:"Uport PKI"}}},{node:{fields:{slug:"/pki/identitydocument"},excerpt:"Identity Document (DEPRECATED) Note this format will be deprecated soon and replaced by a standard  DID Document . The Identity document is…",timeToRead:6,frontmatter:{title:"Identity Document"}}},{node:{fields:{slug:"/flows/verificationreq"},excerpt:"Verified Claim Request Flow A client application can request that the user sign a Verified Claim. The following shows the basic flow…",timeToRead:1,frontmatter:{title:"Verification Request Flow"}}},{node:{fields:{slug:"/uport-credentials/index"},excerpt:"uPort Credentials Create & Request Attested Data uPort is a self-sovereign digital identity platform — anchored on the Ethereum blockchain…",timeToRead:1,frontmatter:{title:"uPort Credentials"}}},{node:{fields:{slug:"/uport-transports/index"},excerpt:"uPort Transports Connect Users to a uPort Client uPort is a self-sovereign digital identity platform—anchored on the Ethereum blockchain…",timeToRead:1,frontmatter:{title:"Uport Transports"}}},{node:{fields:{slug:"/overview/login"},excerpt:"Login Solutions Frictionless Login Across the Web Single Sign-On (SSO) allows people to use their digital identity wherever they go on the…",timeToRead:1,frontmatter:{title:"Login overview"}}},{node:{fields:{slug:"/overview/attestation"},excerpt:"Issue Verifications Contribute to the Decentralized World Identity is one of the most significant barriers to entry into the decentralized…",timeToRead:1,frontmatter:{title:"Attestation overview"}}},{node:{fields:{slug:"/overview/glossary"},excerpt:"Terms and Definitions Term Definition Attestation These are synonymous with Credentials.  In uPort attestations are cryptographically signed…",timeToRead:4,frontmatter:{title:"Glossary"}}},{node:{fields:{slug:"/overview/transactions"},excerpt:"Requesting Transactions Send Users An Ethereum Transaction Request Send an Ethereum transaction request to your users Receive a transaction…",timeToRead:1,frontmatter:{title:"Requesting Transactions"}}},{node:{fields:{slug:"/overview/index"},excerpt:"Helping You Build User Centric Apps on Blockchains uPort is a collection of tools and protocols for building  decentralized user-centric…",timeToRead:7,frontmatter:{title:"About"}}},{node:{fields:{slug:"/rest-apis/relay-server"},excerpt:"Meta Transaction Relaying Server All transactions on Ethereum like networks are paid using transaction fees known as  . To avoid the…",timeToRead:3,frontmatter:{title:"Meta Transaction Relaying Server"}}},{node:{fields:{slug:"/overview/releases"},excerpt:"Releases Uport Mobile What's New in Version 1.5.20 build v403 Chasqui responses are now encrypted Support to receive and sign ERC-712 typed…",timeToRead:14,frontmatter:{title:"Releases"}}},{node:{fields:{slug:"/rest-apis/fuel-server"},excerpt:"Transaction Fueling Server All transactions on Ethereum like networks are paid using transaction fees known as  . To avoid the requirement…",timeToRead:1,frontmatter:{title:"Transaction Fueling Server"}}},{node:{fields:{slug:"/transports/push"},excerpt:"Push Notification Transport Push notifications is a transport for sending requests to users. To make sure that the push notification service…",timeToRead:2,frontmatter:{title:"Push Notification Transport"}}},{node:{fields:{slug:"/did-jwt/reference/index"},excerpt:"Algorithms supported  the  secp256k1 ECDSA curve  the  secp256k1 ECDSA curve  with recovery parameter DID PublicKey Types The   section of a…",timeToRead:7,frontmatter:{title:"DID JWT"}}},{node:{fields:{slug:"/transports/index"},excerpt:"Request/Response Transports Requests Requests always consist of URLs that are handled by the mobile app. There are different built in ways…",timeToRead:5,frontmatter:{title:"Request/Response Transports"}}},{node:{fields:{slug:"/ethr-did/docs/index"},excerpt:"Ethr-DID A Scalable Identity Method for Ethereum Addresses uPort is a self-sovereign digital identity platform---anchored on the Ethereum…",timeToRead:1,frontmatter:{title:"Ethr DID"}}},{node:{fields:{slug:"/did-jwt/guides/index"},excerpt:"Working with did-JWT's Creating a JWT Use the   function Parameters Name Description Required an object containing any claims you want to…",timeToRead:5,frontmatter:{title:"Working with JWT's"}}},{node:{fields:{slug:"/muport-core-js/guides/simple-id"},excerpt:"Simple ID (muPort) In this document we outline a description of key management for an identity using an abstract  DID  (Decentralized…",timeToRead:6,frontmatter:{title:"Simple ID (muPort)"}}},{node:{fields:{slug:"/uport-connect/reference/index"},excerpt:"Classes Connect Kind : global class   Connect new Connect(appName, [opts]) .getProvider([provider])  ⇒  UportSubprovider .onResponse(id, cb…",timeToRead:14,frontmatter:{title:"Library Reference"}}},{node:{fields:{slug:"/uport-transports/guides/modules"},excerpt:" uPort Transports Guide The   library consists of a loosely coupled collection of functions called transports used to set up communication…",timeToRead:4,frontmatter:{title:"Transports Guide"}}},{node:{fields:{slug:"/uport-connect/guides/usage"},excerpt:" Connect Library Guide The uPort Connect library is a client-side library that allows you to interact with a user's uPort identity through a…",timeToRead:14,frontmatter:{title:"Connect Library Guide"}}},{node:{fields:{slug:"/uport-credentials/guides/tutorial"},excerpt:"In this toutorial, we will demonstrate how to create and sign a custom credential on a server (called the Creator) and present it to a uPort…",timeToRead:7,frontmatter:{title:"Server-side examples"}}},{node:{fields:{slug:"/uport-credentials/reference/index"},excerpt:"Credentials The Credentials class allows you to easily create the signed payloads used in uPort, including\ncredentials and signed mobile app…",timeToRead:12,frontmatter:{title:"Library Reference"}}},{node:{fields:{slug:"/ethr-did/docs/reference/index"},excerpt:"Introduction This library conforms to  ERC-1056  and is intended to use Ethereum addresses as fully self-managed  Decentralized Identifiers…",timeToRead:3,frontmatter:{title:"Library Reference"}}},{node:{fields:{slug:"/uport-credentials/guides/index"},excerpt:"Getting Started Configure Your Application In your application, you must first configure your uPort object with an identifier and a private…",timeToRead:5,frontmatter:{title:"Getting Started with uPort Credentials"}}},{node:{fields:{slug:"/uport-transports/reference/index"},excerpt:"Modules Constants Functions uport-transports/transport/ui A set of UI utility functions and default displays for bridging between\na web…",timeToRead:21,frontmatter:{title:"Library Reference"}}},{node:{fields:{slug:"/ethr-did/docs/guides/index"},excerpt:"Getting Started Construct a New Identity Create Ethr-DID Creating an Ethr-DID is analogous to creating an Ethereum account, which is an…",timeToRead:11,frontmatter:{title:"Getting Started"}}}]},navCategories:{edges:[{node:{fields:{slug:"/readme"},headings:[{value:"uPort Specs",depth:1},{value:"Identities",depth:2},{value:"Identities created using the uPort Mobile App",depth:3},{value:"Request Flows",depth:2},{value:"More about request flows",depth:3},{value:"Request and Response Transports",depth:2},{value:"Request/Response Transports",depth:3},{value:"Off-chain Messages",depth:2},{value:"More about Off-chain Messages",depth:3},{value:"On-chain Transactions",depth:2},{value:"More about Signing Ethereum transactions",depth:3},{value:"uPort PKI",depth:2},{value:"More about the uPort PKI",depth:3}],frontmatter:{category:"specs",index:3}}},{node:{fields:{slug:"/credentials/index"},headings:[{value:"Server-side Login Solution",depth:1},{value:"The Login Solution for Your Server-side dApp",depth:2}],frontmatter:{category:"login",index:0}}},{node:{fields:{slug:"/connect/login"},headings:[{value:"Introduction",depth:1},{value:"Setup",depth:2},{value:"Boilerplate",depth:3},{value:"Create Authentication Functionality",depth:2},{value:"Run the example",depth:2}],frontmatter:{category:"uport-connect",index:2}}},{node:{fields:{slug:"/credentials/createverification"},headings:[{value:"Introduction",depth:1},{value:"Setup",depth:2},{value:"Output:",depth:5},{value:"Boilerplate",depth:3},{value:"Create and Issue Verifications",depth:2},{value:"Running the Service",depth:2}],frontmatter:{category:"uport-credentials",index:3}}},{node:{fields:{slug:"/credentials/login"},headings:[{value:"Introduction",depth:1},{value:"Setup",depth:2},{value:"Output:",depth:5},{value:"Boilerplate",depth:3},{value:"Disclosure Request Login Service",depth:2},{value:"Selective Disclosure Request",depth:4},{value:"Disclosure Response Authentication Service",depth:2},{value:"Selective Disclosure Response",depth:4},{value:"Running the Service",depth:2}],frontmatter:{category:"uport-credentials",index:2}}},{node:{fields:{slug:"/connect/requestverification"},headings:[{value:"Introduction",depth:1},{value:"Setup",depth:2},{value:"Boilerplate",depth:3},{value:"Request Verifications",depth:2},{value:"Run the example",depth:2}],frontmatter:{category:"uport-connect",index:4}}},{node:{fields:{slug:"/connect/sendverification"},headings:[{value:"Introduction",depth:1},{value:"Setup",depth:2},{value:"Boilerplate",depth:3},{value:"Create and Send a Verification",depth:2},{value:"Run the example",depth:2}],frontmatter:{category:"uport-connect",index:3}}},{node:{fields:{slug:"/credentials/transactions"},headings:[{value:"Introduction",depth:1},{value:"Setup",depth:2},{value:"Output:",depth:5},{value:"Boilerplate",depth:3},{value:"Create Transaction Request",depth:2},{value:"Running the Service",depth:2}],frontmatter:{category:"uport-credentials",index:5}}},{node:{fields:{slug:"/credentials/requestverification"},headings:[{value:"Introduction",depth:1},{value:"Setup",depth:2},{value:"Output:",depth:5},{value:"Boilerplate",depth:3},{value:"Request Verifications",depth:2},{value:"Running the Service",depth:2}],frontmatter:{category:"uport-credentials",index:4}}},{node:{fields:{slug:"/ethr-did-registry/readme"},headings:[{value:"Ethereum DID Registry",depth:1},{value:"Contract Deployments",depth:2},{value:"Using the Registry",depth:2},{value:"On-chain vs. Off-chain",depth:2},{value:"Identity Identifier",depth:2},{value:"Identity Ownership",depth:2},{value:"Looking up Identity Ownership",depth:3},{value:"Changing Identity Ownership",depth:3},{value:"Delegates",depth:2},{value:"Delegate Types",depth:3},{value:"Validity",depth:3},{value:"Looking up a Delegate",depth:3},{value:"Adding a Delegate",depth:3},{value:"Revoking a Delegate",depth:3},{value:"Enumerating Delegates Off-chain",depth:3},{value:"Adding Off-chain Attributes",depth:2},{value:"Setting Attributes",depth:3},{value:"Revoking Attributes",depth:3},{value:"Reading attributes",depth:3},{value:"Enumerating Linked Identity Events",depth:2},{value:"Assemble a DID Document",depth:2},{value:"Deploy contract",depth:2},{value:"Testing the Contracts",depth:2}],frontmatter:{category:"ethr-did-registry",index:0}}},{node:{fields:{slug:"/ethr-did-resolver/readme"},headings:[{value:"ethr DID Resolver",depth:1},{value:"DID method",depth:2},{value:"DID Document",depth:2},{value:"Building a DID document",depth:2},{value:"Owner Address",depth:3},{value:"Enumerating contract events for an identity",depth:3},{value:"Delegate Keys",depth:3},{value:"Non Ethereum Attributes",depth:3},{value:"Public Keys",depth:3},{value:"Hex encoded Secp256k1 Verification Key",depth:4},{value:"Base64 encoded Ed25519 Verification Key",depth:4},{value:"Service Endpoints",depth:3},{value:"Hex encoded Secp256k1 Verification Key",depth:4},{value:"Resolving a DID document",depth:2}],frontmatter:{category:"ethr-did-resolver",index:7}}},{node:{fields:{slug:"/guides/reactuporttruffle"},headings:[{value:"React-uport Truffle box",depth:1},{value:"Setup React Truffle Box",depth:2},{value:"Create the necessary uport-connect objects",depth:2},{value:"Request a user's information",depth:2},{value:"Create an Attestation",depth:2},{value:"Wrapping it up",depth:2}],frontmatter:{category:"truffle",index:0}}},{node:{fields:{slug:"/uport-connect/index"},headings:[{value:"uPort Connect",depth:1},{value:"Instantly Connect Users to Your dApp",depth:3}],frontmatter:{category:"uport-connect",index:0}}},{node:{fields:{slug:"/uport-credentials/index"},headings:[{value:"uPort Credentials",depth:1},{value:"Create & Request Attested Data",depth:2}],frontmatter:{category:"uport-credentials",index:0}}},{node:{fields:{slug:"/uport-transports/index"},headings:[{value:"uPort Transports",depth:1},{value:"Connect Users to a uPort Client",depth:3}],frontmatter:{category:"uport-transports",index:0}}},{node:{fields:{slug:"/overview/login"},headings:[{value:"Login Solutions",depth:1},{value:"Frictionless Login Across the Web",depth:2}],frontmatter:{category:"login",index:3}}},{node:{fields:{slug:"/overview/attestation"},headings:[{value:"Issue Verifications",depth:1},{value:"Contribute to the Decentralized World",depth:2}],frontmatter:{category:"attestation",index:4}}},{node:{fields:{slug:"/overview/glossary"},headings:[{value:"Terms and Definitions",depth:3}],frontmatter:{category:"glossary",index:2}}},{node:{fields:{slug:"/overview/transactions"},headings:[{value:"Requesting Transactions",depth:1},{value:"Send Users An Ethereum Transaction Request",depth:2}],frontmatter:{category:"Requesting Transactions",index:5}}},{node:{fields:{slug:"/overview/index"},headings:[{value:"Helping You Build User Centric Apps on Blockchains",depth:2},{value:"Onboarding a user to your dApp",depth:3},{value:"As a Developer You Want Users Who Are Active and Come Back to Your dApp.",depth:5},{value:"What is an Identity?",depth:2},{value:"Help Your User Build Their Identity",depth:3},{value:"But All I Really Need is an Ethereum Address!",depth:3},{value:"Asking The User to do Something",depth:3},{value:"Reasons for Asking for Identity Data",depth:3},{value:"The Problem With Centralized Identity Solutions",depth:3},{value:"Signing Ethereum Transactions",depth:2},{value:"Off-chain Data",depth:2},{value:"uPort Protocols and Libraries",depth:2},{value:"For Fully Decentralized Apps (dApps)",depth:3},{value:"For Decentralized Mobile Applications",depth:3},{value:"For Hybrid Applications",depth:3}],frontmatter:{category:"about",index:0}}},{node:{fields:{slug:"/overview/releases"},headings:[{value:"Releases",depth:1},{value:"Uport Mobile",depth:2},{value:"What's New in Version 1.5.20 build v403",depth:3},{value:"Uport Connect",depth:2},{value:"What's New in Version 1.1.0",depth:3},{value:"Personal Sign Flow",depth:3},{value:"Typed Data (ERC712) Signature Flow",depth:3},{value:"Simple App Profiles",depth:3},{value:"What's new in 1.0?",depth:3},{value:" -> ",depth:4},{value:"No public keys in the browser",depth:4},{value:" Persistance",depth:4},{value:"New functions ",depth:4},{value:", ",depth:4},{value:" -> ",depth:4},{value:" -> ",depth:4},{value:" -> ",depth:4},{value:" -> ",depth:4},{value:" -> ",depth:4},{value:" removed",depth:4},{value:"What's New in Version 0.7.8 (minor release)",depth:3},{value:"Steps to migrate",depth:4},{value:"Legacy support",depth:4},{value:"Uport Credentials (formerly Uport JS)",depth:2},{value:"What's new in Version 1.1.0?",depth:3},{value:"What's new in 1.0?",depth:4},{value:"New static method ",depth:4},{value:" -> ",depth:4},{value:"New method ",depth:4},{value:" -> ",depth:4},{value:", ",depth:4},{value:"New method ",depth:4},{value:" -> ",depth:4},{value:"New method ",depth:4},{value:" -> ",depth:4},{value:" -> ",depth:4},{value:"What's New in Version uport@0.6.5 (minor release)",depth:3},{value:"Steps to migrate",depth:5},{value:"Legacy support",depth:5}],frontmatter:{category:"releases",index:1}}},{node:{fields:{slug:"/did-jwt/reference/index"},headings:[{value:"Algorithms supported",depth:2},{value:"DID PublicKey Types",depth:2},{value:"Claims",depth:2},{value:"Modules",depth:2},{value:"Functions",depth:2},{value:"did-jwt/JWT",depth:2},{value:"did-jwt/JWT.decodeJWT(jwt) ⇒ ",depth:3},{value:"did-jwt/JWT.createJWT(payload, ",depth:3},{value:"did-jwt/JWT.verifyJWT(jwt, ",depth:3},{value:"did-jwt/JWT.resolveAuthenticator(alg, did, auth) ⇒ ",depth:3},{value:"SimpleSigner(hexPrivateKey) ⇒ ",depth:2}],frontmatter:{category:"did-jwt",index:3}}},{node:{fields:{slug:"/ethr-did/docs/index"},headings:[{value:"Ethr-DID",depth:1},{value:"A Scalable Identity Method for Ethereum Addresses",depth:2}],frontmatter:{category:"ethr-did",index:0}}},{node:{fields:{slug:"/did-jwt/guides/index"},headings:[{value:"Working with did-JWT's",depth:1},{value:"Creating a JWT",depth:2},{value:"Parameters",depth:4},{value:"Promise Return Value",depth:4},{value:"Verifying a JWT",depth:2},{value:"Parameters",depth:4},{value:"Promise Return Value",depth:4},{value:"Signer Functions",depth:2},{value:"SimpleSigner",depth:3},{value:"Parameters",depth:4},{value:"Creating Custom Signers for integrating with HSM",depth:3},{value:"Parameters",depth:4},{value:"Promise Return Value",depth:4}],frontmatter:{category:"did-jwt",index:4}}},{node:{fields:{slug:"/uport-connect/reference/index"},headings:[{value:"Classes",depth:2},{value:"Connect",depth:2},{value:"new Connect(appName, ",depth:3},{value:"connect.getProvider(",depth:3},{value:"connect.onResponse(id, cb) ⇒ ",depth:3},{value:"connect.pubResponse(response)",depth:3},{value:"connect.send(request, id, ",depth:3},{value:"connect.contract(abi) ⇒ ",depth:3},{value:"connect.sendTransaction(txObj, ",depth:3},{value:"connect.requestVerificationSignature(unsignedClaim, sub, ",depth:3},{value:"connect.requestDisclosure(",depth:3},{value:"connect.sendVerification(",depth:3},{value:"connect.setState(Update)",depth:3},{value:"connect.loadState()",depth:3},{value:"connect.logout()",depth:3},{value:"connect.reset()",depth:3},{value:"UportSubprovider",depth:2},{value:"new UportSubprovider(args)",depth:3}],frontmatter:{category:"uport-connect",index:10}}},{node:{fields:{slug:"/uport-transports/guides/modules"},headings:[{value:" uPort Transports Guide",depth:1},{value:"Request Transports",depth:2},{value:"Response Transports",depth:2},{value:" Quick Start",depth:2}],frontmatter:{category:"uport-transports",index:1}}},{node:{fields:{slug:"/uport-credentials/reference/index"},headings:[{value:"Credentials",depth:2},{value:"new Credentials(",depth:3},{value:"credentials.createDisclosureRequest(",depth:3},{value:"credentials.createVerification(",depth:3},{value:"credentials.createVerificationSignatureRequest(unsignedClaim, ",depth:3},{value:"credentials.createTxRequest(txObj, ",depth:3},{value:"credentials.createDisclosureResponse(",depth:3},{value:"credentials.processDisclosurePayload(response)",depth:3},{value:"credentials.authenticateDisclosureResponse(token, ",depth:3},{value:"credentials.verifyDisclosure(token) ⇒ ",depth:3},{value:"credentials.contract(abi) ⇒ ",depth:3},{value:"Credentials.createIdentity() ⇒ ",depth:3}],frontmatter:{category:"uport-credentials",index:10}}},{node:{fields:{slug:"/ethr-did/docs/reference/index"},headings:[{value:"Introduction",depth:2},{value:"DID Method",depth:2},{value:"Configuration",depth:2}],frontmatter:{category:"ethr-did",index:10}}},{node:{fields:{slug:"/uport-transports/reference/index"},headings:[{value:"Modules",depth:2},{value:"Constants",depth:2},{value:"Functions",depth:2},{value:"uport-transports/transport/ui",depth:2},{value:"uport-transports/transport/ui~getImageDataURI(data) ⇒ ",depth:3},{value:"uport-transports/transport/ui~close()",depth:3},{value:"uport-transports/transport/ui~makeModal(content, ",depth:3},{value:"uport-transports/transport/ui~open(data, cancel, modalText)",depth:3},{value:"uport-transports/transport/ui~notifyPushSent(fallback)",depth:3},{value:"uport-transports/transport/ui~success()",depth:3},{value:"uport-transports/transport/ui~failure(resend)",depth:3},{value:"uportModal ⇒ ",depth:2},{value:"qrModal ⇒ ",depth:2},{value:"pushModal",depth:2},{value:"successModal",depth:2},{value:"failureModal",depth:2},{value:"randomString(length) ⇒ ",depth:2},{value:"decryptResponse(encrypted, secretKey) ⇒ ",depth:2},{value:"URIHandlerSend(uriHandler, ",depth:2},{value:"poll(url, ",depth:2},{value:"poll(url, messageParse, errorParse, ",depth:2},{value:"send(token, pubEncKey, ",depth:2},{value:"sendAndNotify()",depth:2},{value:"send(displayText, message, ",depth:2},{value:"chasquiCompress(message, threshold) ⇒ ",depth:2},{value:"chasquiSend(",depth:2},{value:"send(",depth:2},{value:"getResponse() ⇒ ",depth:2},{value:"listenResponse(cb)",depth:2},{value:"onResponse() ⇒ ",depth:2},{value:"parseResponse() ⇒ ",depth:2},{value:"paramsToUrlFragment(url, ",depth:2},{value:"paramsToQueryString(url, ",depth:2},{value:"getUrlQueryParams(url) ⇒ ",depth:2},{value:"getURLJWT(url) ⇒ ",depth:2},{value:"isJWT(jwt) ⇒ ",depth:2},{value:"messageToUniversalURI(message) ⇒ ",depth:2},{value:"messageToDeeplinkURI(message, uri)",depth:2},{value:"messageToURI(message, type)",depth:2}],frontmatter:{category:"uport-transports",index:10}}},{node:{fields:{slug:"/ethr-did/docs/guides/index"},headings:[{value:"Getting Started",depth:1},{value:"Construct a New Identity",depth:2},{value:"Create Ethr-DID",depth:3},{value:"Use Existing Web3 Provider",depth:4},{value:"Ethereum Web3 Wallet Developers",depth:4},{value:"Exchange Verifiable Data",depth:2},{value:"Signing a JWT",depth:3},{value:"Verifying a JWT",depth:3},{value:"Manage Keys",depth:2},{value:"The Concept of Identity Ownership",depth:3},{value:"Changing an Owner",depth:3},{value:"Adding a Delegate Signer",depth:3},{value:"Set Public Attributes",depth:2}],frontmatter:{category:"ethr-did",index:1}}}]},announcement:{totalCount:1,edges:[{node:{frontmatter:{announcement:"Announcing EIP-712 support! See our mobile and library release notes https://developer.uport.me/overview/releases for details."}}}]}},pathContext:{}}}});
//# sourceMappingURL=path---server-8e1409eef57ba5769bed.js.map