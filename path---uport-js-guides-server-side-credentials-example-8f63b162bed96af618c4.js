webpackJsonp([75003962135590],{651:function(e,t){e.exports={data:{allPostTitles:{edges:[{node:{frontmatter:{title:"Attesting Credentials",index:2,type:"content"},fields:{slug:"/attestcredentials"}}},{node:{frontmatter:{title:"Getting Started",index:0,type:"content"},fields:{slug:"/gettingstarted"}}},{node:{frontmatter:{title:"Uport Specs",index:0,type:"content"},fields:{slug:"/readme"}}},{node:{frontmatter:{title:"React-Uport Truffle Box",index:0,type:"content"},fields:{slug:"/reactuporttruffle"}}},{node:{frontmatter:{title:"Requesting Credentials",index:1,type:"content"},fields:{slug:"/requestcredentials"}}},{node:{frontmatter:{title:"Signing Transactions",index:3,type:"content"},fields:{slug:"/signtransactions"}}},{node:{frontmatter:{title:"Clients (apps)",index:3,type:"content"},fields:{slug:"/clients"}}},{node:{frontmatter:{title:"Overview",index:0,type:"content"},fields:{slug:"/overview"}}},{node:{frontmatter:{title:"Platform",index:2,type:"content"},fields:{slug:"/platform"}}},{node:{frontmatter:{title:"Protocols",index:3,type:"content"},fields:{slug:"/protocol"}}},{node:{frontmatter:{title:"Private Chain Support",index:5,type:"content"},fields:{slug:"/lambda-olorun/readme"}}},{node:{frontmatter:{title:"Working with did-JWT's",index:4,type:"content"},fields:{slug:"/did-jwt/guides/index"}}},{node:{frontmatter:{title:"did-jwt",index:3,type:"content"},fields:{slug:"/did-jwt/reference/index"}}},{node:{frontmatter:{title:"Simple ID (muPort)",index:6,type:"content"},fields:{slug:"/muport-core-js/guides/simple-id"}}},{node:{frontmatter:{title:"How to integrate Uport-Connect",index:0,type:"content"},fields:{slug:"/uport-connect/guides/tutorial"}}},{node:{frontmatter:{title:"Glossary",index:4,type:"content"},fields:{slug:"/glossary"}}},{node:{frontmatter:{title:"Ethr DID",index:8,type:"content"},fields:{slug:"/ethr-did/readme"}}},{node:{frontmatter:{title:"Communication and Transactions",index:2,type:"content"},fields:{slug:"/uport-connect/guides/usage"}}},{node:{frontmatter:{title:"Uport JS",index:4,type:"content"},fields:{slug:"/uport-js/reference/index"}}},{node:{frontmatter:{title:"Uport-JS Server How-to",index:1,type:"content"},fields:{slug:"/uport-js/guides/server-side-credentials-example"}}},{node:{frontmatter:{title:"Uport Connect",index:4,type:"content"},fields:{slug:"/uport-connect/reference/index"}}}]},navCategories:{edges:[{node:{fields:{slug:"/attestcredentials"},headings:[{value:"Attesting Credentials",depth:1},{value:"If push is enabled",depth:6},{value:"If push is not enabled",depth:6},{value:"Calling the attest method",depth:2},{value:"Setting an expiration date",depth:2},{value:"Attesting multiple credentials",depth:2}],frontmatter:{category:"guides",index:2}}},{node:{fields:{slug:"/gettingstarted"},headings:[{value:"Getting Started",depth:1},{value:"Requirements",depth:3},{value:"1. Get the uPort App",depth:2},{value:"2. Get an Application Identity",depth:2},{value:"3. Setup Dependencies",depth:2},{value:"4. Configure and Run Code",depth:2}],frontmatter:{category:"guides",index:0}}},{node:{fields:{slug:"/readme"},headings:[{value:"uPort Specs",depth:1},{value:"Identities",depth:2},{value:"Identities created using the uPort Mobile App",depth:3},{value:"Request Flows",depth:2},{value:"More about request flows",depth:3},{value:"Request and Response Transports",depth:2},{value:"Request/Response Transports",depth:3},{value:"Off-chain Messages",depth:2},{value:"More about Off-chain Messages",depth:3},{value:"On-chain Transactions",depth:2},{value:"More about Signing Ethereum transactions",depth:3},{value:"uPort PKI",depth:2},{value:"More about the uPort PKI",depth:3}],frontmatter:{category:"reference",index:0}}},{node:{fields:{slug:"/reactuporttruffle"},headings:[{value:"React-uport Truffle box",depth:1},{value:"Setup React Truffle Box",depth:2},{value:"Create the necessary uport-connect objects",depth:2},{value:"Request a user's information",depth:2},{value:"Create an Attestation",depth:2},{value:"Wrapping it up",depth:2}],frontmatter:{category:"tutorials",index:0}}},{node:{fields:{slug:"/requestcredentials"},headings:[{value:"Requesting Credentials",depth:1},{value:"Desktop web",depth:3},{value:"Mobile web",depth:3},{value:"Calling the request method",depth:2},{value:"Requesting specific credentials",depth:2},{value:"Verifying credentials",depth:2},{value:"Enabling Push Notifications",depth:2}],frontmatter:{category:"guides",index:1}}},{node:{fields:{slug:"/signtransactions"},headings:[{value:"Signing Transactions",depth:1},{value:"Supply the contract ABI",depth:2},{value:"Create the contract object",depth:2},{value:"Call a basic method on the contract",depth:2},{value:"Call a tx signing method on the contract",depth:2},{value:"Wait for mining to complete",depth:2}],frontmatter:{category:"guides",index:3}}},{node:{fields:{slug:"/clients"},headings:[{value:"Clients (apps)",depth:1},{value:"uPort Mobile Wallet",depth:2},{value:"uPort App Manager",depth:2},{value:"uPort JS Client",depth:2}],frontmatter:{category:"overview",index:3}}},{node:{fields:{slug:"/overview"},headings:[{value:"OVERVIEW",depth:1}],frontmatter:{category:"overview",index:0}}},{node:{fields:{slug:"/platform"},headings:[{value:"PLATFORM",depth:1},{value:"Ethereum Identity Components",depth:2},{value:"Network Microservices",depth:2},{value:"Libraries",depth:2}],frontmatter:{category:"overview",index:2}}},{node:{fields:{slug:"/protocol"},headings:[{value:"PROTOCOLS",depth:1},{value:"uPort Identity Protocol",depth:2},{value:"uPort Claims Protocol",depth:2}],frontmatter:{category:"overview",index:3}}},{node:{fields:{slug:"/lambda-olorun/readme"},headings:[{value:"lambda-olorun",depth:1},{value:"Setting a new private chain",depth:2},{value:"Deploy uPort Identity Contracts",depth:3},{value:"Configure Olorun hosted service for a new private chain",depth:3},{value:"Run your own Olorun",depth:3},{value:"Contributing",depth:2}],frontmatter:{category:"guides",index:5}}},{node:{fields:{slug:"/messages/encryption"},headings:[{value:"Message Encryption",depth:1},{value:"Encryption Public Key resolution",depth:2},{value:"Request/Response resolution",depth:2},{value:"JOSE JWK Standards",depth:3},{value:"Encrypting the request",depth:2},{value:"Decrypting the request",depth:2},{value:"Padding",depth:2},{value:"Legacy Encryption of the request",depth:2},{value:"Encoding the encrypted data",depth:3}],frontmatter:{category:"reference",index:null}}},{node:{fields:{slug:"/messages/index"},headings:[{value:"Off-chain Messages",depth:1},{value:"JSON Web Token",depth:2},{value:"Requirements",depth:3},{value:"JOSE Header",depth:4},{value:"Attributes",depth:4},{value:"Signature Verification",depth:3},{value:"Message Encryption",depth:3},{value:"Unsigned Requests (Deprecated)",depth:2},{value:"Standard Unsigned Parameters",depth:3},{value:"Message types",depth:2}],frontmatter:{category:"reference",index:null}}},{node:{fields:{slug:"/messages/privatechain"},headings:[{value:"Private Chain Provisioning Message",depth:1},{value:"Attributes",depth:2}],frontmatter:{category:"reference",index:null}}},{node:{fields:{slug:"/messages/sharereq"},headings:[{value:"Selective Disclosure Request",depth:1},{value:"Attributes",depth:4},{value:"Unsigned Requests (Deprecated)",depth:2}],frontmatter:{category:"reference",index:null}}},{node:{fields:{slug:"/messages/shareresp"},headings:[{value:"Selective Disclosure Response",depth:1},{value:"Attributes",depth:4}],frontmatter:{category:"reference",index:null}}},{node:{fields:{slug:"/messages/verification"},headings:[{value:"Verification",depth:1},{value:"Attributes",depth:2},{value:"Claims Best Practices",depth:2},{value:"Use atomic claims",depth:3},{value:"Bundling multiple claims as one",depth:3},{value:"Claim Taxonomy",depth:3}],frontmatter:{category:"reference",index:null}}},{node:{fields:{slug:"/messages/tx"},headings:[{value:"Ethereum Transaction Request",depth:1},{value:"Signed Transaction Request",depth:2},{value:"Attributes",depth:3},{value:"ERC 67 Unsigned Transaction Request",depth:2},{value:"Attributes",depth:3},{value:"Addresses and Network selection",depth:2},{value:"Transaction Request Validity",depth:2},{value:"ETH Value Transfer",depth:3},{value:"ETH Value Transfer",depth:3},{value:"Ethereum Smart Contract creation",depth:3},{value:"Client Callback",depth:2}],frontmatter:{category:"reference",index:null}}},{node:{fields:{slug:"/messages/verificationreq"},headings:[{value:"Verified Claim Request",depth:1},{value:"Attributes",depth:4}],frontmatter:{category:"reference",index:null}}},{node:{fields:{slug:"/flows/index"},headings:[{value:"Uport Request Flows",depth:1},{value:"Unified Message Request Flow",depth:2},{value:"Specific Application flows",depth:2},{value:"Errors",depth:2}],frontmatter:{category:"reference",index:null}}},{node:{fields:{slug:"/flows/privatechain"},headings:[{value:"Private Chain Provisioning Flow",depth:1},{value:"Requirements",depth:2},{value:"Provisioning Methodology",depth:2},{value:"Endpoint",depth:2},{value:"Client Callback",depth:2},{value:"Successful Response",depth:3},{value:"Errors",depth:3}],frontmatter:{category:"reference",index:null}}},{node:{fields:{slug:"/flows/selectivedisclosure"},headings:[{value:"Selective Disclosure Flow",depth:1},{value:"Endpoint",depth:2},{value:"Send Request",depth:2},{value:"Deprecated Flows",depth:3},{value:"Client Callback",depth:2},{value:"Successful Response",depth:3},{value:"Errors",depth:3}],frontmatter:{category:"reference",index:null}}},{node:{fields:{slug:"/flows/tx"},headings:[{value:"Ethereum Transaction Flow",depth:1},{value:"Endpoint",depth:2},{value:"Send Request",depth:2},{value:"Client Callback",depth:2},{value:"Successful Response",depth:3},{value:"Errors",depth:3}],frontmatter:{category:"reference",index:null}}},{node:{fields:{slug:"/flows/verification"},headings:[{value:"Send Verification Flow",depth:1},{value:"Endpoint",depth:2},{value:"Send Verifications",depth:2},{value:"Deprecated Flows",depth:3},{value:"Client Callback",depth:2},{value:"Successful Response",depth:3}],frontmatter:{category:"reference",index:null}}},{node:{fields:{slug:"/flows/verificationreq"},headings:[{value:"Verified Claim Request Flow",depth:1},{value:"Endpoint",depth:2},{value:"Send Request",depth:2},{value:"Client Callback",depth:2},{value:"Successful Response",depth:3},{value:"Errors",depth:3}],frontmatter:{category:"reference",index:null}}},{node:{fields:{slug:"/pki/diddocument"},headings:[{value:"Decentralized Identity Document (DID Document)",depth:1},{value:"Contents",depth:2},{value:"Parameters",depth:3}],frontmatter:{category:"reference",index:null}}},{node:{fields:{slug:"/pki/identitydocument"},headings:[{value:"Identity Document",depth:1},{value:"Contents",depth:2},{value:"Parameters",depth:3}],frontmatter:{category:"reference",index:null}}},{node:{fields:{slug:"/pki/index"},headings:[{value:"uPort PKI",depth:1},{value:"Purpose",depth:2},{value:"Creating and Verifying a JWT",depth:2},{value:"Identity Document",depth:2},{value:"Verifying a signature",depth:2},{value:"Resolving the Public Key for ",depth:3},{value:"Resolving the Public Encryption Key for ",depth:3},{value:"Registering an Identity Document",depth:2},{value:"External Accounts (Key Pairs)",depth:3},{value:"Smart Contract Accounts",depth:3},{value:"uPort Mobile App Created Identities",depth:3}],frontmatter:{category:"reference",index:null}}},{node:{fields:{slug:"/rest-apis/fuel-server"},headings:[{value:"Transaction Fueling Server",depth:1},{value:"API Description",depth:2},{value:"Fuel Token",depth:3},{value:"Fund address",depth:3},{value:"Endpoint",depth:4},{value:"Header",depth:4},{value:"Body",depth:4},{value:"Response",depth:4},{value:"Response data",depth:4}],frontmatter:{category:"reference",index:null}}},{node:{fields:{slug:"/rest-apis/relay-server"},headings:[{value:"Meta Transaction Relaying Server",depth:1},{value:"API Description",depth:2},{value:"Fuel Token",depth:3},{value:"MetaSignedTx",depth:3},{value:"Endpoint",depth:4},{value:"Header",depth:4},{value:"Body",depth:4},{value:"Response",depth:4},{value:"Response data",depth:4}],frontmatter:{category:"reference",index:null}}},{node:{fields:{slug:"/transports/index"},headings:[{value:"Request/Response Transports",depth:1},{value:"Requests",depth:2},{value:"Open URL",depth:3},{value:"QR Code",depth:3},{value:"Push Notifications",depth:3},{value:"Responses",depth:2},{value:"Redirect callback type",depth:3},{value:"HTTP post callback type",depth:3},{value:"Messaging Server",depth:2},{value:"Preparing callback URL",depth:3},{value:"Listening for Response",depth:3},{value:"Endpoint",depth:4},{value:"Response",depth:4},{value:"Response data",depth:4},{value:"Cleanup",depth:3},{value:"Endpoint",depth:4},{value:"Response",depth:4},{value:"Examples",depth:2},{value:"Mobile Browser Transport",depth:3},{value:"Desktop Browser Serverless Transport",depth:3},{value:"Desktop Browser Server Backed Transport",depth:3},{value:"Push Notification Transport",depth:3}],frontmatter:{category:"reference",index:null}}},{node:{fields:{slug:"/transports/push"},headings:[{value:"Push Notification Transport",depth:1},{value:"Proper encoding of the request",depth:3},{value:"Sending the request",depth:2},{value:"Push notification server",depth:3},{value:"Endpoint",depth:4},{value:"Headers",depth:4},{value:"Body",depth:4},{value:"Response",depth:4},{value:"Response data",depth:4}],frontmatter:{category:"reference",index:null}}},{node:{fields:{slug:"/did-jwt/guides/index"},headings:[{value:"Working with did-JWT's",depth:1},{value:"Creating a JWT",depth:2},{value:"Parameters",depth:4},{value:"Promise Return Value",depth:4},{value:"Verifying a JWT",depth:2},{value:"Parameters",depth:4},{value:"Promise Return Value",depth:4},{value:"Signer Functions",depth:2},{value:"SimpleSigner",depth:3},{value:"Parameters",depth:4},{value:"Creating Custom Signers for integrating with HSM",depth:3},{value:"Parameters",depth:4},{value:"Promise Return Value",depth:4}],frontmatter:{category:"guides",index:4}}},{node:{fields:{slug:"/did-jwt/reference/index"},headings:[{value:"Algorithms supported",depth:2},{value:"DID PublicKey Types",depth:2},{value:"Claims",depth:2},{value:"Modules",depth:2},{value:"Functions",depth:2},{value:"did-jwt/JWT",depth:2},{value:"did-jwt/JWT.decodeJWT(jwt) ⇒ ",depth:3},{value:"did-jwt/JWT.createJWT(payload, ",depth:3},{value:"did-jwt/JWT.verifyJWT(jwt, ",depth:3},{value:"did-jwt/JWT.resolveAuthenticator(alg, did, auth) ⇒ ",depth:3},{value:"SimpleSigner(hexPrivateKey) ⇒ ",depth:2}],frontmatter:{category:"reference",index:3}}},{node:{fields:{slug:"/muport-core-js/guides/simple-id"},headings:[{value:"Simple ID (muPort)",depth:1},{value:"Onboarding/Signup",depth:2},{value:"Interacting with a service",depth:2},{value:"Setting up recovery network",depth:2},{value:"Using the recovery network",depth:2},{value:"Updating the encrypted recovery shards",depth:2}],frontmatter:{category:"guides",index:6}}},{node:{fields:{slug:"/uport-connect/guides/tutorial"},headings:[{value:"How to integrate uPort into your dapp",depth:1},{value:"Introduction",depth:2},{value:"Getting started",depth:2}],frontmatter:{category:"tutorials",index:0}}},{node:{fields:{slug:"/glossary"},headings:[],frontmatter:{category:"overview",index:4}}},{node:{fields:{slug:"/ethr-did/readme"},headings:[{value:"ethr DID library",depth:1},{value:"DID method",depth:2},{value:"Configuration",depth:2},{value:"Getting Started",depth:1},{value:"Construct a New Identity",depth:2},{value:"Create ethr DID",depth:3},{value:"Use Existing Web3 Provider",depth:4},{value:"Ethereum Web3 Wallet developers",depth:4},{value:"Exchange Verifiable Data",depth:2},{value:"Signing a JWT",depth:3},{value:"Verifying a JWT",depth:3},{value:"Manage Keys",depth:2},{value:"The Concept of Identity Ownership",depth:3},{value:"Changing an Owner",depth:3},{value:"Adding a Delegate Signer",depth:3},{value:"Set public attributes",depth:2}],frontmatter:{category:"reference",index:8}}},{node:{fields:{slug:"/uport-connect/guides/usage"},headings:[{value:"Communication and Transactions how-to",depth:1},{value:"Communication",depth:1},{value:"Default QR flow",depth:2},{value:"Default Mobile Requests",depth:2},{value:"Push Notifications",depth:2},{value:"Ethereum Interactions and Transactions",depth:1},{value:"Using with web3",depth:2},{value:"Using a provider",depth:2},{value:"Using without web3",depth:2}],frontmatter:{category:"tutorials",index:2}}},{node:{fields:{slug:"/uport-js/reference/index"},headings:[{value:"Modules",depth:2},{value:"Classes",depth:2},{value:"uport-js/JWT",depth:2},{value:"uport-js/JWT.createJWT(",depth:3},{value:"uport-js/JWT.verifyJWT(",depth:3},{value:"Credentials",depth:2},{value:"new Credentials(",depth:3},{value:"credentials.createRequest(",depth:3},{value:"credentials.createVerificationRequest(unsignedClaim, sub) ⇒ ",depth:3},{value:"credentials.receive(token, ",depth:3},{value:"credentials.push(token, payload, pubEncKey) ⇒ ",depth:3},{value:"credentials.attest(",depth:3},{value:"credentials.lookup(address) ⇒ ",depth:3}],frontmatter:{category:"reference",index:4}}},{node:{fields:{slug:"/uport-js/guides/server-side-credentials-example"},headings:[{value:"Server-side Credentials",depth:1},{value:"Prerequisites:",depth:3},{value:"Register an App",depth:2},{value:"Setup a Requestor Service",depth:2},{value:"Setup a Creator Service",depth:2},{value:"For the fields of the credential:",depth:3},{value:"Setup a Verification service",depth:2}],frontmatter:{category:"tutorials",index:1}}},{node:{fields:{slug:"/uport-connect/reference/index"},headings:[{value:"Modules",depth:2},{value:"Classes",depth:2},{value:"uport-connect/topicFactory",depth:2},{value:"uport-connect/topicFactory~TopicFactory(isOnMobile, pollingInterval, chasquiUrl) ⇒ ",depth:3},{value:"TopicFactory~waitForHashChange(topicName, cb)",depth:4},{value:"TopicFactory~pollForResult(topicName, url, cb, cancelled)",depth:4},{value:"TopicFactory~clearTopic(url)",depth:4},{value:"TopicFactory~newTopic(topicName) ⇒ ",depth:4},{value:"Connect ⇐ ",depth:2},{value:"new Connect(appName, ",depth:3},{value:"connect.getWeb3() ⇒ ",depth:3},{value:"connect.getProvider() ⇒ ",depth:3},{value:"connect.requestCredentials(",depth:3},{value:"connect.requestAddress(",depth:3},{value:"connect.attestCredentials(credential, ",depth:3},{value:"connect.request(request) ⇒ ",depth:3},{value:"connect.contract(abi) ⇒ ",depth:3},{value:"connect.sendTransaction(txobj) ⇒ ",depth:3},{value:"ConnectCore",depth:2},{value:"new ConnectCore(appName, ",depth:3},{value:"connectCore.getProvider() ⇒ ",depth:3},{value:"connectCore.requestCredentials(",depth:3},{value:"connectCore.requestAddress(",depth:3},{value:"connectCore.attestCredentials(credential, ",depth:3},{value:"connectCore.request(request) ⇒ ",depth:3},{value:"connectCore.contract(abi) ⇒ ",depth:3},{value:"connectCore.sendTransaction(txobj) ⇒ ",depth:3},{value:"UportSubprovider",depth:2},{value:"new UportSubprovider(args)",depth:3},{value:"uportSubprovider.send()",depth:3},{value:"uportSubprovider.sendAsync(payload, callback)",depth:3}],frontmatter:{category:"reference",index:4}}}]},postBySlug:{htmlAst:{type:"root",children:[{type:"element",tagName:"h1",properties:{id:"server-side-credentials"},children:[{type:"element",tagName:"a",properties:{href:"#server-side-credentials",ariaHidden:!0,className:["anchor"]},children:[{type:"element",tagName:"svg",properties:{ariaHidden:"true",height:16,version:"1.1",viewBox:"0 0 16 16",width:16},children:[{type:"element",tagName:"path",properties:{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},children:[]}]}]},{type:"text",value:"Server-side Credentials"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Here we will demonstrate how to create and sign a custom credential on a server (called the Creator) and present this to a uport identity. The user of the uPort app will add this credential to her list of credentials. Then we'll show how another service (called the Requestor) can request this credential and validate the corresponding JSON Web Token."}]},{type:"text",value:"\n"},{type:"element",tagName:"h3",properties:{id:"prerequisites"},children:[{type:"element",tagName:"a",properties:{href:"#prerequisites",ariaHidden:!0,className:["anchor"]},children:[{type:"element",tagName:"svg",properties:{ariaHidden:"true",height:16,version:"1.1",viewBox:"0 0 16 16",width:16},children:[{type:"element",tagName:"path",properties:{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},children:[]}]}]},{type:"text",value:"Prerequisites:"}]},{type:"text",value:"\n"},{type:"element",tagName:"ol",properties:{},children:[{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"text",value:"The code for this tutorial can be found in the "},{type:"element",tagName:"a",properties:{href:"github.com/uport-project/uport-js/blob/develop/examples/simple-credential-tutorial/"},children:[{type:"text",value:"Uport-JS examples."}]},{type:"text",value:".  Use this to follow the tutorial."}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"text",value:"A publicly available IP address to deploy the service to.  An HTTP tunneling service, such as "},{type:"element",tagName:"a",properties:{href:"https://ngrok.com"},children:[{type:"text",value:"Ngrok"}]},{type:"text",value:" can be used."}]},{type:"text",value:"\n"}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{id:"register-an-app"},children:[{type:"element",tagName:"a",properties:{href:"#register-an-app",ariaHidden:!0,className:["anchor"]},children:[{type:"element",tagName:"svg",properties:{ariaHidden:"true",height:16,version:"1.1",viewBox:"0 0 16 16",width:16},children:[{type:"element",tagName:"path",properties:{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},children:[]}]}]},{type:"text",value:"Register an App"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"We have created application identities and hard-coded them in the "},{type:"element",tagName:"a",properties:{href:"github.com/uport-project/uport-js/blob/develop/examples/simple-credential-tutorial"},children:[{type:"text",value:"examples"}]},{type:"text",value:" for convenience and educational purposes.  If you wish to expand upon these examples please utilize our "},{type:"element",tagName:"a",properties:{href:"https://appmanager.uport.me"},children:[{type:"text",value:"Application Manager"}]},{type:"text",value:" or "},{type:"element",tagName:"a",properties:{href:"https://github.com/uport-project/uport-js-client"},children:[{type:"text",value:"Uport JS Client"}]},{type:"text",value:" to create a new application identity and replace the signing key and MNID in the examples with your own."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"element",tagName:"em",properties:{},children:[{type:"text",value:"Please note that in practice the signing key for the identity should be protected information"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"To create identities using the "},{type:"element",tagName:"a",properties:{href:"https://appmanager.uport.me"},children:[{type:"text",value:"uPort AppManager"}]},{type:"text",value:","}]},{type:"text",value:"\n"},{type:"element",tagName:"ol",properties:{},children:[{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"text",value:"Navigate to https:appmanager.uport.me"}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"text",value:'Click "Connect with uPort".'}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"text",value:"Scan the QR using the uPort mobile application"}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"text",value:'Once authenticated, select "New App".'}]},{type:"text",value:"\n"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"This will create a uPort identity for your app and display a private key.  This key will be used to instantiate a Simple Signer object which you will use in this example to sign credentials. It's important that you save and secure this key!"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Now that you have the application identity sorted, lets step into the code."}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{id:"setup-a-requestor-service"},children:[{type:"element",tagName:"a",properties:{href:"#setup-a-requestor-service",ariaHidden:!0,className:["anchor"]},children:[{type:"element",tagName:"svg",properties:{ariaHidden:"true",height:16,version:"1.1",viewBox:"0 0 16 16",width:16},children:[{type:"element",tagName:"path",properties:{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},children:[]}]}]},{type:"text",value:"Setup a Requestor Service"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"If you haven't yet, clone the Uport-JS "},{type:"element",tagName:"a",properties:{href:"github.com/uport-project/uport-js"},children:[{type:"text",value:"repository"}]},{type:"text",value:" and from the root of the project change directory to "},{type:"element",tagName:"em",properties:{},children:[{type:"text",value:"examples/simple-credential-tutorial"}]},{type:"text",value:", then "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"npm install"}]},{type:"text",value:" to ensure required dependencies are present."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"The file "},{type:"element",tagName:"em",properties:{},children:[{type:"text",value:"requestcredential.js"}]},{type:"text",value:" contains a service that will request the MNID identifier of the mobile application.  This identifier will be used throughout the tutorial."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"With a private key obtained from creating an application identity, use it to create a "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"SimpleSigner"}]},{type:"text",value:" object. This object returns a function that is configured to sign data, in this case it will used to sign the JWT."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"This example service also requires a public IP.  Update the variable assignment to "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"endpoint"}]},{type:"text",value:" to reference a public IP or HTTP tunnel using a service like "},{type:"element",tagName:"a",properties:{href:"https://ngrok.com"},children:[{type:"text",value:"Ngrok"}]},{type:"text",value:"."}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"],dataLanguage:"js"},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-js"]},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"let"}]},{type:"text",value:" signer "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:" uport"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"SimpleSigner"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"<"}]},{type:"text",value:"your key here"},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:">"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:"\n"},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"let"}]},{type:"text",value:" endpoint "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"<"}]},{type:"text",value:"replace "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"this"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"with"}]},{type:"text",value:" a "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"public"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","constant"]},children:[{type:"text",value:"IP"}]},{type:"text",value:" or "},{type:"element",tagName:"span",properties:{className:["token","constant"]},children:[{type:"text",value:"HTTP"}]},{type:"text",value:" tunnel"},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:">"}]}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Then create a "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"Credentials"}]},{type:"text",value:" object using the signer and the MNID identifier of the application identity (or use the default identity):"}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"],dataLanguage:"js"},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-js"]},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"const"}]},{type:"text",value:" credentials "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"new"}]},{type:"text",value:" "},{type:"element",
tagName:"span",properties:{className:["token","class-name"]},children:[{type:"text",value:"uport"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"Credentials"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n  appName"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'Credential Tutorial'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:"\n  address"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'2od4Re9CL92phRUoAhv1LFcFkx2B9UAin92'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:"    "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// MNID of the application identity"}]},{type:"text",value:"\n  signer"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" signer                                     "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// Signer object created with the private signing key"}]},{type:"text",value:"\n"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Using "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"express"}]},{type:"text",value:" we wrap the requesting of these credentials in a service using the default route "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"app.get('/')"}]},{type:"text",value:"."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"When a client makes a request of the default route the service will call "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"credentials.createRequest"}]},{type:"text",value:" to request information from the mobile client.  The "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"createRequest()"}]},{type:"text",value:" function creates a signed JWT containing the request and the MNID of the mobile client by default, which is what we are seeking.  An optional array of requested profile information can be passed as the value for the "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"requested"}]},{type:"text",value:" attribute.  We are including this here to show the capability, however we only need the MNID identifier of the uPort identity for the purpose of this tutorial."}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"],dataLanguage:"js"},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-js"]},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"text",value:"credentials"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"createRequest"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n    requested"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"["}]},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'name'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'avatar'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'phone'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'country'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"]"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:"\n    callbackUrl"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:'"<public address>/callback"'}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:"            "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// publicly available IP address for the callback"}]},{type:"text",value:"\n    exp"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" Math"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"floor"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"new"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","class-name"]},children:[{type:"text",value:"Date"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"getTime"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"/"}]},{type:"element",tagName:"span",properties:{className:["token","number"]},children:[{type:"text",value:"1000"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"+"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","number"]},children:[{type:"text",value:"300"}]},{type:"text",value:"     "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// expiration for the request"}]},{type:"text",value:"\n  "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"then"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"function"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"response"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// see step 4..."}]},{type:"text",value:"\n  "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"The "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"callbackUrl"}]},{type:"text",value:" field specifies where the mobile app user should send the credential, should they agree to share it.  If you are running the app on a local network and your mobile device has access to the the local network you should put your local IP address here, followed by the route "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"/callback"}]},{type:"text",value:".  Otherwise you will need a publicly available address to utilize the service we are creating.  An HTTP tunneling service like "},{type:"element",tagName:"a",properties:{href:"https://ngrok.com"},children:[{type:"text",value:"Ngrok"}]},{type:"text",value:" can be used for the purposes of this tutorial."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"There is also an expiry field, denoted "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"exp"}]},{type:"text",value:", which represents the unix epoch when the request will expire. In our example we use 300 seconds (5 minutes) in the future. This means that if the user waits longer than 300 seconds to respond it will not be accepted as valid."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"To interact with the server, run"}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"],dataLanguage:"js"},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-js"]},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"text",value:"node requestcredential"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"js"}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"When the mobile app user approves the request to share their credentials after scanning the code, the "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"/callback"}]},{type:"text",value:" route is called using "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"app.post('/callback')"}]},{type:"text",value:".  The service will output the result of it's operations to the node console."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"A successful request will result in output resembling the following:"}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"],dataLanguage:"sh"},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-sh"]},children:[{type:"element",tagName:"code",properties:{className:["language-sh"]},children:[{type:"text",value:"Decoded JWT:\n\n{ '@context': 'http://schema.org',\n  '@type': 'Person',\n  publicKey: '0x04e543f2b14163a814e732a220613ad4a189ed7a74398ca74ecafb3913c7ceed1e861101ba522a5bda2c341bc604b738d4f9a36e13cac6a54ecc9caab74dd29947',\n  publicEncKey: 'UThhBIP5XWo6r/oZhBsrTIwc2ZOSGCcfBcRhIuB4GEA=',\n  address: '2orwKquTNVjJJvxjRnUxY3sVKCNqoNEow1pW',\n  networkAddress: '2orwKquTNVjJJvxjRnUY3sVKCNqoNEow1pW' }"}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Save the value of the "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"address"}]},{type:"text",value:" key for the next two examples.  This is your MNID."}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{id:"setup-a-creator-service"},children:[{type:"element",tagName:"a",properties:{href:"#setup-a-creator-service",ariaHidden:!0,className:["anchor"]},children:[{type:"element",tagName:"svg",properties:{ariaHidden:"true",height:16,version:"1.1",viewBox:"0 0 16 16",width:16},children:[{type:"element",tagName:"path",properties:{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},children:[]}]}]},{type:"text",value:"Setup a Creator Service"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Inspecting the file "},{type:"element",tagName:"em",properties:{},children:[{type:"text",value:"createcredential.js"}]},{type:"text",value:" there is a minimal express server setup to run on port "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"8081"}]},{type:"text",value:" and code that is configured with a default signing identity.  The example will run as-is, however for the purposes of this example we are assuming an application identity was created and you have your own private key to use.  You should use the same information from step one."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"With a private key obtained from creating an application identity, use it to create a "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"SimpleSigner"}]},{type:"text",value:" object. This object returns a function that is configured to sign data, in this case it will used to sign the credential."}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"],dataLanguage:"js"},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-js"]},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"let"}]},{type:"text",value:" signer "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:" uport"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"SimpleSigner"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"<"}]},{type:"text",value:"your key here"},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:">"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Then create a "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"Credentials"}]},{type:"text",value:" object using the signer and the MNID identifier of the application identity (or use the default identity):"}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"],dataLanguage:"js"},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-js"]},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"let"}]},{type:"text",value:" credentials "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"new"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","class-name"]},children:[{type:"text",value:"uport"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"Credentials"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n  appName"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'Credential Tutorial'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:"\n  address"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'2od4Re9CL92phRUoAhv1LFcFkx2B9UAin92'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:"    "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// MNID of the application identity"}]},{type:"text",value:"\n  signer"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" signer                                     "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// Signer object created with the private signing key"}]},{type:"text",value:"\n"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"When a client makes a request of the default route the service will call "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"credentials.attest()"}]},{type:"text",value:" in order to sign the credential."}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"],dataLanguage:"js"},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-js"]},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"text",value:"credentials"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"attest"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n  sub"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'<uport Id of identity in mobile app>'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:"\n  exp"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","number"]},children:[{type:"text",value:"1552046024"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:"\n  claim"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'My Title'"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'KeyOne'"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'ValueOne'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'KeyTwo'"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'Value2'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'Last Key'"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'Last Value'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:"\n"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"h3",properties:{id:"for-the-fields-of-the-credential"},children:[{type:"element",tagName:"a",properties:{href:"#for-the-fields-of-the-credential",ariaHidden:!0,className:["anchor"]},children:[{type:"element",tagName:"svg",properties:{ariaHidden:"true",height:16,version:"1.1",viewBox:"0 0 16 16",width:16},children:[{type:"element",tagName:"path",properties:{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},children:[]}]}]},{type:"text",value:"For the fields of the credential:"}]},{type:"text",value:"\n"},{type:"element",tagName:"ul",properties:{},children:[{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"sub"}]},{type:"text",value:" is the subject. Set this to the uPort Id of the user that is supposed to receive the credential. For testing purposes this would be the uPort identity shown on the mobile app of the reader."}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"text",value:"The "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"exp"}]},{type:"text",value:" field is the expiry of the token, in Unix time (seconds precision)."}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"text",value:"For the "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"claim"}]},{type:"text",value:" field, put your own custom object or leave the defaults. The format of the claim needs to be "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"{'Title': {'key':'value', 'another key': 'another value', ...}}"}]},{type:"text",value:" or simply "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"{'Title' : 'Value'}"}]},{type:"text",value:". We do not officially support deeper nested claims at this time."}]},{type:"text",value:"\n"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"The "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"attest()"}]},{type:"text",value:" function returns a promise that resolves to a JSON Web Token. We're going to present this token to the user through a URL that looks like this:"}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"],dataLanguage:"js"},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-js"]},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"text",value:"me"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"uport"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:"add"},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"?"}]},{type:"text",value:"attestations"},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"<"}]},{type:"element",tagName:"span",properties:{className:["token","constant"]},children:[{type:"text",value:"JSON"}]},{type:"text",value:" Web Token"},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:">"}]},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"&"}]},{type:"text",value:"callback_type"},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:"post"}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"We present this to the user in the form of a QR code. When you scan this code with your mobile app you should see an alert that you are about to add a credential. It should reference the Creator app as the identity giving you this credential. This will add the credential locally to your phone."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"We also create a clickable link. If you click on this link in a mobile browser you will be taken to the uport iOS app."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"When you're done editing the file you may run the Creator service like so:\nThe service is now ready to run.  Using a terminal from the root of the "},{type:"element",tagName:"em",properties:{},children:[{type:"text",value:"simple-credential-tutorial"}]},{type:"text",value:" execute "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"node credentials.js"}]},{type:"text",value:".  Now use a browser to navigate to "},{type:"element",tagName:"em",properties:{},children:[{type:"element",tagName:"a",properties:{href:"http://localhost:8081"},children:[{type:"text",value:"http://localhost:8081"}]}]},{type:"text",value:" and interact with the service."}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"],dataLanguage:"sh"},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-sh"]},children:[{type:"element",tagName:"code",properties:{className:["language-sh"]},children:[{type:"text",value:"node createcredential.js"}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"If you open your browser to "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"http://localhost:8081/"
}]},{type:"text",value:" you should see the QR code with the credential, which you may scan with the uPort app.  After scanning the QR you should see output resembling the following"}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"],dataLanguage:"js"},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-js"]},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:" header"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:" typ"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'JWT'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:" alg"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'ES256K'"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:"\n  payload"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:"\n   "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:" iss"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'2od4Re9CL92phRUoAhv1LFcFkx2B9UAin92'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:"\n     iat"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","number"]},children:[{type:"text",value:"1526360544"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:"\n     sub"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'2orwKquTNVjJJvxjRnUY3sVKCNqoNEow1pW'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:"\n     claim"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'My Title'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"["}]},{type:"text",value:"Object"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"]"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:"\n     exp"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","number"]},children:[{type:"text",value:"1552046024"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:"\n  signature"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'4a5_4l0QOUEjt5dEAUpdU17S6pYNY28xlaA9TJbPOB2AWQ0338MvReWwp_sN20HS02wVOuWkxjpmFrxN3ySFkA'"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{id:"setup-a-verification-service"},children:[{type:"element",tagName:"a",properties:{href:"#setup-a-verification-service",ariaHidden:!0,className:["anchor"]},children:[{type:"element",tagName:"svg",properties:{ariaHidden:"true",height:16,version:"1.1",viewBox:"0 0 16 16",width:16},children:[{type:"element",tagName:"path",properties:{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},children:[]}]}]},{type:"text",value:"Setup a Verification service"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"The file "},{type:"element",tagName:"em",properties:{},children:[{type:"text",value:"verifycredential.js"}]},{type:"text",value:" contains a simple node express server which will request the same credential that the Creator service gave out. The Requestor server will then validate that the identity who is providing the credential is the same identity that received the credential from the Creator service."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"As with the Creator service we start by setting up the Signer using the private key from the App Manager, and the "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"Credentials"}]},{type:"text",value:" object using the uPort identifier of our Requestor app. We also set up "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"bodyParser"}]},{type:"text",value:" so that we can parse the JWT that we will get back from the user."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"When we load the app using "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"app.get('/')"}]},{type:"text",value:" we use "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"createRequest()"}]},{type:"text",value:" in order to request a specific credential from the user. Here we will request the "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"Custom Attestation"}]},{type:"text",value:" credential. We will use "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"verified"}]},{type:"text",value:" to denote which credentials we are requesting."}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"],dataLanguage:"js"},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-js"]},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"text",value:"credentials"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"createRequest"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n  verified"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"["}]},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"<"}]},{type:"text",value:"Title "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"of"}]},{type:"text",value:" the credential"},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:">"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"]"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:"\n  callbackUrl"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'http://192.168.1.34:8081/callback'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:"\n  exp"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" Math"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"floor"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"new"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","class-name"]},children:[{type:"text",value:"Date"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"getTime"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"/"}]},{type:"element",tagName:"span",properties:{className:["token","number"]},children:[{type:"text",value:"1000"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"+"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"<"}]},{type:"text",value:"expiry time "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"in"}]},{type:"text",value:" seconds"},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:">"}]},{type:"text",value:"\n"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Remember, the "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"createRequest()"}]},{type:"text",value:" function creates a signed JWT containing the request.  The mobile app can then validate that the correct application identity sent the request."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"To interact with the server, run"}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"],dataLanguage:"sh"},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-sh"]},children:[{type:"element",tagName:"code",properties:{className:["language-sh"]},children:[{type:"text",value:"node verifycredential.js"}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"When the mobile app user approves the request to share their credential after scanning the code, the "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"/callback"}]},{type:"text",value:" route is called using "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"app.post('/callback')"}]},{type:"text",value:". Here we fetch the response JWT using "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"req.body.access_token"}]},{type:"text",value:"."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Once we have the JWT we wish to validate it. We use the "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"receive()"}]},{type:"text",value:" function first. This validates the JWT by checking that the signature matches the public key of the issuer. This validation is done both for the overall JWT and also for the JWTs that are sent in the larger payload."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Next we check that the issuer of the response token (i.e. the user) matches the subject ("},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"sub"}]},{type:"text",value:" field) of the returned credential, that the issuer of the returned credential is the Creator App, and that the credential has title "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"My Title"}]},{type:"text",value:" with the values defined by the Creator App."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"If everything checks out, you should see the output"}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"],dataLanguage:"js"},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-js"]},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"text",value:"Credential verified"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"in the console. Congratulations, you have verified the credential!"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"To test out everything, try checking for a different attestation and make sure it fails. Also try waiting until the request expires to make sure that the response fails - it should throw an error in this case."}]}],data:{quirksMode:!1}},timeToRead:9,excerpt:"Server-side Credentials Here we will demonstrate how to create and sign a custom credential on a server (called the Creator) and present…",headings:[{value:"Server-side Credentials",depth:1},{value:"Prerequisites:",depth:3},{value:"Register an App",depth:2},{value:"Setup a Requestor Service",depth:2},{value:"Setup a Creator Service",depth:2},{value:"For the fields of the credential:",depth:3},{value:"Setup a Verification service",depth:2}],frontmatter:{title:"Uport-JS Server How-to",category:"tutorials",type:"content",source:"https://github.com/uport-project/uport-js/blob/develop/docs/guides/server-side-credentials-example.md"},fields:{slug:"/uport-js/guides/server-side-credentials-example"}},postByCategory:{totalCount:21,edges:[{node:{fields:{slug:"/attestcredentials"},headings:[{value:"Attesting Credentials",depth:1},{value:"If push is enabled",depth:6},{value:"If push is not enabled",depth:6},{value:"Calling the attest method",depth:2},{value:"Setting an expiration date",depth:2},{value:"Attesting multiple credentials",depth:2}],excerpt:"Attesting Credentials * If the user consents, the uPort app saves the attestation token to their device. Browser displays a QR code (if…",timeToRead:2,frontmatter:{title:"Attesting Credentials",category:"guides",index:2,type:"content",source:"https://github.com/uport-project/docs/blob/develop/guides/AttestCredentials.md"}}},{node:{fields:{slug:"/gettingstarted"},headings:[{value:"Getting Started",depth:1},{value:"Requirements",depth:3},{value:"1. Get the uPort App",depth:2},{value:"2. Get an Application Identity",depth:2},{value:"3. Setup Dependencies",depth:2},{value:"4. Configure and Run Code",depth:2}],excerpt:"Getting Started Welcome! The goal of this guide is to get you set up quickly with a skeleton project and to familiarize you with a few basic…",timeToRead:4,frontmatter:{title:"Getting Started",category:"guides",index:0,type:"content",source:"https://github.com/uport-project/docs/blob/develop/guides/GettingStarted.md"}}},{node:{fields:{slug:"/readme"},headings:[{value:"uPort Specs",depth:1},{value:"Identities",depth:2},{value:"Identities created using the uPort Mobile App",depth:3},{value:"Request Flows",depth:2},{value:"More about request flows",depth:3},{value:"Request and Response Transports",depth:2},{value:"Request/Response Transports",depth:3},{value:"Off-chain Messages",depth:2},{value:"More about Off-chain Messages",depth:3},{value:"On-chain Transactions",depth:2},{value:"More about Signing Ethereum transactions",depth:3},{value:"uPort PKI",depth:2},{value:"More about the uPort PKI",depth:3}],excerpt:"uPort Specs uPort is a platform for user centric identity and communication. The platform currently consists of our mobile app, Ethereum…",timeToRead:2,frontmatter:{title:"Uport Specs",category:"reference",index:0,type:"content",source:"https://github.com/uport-project/specs/blob/develop/README.md"}}},{node:{fields:{slug:"/reactuporttruffle"},headings:[{value:"React-uport Truffle box",depth:1},{value:"Setup React Truffle Box",depth:2},{value:"Create the necessary uport-connect objects",depth:2},{value:"Request a user's information",depth:2},{value:"Create an Attestation",depth:2},{value:"Wrapping it up",depth:2}],excerpt:"React-uport Truffle box This a short tutorial to requesting credentials and signing attestations with uPort.  We will be leveraging the…",timeToRead:4,frontmatter:{title:"React-Uport Truffle Box",category:"tutorials",index:0,type:"content",source:"https://github.com/uport-project/docs/blob/develop/guides/ReactUportTruffle.md"}}},{node:{fields:{slug:"/requestcredentials"},headings:[{value:"Requesting Credentials",depth:1},{value:"Desktop web",depth:3},{value:"Mobile web",depth:3},{value:"Calling the request method",depth:2},{value:"Requesting specific credentials",depth:2},{value:"Verifying credentials",depth:2},{value:"Enabling Push Notifications",depth:2}],excerpt:"Requesting Credentials The first and most basic step you should take is to allow your user to connect their uPort to your app. Uport-connect…",timeToRead:4,frontmatter:{title:"Requesting Credentials",category:"guides",index:1,type:"content",source:"https://github.com/uport-project/docs/blob/develop/guides/RequestCredentials.md"}}},{node:{fields:{slug:"/signtransactions"},headings:[{value:"Signing Transactions",depth:1},{value:"Supply the contract ABI",depth:2},{value:"Create the contract object",depth:2},{value:"Call a basic method on the contract",depth:2},{value:"Call a tx signing method on the contract",depth:2},{value:"Wait for mining to complete",depth:2}],excerpt:"Signing Transactions Browser displays QR code with randomly generated sessionID in a URI Browser starts polling chasqui using the sessionId…",timeToRead:4,frontmatter:{title:"Signing Transactions",category:"guides",index:3,type:"content",source:"https://github.com/uport-project/docs/blob/develop/guides/SignTransactions.md"}}},{node:{fields:{slug:"/clients"},headings:[{value:"Clients (apps)",depth:1},{value:"uPort Mobile Wallet",depth:2},{value:"uPort App Manager",depth:2},{value:"uPort JS Client",depth:2}],excerpt:"Clients (apps) Allow users, developers, and applications to interact with the uPort platform. uPort Mobile Wallet : Secure mobile self…",timeToRead:1,frontmatter:{title:"Clients (apps)",category:"overview",index:3,type:"content",source:"https://github.com/uport-project/docs/blob/develop/overview/clients.md"}}},{node:{fields:{slug:"/overview"},headings:[{value:"OVERVIEW",depth:1}],excerpt:"OVERVIEW uPort is an interoperable identity network for a secure, private, decentralized web. uPort provides open protocols for…",timeToRead:1,frontmatter:{title:"Overview",category:"overview",index:0,type:"content",source:"https://github.com/uport-project/docs/blob/develop/overview/overview.md"}}},{node:{fields:{slug:"/platform"},headings:[{value:"PLATFORM",depth:1},{value:"Ethereum Identity Components",depth:2},{value:"Network Microservices",depth:2},{value:"Libraries",depth:2}],excerpt:"PLATFORM The uPort Platform is our implementation of the uPort Protocol designed to make decentralized identities on Ethereum easy to create…",timeToRead:3,frontmatter:{title:"Platform",category:"overview",index:2,type:"content",source:"https://github.com/uport-project/docs/blob/develop/overview/platform.md"}}},{node:{fields:{slug:"/protocol"},headings:[{value:"PROTOCOLS",depth:1},{value:"uPort Identity Protocol",depth:2},{value:"uPort Claims Protocol",depth:2}],excerpt:"PROTOCOLS uPort consists of identity and messaging protocols that together form an interoperable identity layer for the decentralized web…",timeToRead:1,frontmatter:{title:"Protocols",category:"overview",index:3,type:"content",source:"https://github.com/uport-project/docs/blob/develop/overview/protocol.md"}}},{node:{fields:{slug:"/lambda-olorun/readme"},headings:[{value:"lambda-olorun",depth:1},{value:"Setting a new private chain",depth:2},{value:"Deploy uPort Identity Contracts",depth:3},{value:"Configure Olorun hosted service for a new private chain",depth:3},{value:"Run your own Olorun",depth:3},{value:"Contributing",depth:2}],excerpt:"lambda-olorun Olorun  (Yoruba: Ọlọrun or Ọlọhun), literally the ruler of (or in) the Heavens, is the name given to one of the three…",timeToRead:3,frontmatter:{title:"Private Chain Support",category:"guides",index:5,type:"content",source:"https://github.com/uport-project/lambda-olorun/blob/master/README.md"}}},{node:{fields:{slug:"/did-jwt/guides/index"},headings:[{value:"Working with did-JWT's",depth:1},{value:"Creating a JWT",depth:2},{value:"Parameters",depth:4},{value:"Promise Return Value",depth:4},{value:"Verifying a JWT",depth:2},{value:"Parameters",depth:4},{value:"Promise Return Value",depth:4},{value:"Signer Functions",depth:2},{value:"SimpleSigner",depth:3},{value:"Parameters",depth:4},{value:"Creating Custom Signers for integrating with HSM",depth:3},{value:"Parameters",depth:4},{value:"Promise Return Value",depth:4}],excerpt:"Working with did-JWT's Creating a JWT Use the   function Parameters Name Description Required an object containing any claims you want to…",timeToRead:5,frontmatter:{title:"Working with did-JWT's",category:"guides",index:4,type:"content",source:"https://github.com/uport-project/did-jwt/blob/develop/docs/guides/index.md"}}},{node:{fields:{slug:"/did-jwt/reference/index"},headings:[{value:"Algorithms supported",depth:2},{value:"DID PublicKey Types",depth:2},{value:"Claims",depth:2},{value:"Modules",depth:2},{value:"Functions",depth:2},{value:"did-jwt/JWT",depth:2},{value:"did-jwt/JWT.decodeJWT(jwt) ⇒ ",depth:3},{value:"did-jwt/JWT.createJWT(payload, ",depth:3},{value:"did-jwt/JWT.verifyJWT(jwt, ",depth:3},{value:"did-jwt/JWT.resolveAuthenticator(alg, did, auth) ⇒ ",depth:3},{value:"SimpleSigner(hexPrivateKey) ⇒ ",depth:2}],excerpt:"Algorithms supported  the  secp256k1 ECDSA curve  the  secp256k1 ECDSA curve  with recovery parameter DID PublicKey Types The   section of a…",timeToRead:7,frontmatter:{title:"did-jwt",category:"reference",index:3,type:"content",source:"https://github.com/uport-project/did-jwt/blob/develop/docs/reference/index.md"}}},{node:{fields:{slug:"/muport-core-js/guides/simple-id"},headings:[{value:"Simple ID (muPort)",depth:1},{value:"Onboarding/Signup",depth:2},{value:"Interacting with a service",depth:2},{value:"Setting up recovery network",depth:2},{value:"Using the recovery network",depth:2},{value:"Updating the encrypted recovery shards",depth:2}],excerpt:"Simple ID (muPort) In this document we outline a description of key management for an identity using an abstract  DID  (Decentralized…",timeToRead:6,frontmatter:{title:"Simple ID (muPort)",category:"guides",index:6,type:"content",source:"https://github.com/uport-project/muport-core-js/blob/master/docs/guides/simple-id.md"}}},{node:{fields:{slug:"/uport-connect/guides/tutorial"},headings:[{value:"How to integrate uPort into your dapp",depth:1},{value:"Introduction",depth:2},{value:"Getting started",depth:2}],excerpt:"How to integrate uPort into your dapp Introduction This tutorial will show you how to add support for uPort in your decentralized Ethereum…",timeToRead:3,frontmatter:{title:"How to integrate Uport-Connect",category:"tutorials",index:0,type:"content",source:"https://github.com/uport-project/uport-connect/blob/develop/docs/guides/tutorial.md"}}},{node:{fields:{slug:"/glossary"},headings:[],excerpt:"Term Definition Attestation These are synonymous with Credentials.  In uPort attestations are cryptographically signed claims. Application…",timeToRead:4,frontmatter:{title:"Glossary",category:"overview",index:4,type:"content",source:"https://github.com/uport-project/docs/blob/develop/overview/glossary.md"}}},{node:{fields:{slug:"/ethr-did/readme"},headings:[{value:"ethr DID library",depth:1},{value:"DID method",depth:2},{value:"Configuration",depth:2},{value:"Getting Started",depth:1},{value:"Construct a New Identity",depth:2},{value:"Create ethr DID",depth:3},{value:"Use Existing Web3 Provider",depth:4},{value:"Ethereum Web3 Wallet developers",depth:4},{value:"Exchange Verifiable Data",depth:2},{value:"Signing a JWT",depth:3},{value:"Verifying a JWT",depth:3},{value:"Manage Keys",depth:2},{value:"The Concept of Identity Ownership",depth:3},{value:"Changing an Owner",depth:3},{value:"Adding a Delegate Signer",depth:3},{value:"Set public attributes",depth:2}],excerpt:"ethr DID library This library conforms to ERC 1056 and is intended to use ethereum addresses as fully self managed  Decentralized…",timeToRead:13,frontmatter:{title:"Ethr DID",category:"reference",index:8,type:"content",source:"https://github.com/uport-project/ethr-did/blob/develop/README.md"}}},{node:{fields:{slug:"/uport-connect/guides/usage"},headings:[{value:"Communication and Transactions how-to",depth:1},{value:"Communication",depth:1},{value:"Default QR flow",depth:2},{value:"Default Mobile Requests",depth:2},{value:"Push Notifications",depth:2},{value:"Ethereum Interactions and Transactions",depth:1},{value:"Using with web3",depth:2},{value:"Using a provider",depth:2},{value:"Using without web3",depth:2}],excerpt:"Communication and Transactions how-to The following Connect object is the primary interface you will use. All details and additional…",timeToRead:7,frontmatter:{title:"Communication and Transactions",category:"tutorials",index:2,type:"content",source:"https://github.com/uport-project/uport-connect/blob/develop/docs/guides/usage.md"}}},{node:{fields:{slug:"/uport-js/reference/index"},headings:[{value:"Modules",depth:2},{value:"Classes",depth:2},{value:"uport-js/JWT",depth:2},{value:"uport-js/JWT.createJWT(",depth:3},{value:"uport-js/JWT.verifyJWT(",depth:3},{value:"Credentials",depth:2},{value:"new Credentials(",depth:3},{value:"credentials.createRequest(",depth:3},{value:"credentials.createVerificationRequest(unsignedClaim, sub) ⇒ ",depth:3},{value:"credentials.receive(token, ",depth:3},{value:"credentials.push(token, payload, pubEncKey) ⇒ ",depth:3},{value:"credentials.attest(",depth:3},{value:"credentials.lookup(address) ⇒ ",depth:3}],excerpt:"Modules Classes uport-js/JWT uport-js/JWT .createJWT([config], payload)  ⇒  Promise. < Object, Error > .verifyJWT([config], jwt, callbackUrl…",timeToRead:10,frontmatter:{title:"Uport JS",category:"reference",index:4,type:"content",source:"https://github.com/uport-project/uport-js/blob/develop/docs/reference/index.md"}}},{node:{fields:{slug:"/uport-js/guides/server-side-credentials-example"},headings:[{value:"Server-side Credentials",depth:1},{value:"Prerequisites:",depth:3},{value:"Register an App",depth:2},{value:"Setup a Requestor Service",depth:2},{value:"Setup a Creator Service",depth:2},{value:"For the fields of the credential:",depth:3},{value:"Setup a Verification service",depth:2}],excerpt:"Server-side Credentials Here we will demonstrate how to create and sign a custom credential on a server (called the Creator) and present…",timeToRead:9,frontmatter:{title:"Uport-JS Server How-to",category:"tutorials",index:1,type:"content",source:"https://github.com/uport-project/uport-js/blob/develop/docs/guides/server-side-credentials-example.md"}}},{node:{fields:{slug:"/uport-connect/reference/index"},headings:[{value:"Modules",depth:2},{value:"Classes",depth:2},{value:"uport-connect/topicFactory",depth:2},{value:"uport-connect/topicFactory~TopicFactory(isOnMobile, pollingInterval, chasquiUrl) ⇒ ",depth:3},{value:"TopicFactory~waitForHashChange(topicName, cb)",depth:4},{value:"TopicFactory~pollForResult(topicName, url, cb, cancelled)",depth:4},{value:"TopicFactory~clearTopic(url)",depth:4},{value:"TopicFactory~newTopic(topicName) ⇒ ",depth:4},{value:"Connect ⇐ ",depth:2},{value:"new Connect(appName, ",depth:3},{value:"connect.getWeb3() ⇒ ",depth:3},{value:"connect.getProvider() ⇒ ",depth:3},{value:"connect.requestCredentials(",depth:3},{value:"connect.requestAddress(",
depth:3},{value:"connect.attestCredentials(credential, ",depth:3},{value:"connect.request(request) ⇒ ",depth:3},{value:"connect.contract(abi) ⇒ ",depth:3},{value:"connect.sendTransaction(txobj) ⇒ ",depth:3},{value:"ConnectCore",depth:2},{value:"new ConnectCore(appName, ",depth:3},{value:"connectCore.getProvider() ⇒ ",depth:3},{value:"connectCore.requestCredentials(",depth:3},{value:"connectCore.requestAddress(",depth:3},{value:"connectCore.attestCredentials(credential, ",depth:3},{value:"connectCore.request(request) ⇒ ",depth:3},{value:"connectCore.contract(abi) ⇒ ",depth:3},{value:"connectCore.sendTransaction(txobj) ⇒ ",depth:3},{value:"UportSubprovider",depth:2},{value:"new UportSubprovider(args)",depth:3},{value:"uportSubprovider.send()",depth:3},{value:"uportSubprovider.sendAsync(payload, callback)",depth:3}],excerpt:"Modules Classes uport-connect/topicFactory Manages the communication channel between the uport-connect library and a\n uPort mobile app. The…",timeToRead:25,frontmatter:{title:"Uport Connect",category:"reference",index:4,type:"content",source:"https://github.com/uport-project/uport-connect/blob/develop/docs/reference/index.md"}}}]}},pathContext:{slug:"/uport-js/guides/server-side-credentials-example"}}}});
//# sourceMappingURL=path---uport-js-guides-server-side-credentials-example-8f63b162bed96af618c4.js.map