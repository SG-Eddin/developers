webpackJsonp([55207216157101],{1168:function(e,t){e.exports={data:{allMarkdownRemark:{edges:[{node:{fields:{slug:"/uport-credentials/guides/index"},excerpt:"Getting Started Configure Your Application In your application, you must first configure your uPort object with an identifier and a private…",timeToRead:5,frontmatter:{title:"Getting Started with uPort Credentials"}}},{node:{fields:{slug:"/uport-credentials/guides/tutorial"},excerpt:"In this toutorial, we will demonstrate how to create and sign a custom credential on a server (called the Creator) and present it to a uPort…",timeToRead:7,frontmatter:{title:"Server-side examples"}}}]},navCategories:{edges:[{node:{fields:{slug:"/readme"},headings:[{value:"uPort Specs",depth:1},{value:"Identities",depth:2},{value:"Identities created using the uPort Mobile App",depth:3},{value:"Request Flows",depth:2},{value:"More about request flows",depth:3},{value:"Request and Response Transports",depth:2},{value:"Request/Response Transports",depth:3},{value:"Off-chain Messages",depth:2},{value:"More about Off-chain Messages",depth:3},{value:"On-chain Transactions",depth:2},{value:"More about Signing Ethereum transactions",depth:3},{value:"uPort PKI",depth:2},{value:"More about the uPort PKI",depth:3}],frontmatter:{category:"specs",index:3}}},{node:{fields:{slug:"/connect/login"},headings:[{value:"Introduction",depth:1},{value:"Setup",depth:2},{value:"Boilerplate",depth:3},{value:"Create Authentication Functionality",depth:2},{value:"Run the example",depth:2}],frontmatter:{category:"uport-connect",index:2}}},{node:{fields:{slug:"/connect/requestverification"},headings:[{value:"Introduction",depth:1},{value:"Setup",depth:2},{value:"Boilerplate",depth:3},{value:"Request Verifications",depth:2},{value:"Run the example",depth:2}],frontmatter:{category:"uport-connect",index:4}}},{node:{fields:{slug:"/connect/sendverification"},headings:[{value:"Introduction",depth:1},{value:"Setup",depth:2},{value:"Boilerplate",depth:3},{value:"Create and Send a Verification",depth:2},{value:"Run the example",depth:2}],frontmatter:{category:"uport-connect",index:3}}},{node:{fields:{slug:"/credentials/createverification"},headings:[{value:"Introduction",depth:1},{value:"Setup",depth:2},{value:"Output:",depth:5},{value:"Boilerplate",depth:3},{value:"Create and Issue Verifications",depth:2},{value:"Running the Service",depth:2}],frontmatter:{category:"uport-credentials",index:3}}},{node:{fields:{slug:"/credentials/index"},headings:[{value:"Server-side Login Solution",depth:1},{value:"The Login Solution for Your Server-side dApp",depth:2}],frontmatter:{category:"login",index:0}}},{node:{fields:{slug:"/credentials/login"},headings:[{value:"Introduction",depth:1},{value:"Setup",depth:2},{value:"Output:",depth:5},{value:"Boilerplate",depth:3},{value:"Disclosure Request Login Service",depth:2},{value:"Selective Disclosure Request",depth:4},{value:"Disclosure Response Authentication Service",depth:2},{value:"Selective Disclosure Response",depth:4},{value:"Running the Service",depth:2}],frontmatter:{category:"uport-credentials",index:2}}},{node:{fields:{slug:"/credentials/requestverification"},headings:[{value:"Introduction",depth:1},{value:"Setup",depth:2},{value:"Output:",depth:5},{value:"Boilerplate",depth:3},{value:"Request Verifications",depth:2},{value:"Running the Service",depth:2}],frontmatter:{category:"uport-credentials",index:4}}},{node:{fields:{slug:"/credentials/transactions"},headings:[{value:"Introduction",depth:1},{value:"Setup",depth:2},{value:"Output:",depth:5},{value:"Boilerplate",depth:3},{value:"Create Transaction Request",depth:2},{value:"Running the Service",depth:2}],frontmatter:{category:"uport-credentials",index:5}}},{node:{fields:{slug:"/ethr-did-registry/readme"},headings:[{value:"Ethereum DID Registry",depth:1},{value:"Contract Deployments",depth:2},{value:"Using the Registry",depth:2},{value:"On-chain vs. Off-chain",depth:2},{value:"Identity Identifier",depth:2},{value:"Identity Ownership",depth:2},{value:"Looking up Identity Ownership",depth:3},{value:"Changing Identity Ownership",depth:3},{value:"Delegates",depth:2},{value:"Delegate Types",depth:3},{value:"Validity",depth:3},{value:"Looking up a Delegate",depth:3},{value:"Adding a Delegate",depth:3},{value:"Revoking a Delegate",depth:3},{value:"Enumerating Delegates Off-chain",depth:3},{value:"Adding Off-chain Attributes",depth:2},{value:"Setting Attributes",depth:3},{value:"Revoking Attributes",depth:3},{value:"Reading attributes",depth:3},{value:"Enumerating Linked Identity Events",depth:2},{value:"Assemble a DID Document",depth:2},{value:"Deploy contract",depth:2},{value:"Testing the Contracts",depth:2}],frontmatter:{category:"ethr-did-registry",index:0}}},{node:{fields:{slug:"/ethr-did-resolver/readme"},headings:[{value:"ethr DID Resolver",depth:1},{value:"DID method",depth:2},{value:"DID Document",depth:2},{value:"Building a DID document",depth:2},{value:"Owner Address",depth:3},{value:"Enumerating contract events for an identity",depth:3},{value:"Delegate Keys",depth:3},{value:"Non Ethereum Attributes",depth:3},{value:"Public Keys",depth:3},{value:"Hex encoded Secp256k1 Verification Key",depth:4},{value:"Base64 encoded Ed25519 Verification Key",depth:4},{value:"Service Endpoints",depth:3},{value:"Hex encoded Secp256k1 Verification Key",depth:4},{value:"Resolving a DID document",depth:2}],frontmatter:{category:"ethr-did-resolver",index:7}}},{node:{fields:{slug:"/guides/reactuporttruffle"},headings:[{value:"React-uport Truffle box",depth:1},{value:"Setup React Truffle Box",depth:2},{value:"Create the necessary uport-connect objects",depth:2},{value:"Request a user's information",depth:2},{value:"Create an Attestation",depth:2},{value:"Wrapping it up",depth:2}],frontmatter:{category:"truffle",index:0}}},{node:{fields:{slug:"/overview/attestation"},headings:[{value:"Issue Verifications",depth:1},{value:"Contribute to the Decentralized World",depth:2}],frontmatter:{category:"attestation",index:4}}},{node:{fields:{slug:"/overview/glossary"},headings:[{value:"Terms and Definitions",depth:3}],frontmatter:{category:"glossary",index:2}}},{node:{fields:{slug:"/overview/index"},headings:[{value:"Helping You Build User Centric Apps on Blockchains",depth:2},{value:"Onboarding a user to your dApp",depth:3},{value:"As a Developer You Want Users Who Are Active and Come Back to Your dApp.",depth:5},{value:"What is an Identity?",depth:2},{value:"Help Your User Build Their Identity",depth:3},{value:"But All I Really Need is an Ethereum Address!",depth:3},{value:"Asking The User to do Something",depth:3},{value:"Reasons for Asking for Identity Data",depth:3},{value:"The Problem With Centralized Identity Solutions",depth:3},{value:"Signing Ethereum Transactions",depth:2},{value:"Off-chain Data",depth:2},{value:"uPort Protocols and Libraries",depth:2},{value:"For Fully Decentralized Apps (dApps)",depth:3},{value:"For Decentralized Mobile Applications",depth:3},{value:"For Hybrid Applications",depth:3}],frontmatter:{category:"about",index:0}}},{node:{fields:{slug:"/overview/login"},headings:[{value:"Login Solutions",depth:1},{value:"Frictionless Login Across the Web",depth:2}],frontmatter:{category:"login",index:3}}},{node:{fields:{slug:"/overview/releases"},headings:[{value:"Releases",depth:1},{value:"Uport Mobile",depth:2},{value:"What's New in Version 1.5.20 build v403",depth:3},{value:"Uport Connect",depth:2},{value:"What's New in Version 1.1.0",depth:3},{value:"Personal Sign Flow",depth:3},{value:"Typed Data (ERC712) Signature Flow",depth:3},{value:"Simple App Profiles",depth:3},{value:"What's new in 1.0?",depth:3},{value:" -> ",depth:4},{value:"No public keys in the browser",depth:4},{value:" Persistance",depth:4},{value:"New functions ",depth:4},{value:", ",depth:4},{value:" -> ",depth:4},{value:" -> ",depth:4},{value:" -> ",depth:4},{value:" -> ",depth:4},{value:" -> ",depth:4},{value:" removed",depth:4},{value:"What's New in Version 0.7.8 (minor release)",depth:3},{value:"Steps to migrate",depth:4},{value:"Legacy support",depth:4},{value:"Uport Credentials (formerly Uport JS)",depth:2},{value:"What's new in Version 1.1.0?",depth:3},{value:"What's new in 1.0?",depth:4},{value:"New static method ",depth:4},{value:" -> ",depth:4},{value:"New method ",depth:4},{value:" -> ",depth:4},{value:", ",depth:4},{value:"New method ",depth:4},{value:" -> ",depth:4},{value:"New method ",depth:4},{value:" -> ",depth:4},{value:" -> ",depth:4},{value:"What's New in Version uport@0.6.5 (minor release)",depth:3},{value:"Steps to migrate",depth:5},{value:"Legacy support",depth:5}],frontmatter:{category:"releases",index:1}}},{node:{fields:{slug:"/overview/transactions"},headings:[{value:"Requesting Transactions",depth:1},{value:"Send Users An Ethereum Transaction Request",depth:2}],frontmatter:{category:"Requesting Transactions",index:5}}},{node:{fields:{slug:"/uport-connect/index"},headings:[{value:"uPort Connect",depth:1},{value:"Instantly Connect Users to Your dApp",depth:3}],frontmatter:{category:"uport-connect",index:0}}},{node:{fields:{slug:"/uport-credentials/index"},headings:[{value:"uPort Credentials",depth:1},{value:"Create & Request Attested Data",depth:2}],frontmatter:{category:"uport-credentials",index:0}}},{node:{fields:{slug:"/uport-transports/index"},headings:[{value:"uPort Transports",depth:1},{value:"Connect Users to a uPort Client",depth:3}],frontmatter:{category:"uport-transports",index:0}}},{node:{fields:{slug:"/did-jwt/guides/index"},headings:[{value:"Working with did-JWT's",depth:1},{value:"Creating a JWT",depth:2},{value:"Parameters",depth:4},{value:"Promise Return Value",depth:4},{value:"Verifying a JWT",depth:2},{value:"Parameters",depth:4},{value:"Promise Return Value",depth:4},{value:"Signer Functions",depth:2},{value:"SimpleSigner",depth:3},{value:"Parameters",depth:4},{value:"Creating Custom Signers for integrating with HSM",depth:3},{value:"Parameters",depth:4},{value:"Promise Return Value",depth:4}],frontmatter:{category:"did-jwt",index:4}}},{node:{fields:{slug:"/did-jwt/reference/index"},headings:[{value:"Algorithms supported",depth:2},{value:"DID PublicKey Types",depth:2},{value:"Claims",depth:2},{value:"Modules",depth:2},{value:"Functions",depth:2},{value:"did-jwt/JWT",depth:2},{value:"did-jwt/JWT.decodeJWT(jwt) ⇒ ",depth:3},{value:"did-jwt/JWT.createJWT(payload, ",depth:3},{value:"did-jwt/JWT.verifyJWT(jwt, ",depth:3},{value:"did-jwt/JWT.resolveAuthenticator(alg, did, auth) ⇒ ",depth:3},{value:"SimpleSigner(hexPrivateKey) ⇒ ",depth:2}],frontmatter:{category:"did-jwt",index:3}}},{node:{fields:{slug:"/ethr-did/docs/index"},headings:[{value:"Ethr-DID",depth:1},{value:"A Scalable Identity Method for Ethereum Addresses",depth:2}],frontmatter:{category:"ethr-did",index:0}}},{node:{fields:{slug:"/uport-connect/reference/index"},headings:[{value:"Classes",depth:2},{value:"Connect",depth:2},{value:"new Connect(appName, ",depth:3},{value:"connect.getProvider(",depth:3},{value:"connect.onResponse(id, cb) ⇒ ",depth:3},{value:"connect.pubResponse(response)",depth:3},{value:"connect.send(request, id, ",depth:3},{value:"connect.contract(abi) ⇒ ",depth:3},{value:"connect.sendTransaction(txObj, ",depth:3},{value:"connect.requestVerificationSignature(unsignedClaim, sub, ",depth:3},{value:"connect.requestDisclosure(",depth:3},{value:"connect.sendVerification(",depth:3},{value:"connect.setState(Update)",depth:3},{value:"connect.loadState()",depth:3},{value:"connect.logout()",depth:3},{value:"connect.reset()",depth:3},{value:"UportSubprovider",depth:2},{value:"new UportSubprovider(args)",depth:3}],frontmatter:{category:"uport-connect",index:10}}},{node:{fields:{slug:"/uport-credentials/reference/index"},headings:[{value:"Credentials",depth:2},{value:"new Credentials(",depth:3},{value:"credentials.createDisclosureRequest(",depth:3},{value:"credentials.createVerification(",depth:3},{value:"credentials.createVerificationSignatureRequest(unsignedClaim, ",depth:3},{value:"credentials.createTxRequest(txObj, ",depth:3},{value:"credentials.createDisclosureResponse(",depth:3},{value:"credentials.processDisclosurePayload(response)",depth:3},{value:"credentials.authenticateDisclosureResponse(token, ",depth:3},{value:"credentials.verifyDisclosure(token) ⇒ ",depth:3},{value:"credentials.contract(abi) ⇒ ",depth:3},{value:"Credentials.createIdentity() ⇒ ",depth:3}],frontmatter:{category:"uport-credentials",index:10}}},{node:{fields:{slug:"/uport-transports/guides/modules"},headings:[{value:" uPort Transports Guide",depth:1},{value:"Request Transports",depth:2},{value:"Response Transports",depth:2},{value:" Quick Start",depth:2}],frontmatter:{category:"uport-transports",index:1}}},{node:{fields:{slug:"/uport-transports/reference/index"},headings:[{value:"Modules",depth:2},{value:"Constants",depth:2},{value:"Functions",depth:2},{value:"uport-transports/transport/ui",depth:2},{value:"uport-transports/transport/ui~getImageDataURI(data) ⇒ ",depth:3},{value:"uport-transports/transport/ui~close()",depth:3},{value:"uport-transports/transport/ui~makeModal(content, ",depth:3},{value:"uport-transports/transport/ui~open(data, cancel, modalText)",depth:3},{value:"uport-transports/transport/ui~notifyPushSent(fallback)",depth:3},{value:"uport-transports/transport/ui~success()",depth:3},{value:"uport-transports/transport/ui~failure(resend)",depth:3},{value:"uportModal ⇒ ",depth:2},{value:"qrModal ⇒ ",depth:2},{value:"pushModal",depth:2},{value:"successModal",depth:2},{value:"failureModal",depth:2},{value:"randomString(length) ⇒ ",depth:2},{value:"decryptResponse(encrypted, secretKey) ⇒ ",depth:2},{value:"URIHandlerSend(uriHandler, ",depth:2},{value:"poll(url, ",depth:2},{value:"poll(url, messageParse, errorParse, ",depth:2},{value:"send(token, pubEncKey, ",depth:2},{value:"sendAndNotify()",depth:2},{value:"send(displayText, message, ",depth:2},{value:"chasquiCompress(message, threshold) ⇒ ",depth:2},{value:"chasquiSend(",depth:2},{value:"send(",depth:2},{value:"getResponse() ⇒ ",depth:2},{value:"listenResponse(cb)",depth:2},{value:"onResponse() ⇒ ",depth:2},{value:"parseResponse() ⇒ ",depth:2},{value:"paramsToUrlFragment(url, ",depth:2},{value:"paramsToQueryString(url, ",depth:2},{value:"getUrlQueryParams(url) ⇒ ",depth:2},{value:"getURLJWT(url) ⇒ ",depth:2},{value:"isJWT(jwt) ⇒ ",depth:2},{value:"messageToUniversalURI(message) ⇒ ",depth:2},{value:"messageToDeeplinkURI(message, uri)",depth:2},{value:"messageToURI(message, type)",depth:2}],frontmatter:{category:"uport-transports",index:10}}},{node:{fields:{slug:"/ethr-did/docs/guides/index"},headings:[{value:"Getting Started",depth:1},{value:"Construct a New Identity",depth:2},{value:"Create Ethr-DID",depth:3},{value:"Use Existing Web3 Provider",depth:4},{value:"Ethereum Web3 Wallet Developers",depth:4},{value:"Exchange Verifiable Data",depth:2},{value:"Signing a JWT",depth:3},{value:"Verifying a JWT",depth:3},{value:"Manage Keys",depth:2},{value:"The Concept of Identity Ownership",depth:3},{value:"Changing an Owner",depth:3},{value:"Adding a Delegate Signer",depth:3},{value:"Set Public Attributes",depth:2}],frontmatter:{category:"ethr-did",index:1}}},{node:{fields:{slug:"/ethr-did/docs/reference/index"},headings:[{value:"Introduction",depth:2},{value:"DID Method",depth:2},{value:"Configuration",depth:2}],frontmatter:{category:"ethr-did",index:10}}}]}},pathContext:{}}}});
//# sourceMappingURL=path---myapps-detail-e9eb35dd610acd4d25ba.js.map