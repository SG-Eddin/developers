{"version":3,"sources":["webpack:///path---muport-core-js-guides-simple-id-f9d839aa88ca114f2646.js","webpack:///./.cache/json/muport-core-js-guides-simple-id.json"],"names":["webpackJsonp","652","module","exports","data","allPostTitles","edges","node","frontmatter","title","index","type","fields","slug","navCategories","headings","value","depth","category","postBySlug","htmlAst","children","tagName","properties","id","href","ariaHidden","className","height","version","viewBox","width","fillRule","d","quirksMode","timeToRead","excerpt","postByCategory","totalCount","pathContext"],"mappings":"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","file":"path---muport-core-js-guides-simple-id-f9d839aa88ca114f2646.js","sourcesContent":["webpackJsonp([131990869628306],{\n\n/***/ 652:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allPostTitles\":{\"edges\":[{\"node\":{\"frontmatter\":{\"title\":\"Attesting Credentials\",\"index\":2,\"type\":\"content\"},\"fields\":{\"slug\":\"/attestcredentials\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Getting Started\",\"index\":0,\"type\":\"content\"},\"fields\":{\"slug\":\"/gettingstarted\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Uport Specs\",\"index\":0,\"type\":\"content\"},\"fields\":{\"slug\":\"/readme\"}}},{\"node\":{\"frontmatter\":{\"title\":\"React-Uport Truffle Box\",\"index\":0,\"type\":\"content\"},\"fields\":{\"slug\":\"/reactuporttruffle\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Requesting Credentials\",\"index\":1,\"type\":\"content\"},\"fields\":{\"slug\":\"/requestcredentials\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Signing Transactions\",\"index\":3,\"type\":\"content\"},\"fields\":{\"slug\":\"/signtransactions\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Clients (apps)\",\"index\":3,\"type\":\"content\"},\"fields\":{\"slug\":\"/clients\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Overview\",\"index\":0,\"type\":\"content\"},\"fields\":{\"slug\":\"/overview\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Platform\",\"index\":2,\"type\":\"content\"},\"fields\":{\"slug\":\"/platform\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Protocols\",\"index\":3,\"type\":\"content\"},\"fields\":{\"slug\":\"/protocol\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Private Chain Support\",\"index\":5,\"type\":\"content\"},\"fields\":{\"slug\":\"/lambda-olorun/readme\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Working with did-JWT's\",\"index\":4,\"type\":\"content\"},\"fields\":{\"slug\":\"/did-jwt/guides/index\"}}},{\"node\":{\"frontmatter\":{\"title\":\"did-jwt\",\"index\":3,\"type\":\"content\"},\"fields\":{\"slug\":\"/did-jwt/reference/index\"}}},{\"node\":{\"frontmatter\":{\"title\":\"How to integrate Uport-Connect\",\"index\":0,\"type\":\"content\"},\"fields\":{\"slug\":\"/uport-connect/guides/tutorial\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Simple ID (muPort)\",\"index\":6,\"type\":\"content\"},\"fields\":{\"slug\":\"/muport-core-js/guides/simple-id\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Communication and Transactions\",\"index\":2,\"type\":\"content\"},\"fields\":{\"slug\":\"/uport-connect/guides/usage\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Uport Connect\",\"index\":4,\"type\":\"content\"},\"fields\":{\"slug\":\"/uport-connect/reference/index\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Uport-JS Server How-to\",\"index\":1,\"type\":\"content\"},\"fields\":{\"slug\":\"/uport-js/guides/server-side-credentials-example\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Uport JS\",\"index\":4,\"type\":\"content\"},\"fields\":{\"slug\":\"/uport-js/reference/index\"}}}]},\"navCategories\":{\"edges\":[{\"node\":{\"fields\":{\"slug\":\"/attestcredentials\"},\"headings\":[{\"value\":\"Attesting Credentials\",\"depth\":1},{\"value\":\"If push is enabled\",\"depth\":6},{\"value\":\"If push is not enabled\",\"depth\":6},{\"value\":\"Calling the attest method\",\"depth\":2},{\"value\":\"Setting an expiration date\",\"depth\":2},{\"value\":\"Attesting multiple credentials\",\"depth\":2}],\"frontmatter\":{\"category\":\"guides\",\"index\":2}}},{\"node\":{\"fields\":{\"slug\":\"/gettingstarted\"},\"headings\":[{\"value\":\"Getting Started\",\"depth\":1},{\"value\":\"Requirements\",\"depth\":3},{\"value\":\"1. Get the uPort App\",\"depth\":2},{\"value\":\"2. Get an Application Identity\",\"depth\":2},{\"value\":\"3. Setup Dependencies\",\"depth\":2},{\"value\":\"4. Configure and Run Code\",\"depth\":2}],\"frontmatter\":{\"category\":\"guides\",\"index\":0}}},{\"node\":{\"fields\":{\"slug\":\"/readme\"},\"headings\":[{\"value\":\"uPort Specs\",\"depth\":1},{\"value\":\"Identities\",\"depth\":2},{\"value\":\"Identities created using the uPort Mobile App\",\"depth\":3},{\"value\":\"Request Flows\",\"depth\":2},{\"value\":\"More about request flows\",\"depth\":3},{\"value\":\"Request and Response Transports\",\"depth\":2},{\"value\":\"Request/Response Transports\",\"depth\":3},{\"value\":\"Off-chain Messages\",\"depth\":2},{\"value\":\"More about Off-chain Messages\",\"depth\":3},{\"value\":\"On-chain Transactions\",\"depth\":2},{\"value\":\"More about Signing Ethereum transactions\",\"depth\":3},{\"value\":\"uPort PKI\",\"depth\":2},{\"value\":\"More about the uPort PKI\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":0}}},{\"node\":{\"fields\":{\"slug\":\"/reactuporttruffle\"},\"headings\":[{\"value\":\"React-uport Truffle box\",\"depth\":1},{\"value\":\"Setup React Truffle Box\",\"depth\":2},{\"value\":\"Create the necessary uport-connect objects\",\"depth\":2},{\"value\":\"Request a user's information\",\"depth\":2},{\"value\":\"Create an Attestation\",\"depth\":2},{\"value\":\"Wrapping it up\",\"depth\":2}],\"frontmatter\":{\"category\":\"tutorials\",\"index\":0}}},{\"node\":{\"fields\":{\"slug\":\"/requestcredentials\"},\"headings\":[{\"value\":\"Requesting Credentials\",\"depth\":1},{\"value\":\"Desktop web\",\"depth\":3},{\"value\":\"Mobile web\",\"depth\":3},{\"value\":\"Calling the request method\",\"depth\":2},{\"value\":\"Requesting specific credentials\",\"depth\":2},{\"value\":\"Verifying credentials\",\"depth\":2},{\"value\":\"Enabling Push Notifications\",\"depth\":2}],\"frontmatter\":{\"category\":\"guides\",\"index\":1}}},{\"node\":{\"fields\":{\"slug\":\"/signtransactions\"},\"headings\":[{\"value\":\"Signing Transactions\",\"depth\":1},{\"value\":\"Supply the contract ABI\",\"depth\":2},{\"value\":\"Create the contract object\",\"depth\":2},{\"value\":\"Call a basic method on the contract\",\"depth\":2},{\"value\":\"Call a tx signing method on the contract\",\"depth\":2},{\"value\":\"Wait for mining to complete\",\"depth\":2}],\"frontmatter\":{\"category\":\"guides\",\"index\":3}}},{\"node\":{\"fields\":{\"slug\":\"/clients\"},\"headings\":[{\"value\":\"Clients (apps)\",\"depth\":1},{\"value\":\"uPort Mobile Wallet\",\"depth\":2},{\"value\":\"uPort App Manager\",\"depth\":2},{\"value\":\"uPort JS Client\",\"depth\":2}],\"frontmatter\":{\"category\":\"overview\",\"index\":3}}},{\"node\":{\"fields\":{\"slug\":\"/overview\"},\"headings\":[{\"value\":\"OVERVIEW\",\"depth\":1}],\"frontmatter\":{\"category\":\"overview\",\"index\":0}}},{\"node\":{\"fields\":{\"slug\":\"/platform\"},\"headings\":[{\"value\":\"PLATFORM\",\"depth\":1},{\"value\":\"Ethereum Identity Components\",\"depth\":2},{\"value\":\"Network Microservices\",\"depth\":2},{\"value\":\"Libraries\",\"depth\":2}],\"frontmatter\":{\"category\":\"overview\",\"index\":2}}},{\"node\":{\"fields\":{\"slug\":\"/protocol\"},\"headings\":[{\"value\":\"PROTOCOLS\",\"depth\":1},{\"value\":\"uPort Identity Protocol\",\"depth\":2},{\"value\":\"uPort Claims Protocol\",\"depth\":2}],\"frontmatter\":{\"category\":\"overview\",\"index\":3}}},{\"node\":{\"fields\":{\"slug\":\"/lambda-olorun/readme\"},\"headings\":[{\"value\":\"lambda-olorun\",\"depth\":1},{\"value\":\"Setting a new private chain\",\"depth\":2},{\"value\":\"Deploy uPort Identity Contracts\",\"depth\":3},{\"value\":\"Configure Olorun hosted service for a new private chain\",\"depth\":3},{\"value\":\"Run your own Olorun\",\"depth\":3},{\"value\":\"Contributing\",\"depth\":2}],\"frontmatter\":{\"category\":\"guides\",\"index\":5}}},{\"node\":{\"fields\":{\"slug\":\"/flows/index\"},\"headings\":[{\"value\":\"Uport Request Flows\",\"depth\":1},{\"value\":\"Unified Message Request Flow\",\"depth\":2},{\"value\":\"Specific Application flows\",\"depth\":2},{\"value\":\"Errors\",\"depth\":2}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/flows/privatechain\"},\"headings\":[{\"value\":\"Private Chain Provisioning Flow\",\"depth\":1},{\"value\":\"Requirements\",\"depth\":2},{\"value\":\"Provisioning Methodology\",\"depth\":2},{\"value\":\"Endpoint\",\"depth\":2},{\"value\":\"Client Callback\",\"depth\":2},{\"value\":\"Successful Response\",\"depth\":3},{\"value\":\"Errors\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/flows/selectivedisclosure\"},\"headings\":[{\"value\":\"Selective Disclosure Flow\",\"depth\":1},{\"value\":\"Endpoint\",\"depth\":2},{\"value\":\"Send Request\",\"depth\":2},{\"value\":\"Deprecated Flows\",\"depth\":3},{\"value\":\"Client Callback\",\"depth\":2},{\"value\":\"Successful Response\",\"depth\":3},{\"value\":\"Errors\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/flows/tx\"},\"headings\":[{\"value\":\"Ethereum Transaction Flow\",\"depth\":1},{\"value\":\"Endpoint\",\"depth\":2},{\"value\":\"Send Request\",\"depth\":2},{\"value\":\"Client Callback\",\"depth\":2},{\"value\":\"Successful Response\",\"depth\":3},{\"value\":\"Errors\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/flows/verification\"},\"headings\":[{\"value\":\"Send Verification Flow\",\"depth\":1},{\"value\":\"Endpoint\",\"depth\":2},{\"value\":\"Send Verifications\",\"depth\":2},{\"value\":\"Deprecated Flows\",\"depth\":3},{\"value\":\"Client Callback\",\"depth\":2},{\"value\":\"Successful Response\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/encryption\"},\"headings\":[{\"value\":\"Message Encryption\",\"depth\":1},{\"value\":\"Encryption Public Key resolution\",\"depth\":2},{\"value\":\"Request/Response resolution\",\"depth\":2},{\"value\":\"JOSE JWK Standards\",\"depth\":3},{\"value\":\"Encrypting the request\",\"depth\":2},{\"value\":\"Decrypting the request\",\"depth\":2},{\"value\":\"Padding\",\"depth\":2},{\"value\":\"Legacy Encryption of the request\",\"depth\":2},{\"value\":\"Encoding the encrypted data\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/index\"},\"headings\":[{\"value\":\"Off-chain Messages\",\"depth\":1},{\"value\":\"JSON Web Token\",\"depth\":2},{\"value\":\"Requirements\",\"depth\":3},{\"value\":\"JOSE Header\",\"depth\":4},{\"value\":\"Attributes\",\"depth\":4},{\"value\":\"Signature Verification\",\"depth\":3},{\"value\":\"Message Encryption\",\"depth\":3},{\"value\":\"Unsigned Requests (Deprecated)\",\"depth\":2},{\"value\":\"Standard Unsigned Parameters\",\"depth\":3},{\"value\":\"Message types\",\"depth\":2}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/privatechain\"},\"headings\":[{\"value\":\"Private Chain Provisioning Message\",\"depth\":1},{\"value\":\"Attributes\",\"depth\":2}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/sharereq\"},\"headings\":[{\"value\":\"Selective Disclosure Request\",\"depth\":1},{\"value\":\"Attributes\",\"depth\":4},{\"value\":\"Unsigned Requests (Deprecated)\",\"depth\":2}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/shareresp\"},\"headings\":[{\"value\":\"Selective Disclosure Response\",\"depth\":1},{\"value\":\"Attributes\",\"depth\":4}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/tx\"},\"headings\":[{\"value\":\"Ethereum Transaction Request\",\"depth\":1},{\"value\":\"Signed Transaction Request\",\"depth\":2},{\"value\":\"Attributes\",\"depth\":3},{\"value\":\"ERC 67 Unsigned Transaction Request\",\"depth\":2},{\"value\":\"Attributes\",\"depth\":3},{\"value\":\"Addresses and Network selection\",\"depth\":2},{\"value\":\"Transaction Request Validity\",\"depth\":2},{\"value\":\"ETH Value Transfer\",\"depth\":3},{\"value\":\"ETH Value Transfer\",\"depth\":3},{\"value\":\"Ethereum Smart Contract creation\",\"depth\":3},{\"value\":\"Client Callback\",\"depth\":2}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/verification\"},\"headings\":[{\"value\":\"Verification\",\"depth\":1},{\"value\":\"Attributes\",\"depth\":2},{\"value\":\"Claims Best Practices\",\"depth\":2},{\"value\":\"Use atomic claims\",\"depth\":3},{\"value\":\"Bundling multiple claims as one\",\"depth\":3},{\"value\":\"Claim Taxonomy\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/verificationreq\"},\"headings\":[{\"value\":\"Verified Claim Request\",\"depth\":1},{\"value\":\"Attributes\",\"depth\":4}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/pki/identitydocument\"},\"headings\":[{\"value\":\"Identity Document\",\"depth\":1},{\"value\":\"Contents\",\"depth\":2},{\"value\":\"Parameters\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/pki/index\"},\"headings\":[{\"value\":\"uPort PKI\",\"depth\":1},{\"value\":\"Purpose\",\"depth\":2},{\"value\":\"Creating and Verifying a JWT\",\"depth\":2},{\"value\":\"Identity Document\",\"depth\":2},{\"value\":\"Verifying a signature\",\"depth\":2},{\"value\":\"Resolving the Public Key for \",\"depth\":3},{\"value\":\"Resolving the Public Encryption Key for \",\"depth\":3},{\"value\":\"Registering an Identity Document\",\"depth\":2},{\"value\":\"External Accounts (Key Pairs)\",\"depth\":3},{\"value\":\"Smart Contract Accounts\",\"depth\":3},{\"value\":\"uPort Mobile App Created Identities\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/rest-apis/fuel-server\"},\"headings\":[{\"value\":\"Transaction Fueling Server\",\"depth\":1},{\"value\":\"API Description\",\"depth\":2},{\"value\":\"Fuel Token\",\"depth\":3},{\"value\":\"Fund address\",\"depth\":3},{\"value\":\"Endpoint\",\"depth\":4},{\"value\":\"Header\",\"depth\":4},{\"value\":\"Body\",\"depth\":4},{\"value\":\"Response\",\"depth\":4},{\"value\":\"Response data\",\"depth\":4}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/rest-apis/relay-server\"},\"headings\":[{\"value\":\"Meta Transaction Relaying Server\",\"depth\":1},{\"value\":\"API Description\",\"depth\":2},{\"value\":\"Fuel Token\",\"depth\":3},{\"value\":\"MetaSignedTx\",\"depth\":3},{\"value\":\"Endpoint\",\"depth\":4},{\"value\":\"Header\",\"depth\":4},{\"value\":\"Body\",\"depth\":4},{\"value\":\"Response\",\"depth\":4},{\"value\":\"Response data\",\"depth\":4}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/transports/index\"},\"headings\":[{\"value\":\"Request/Response Transports\",\"depth\":1},{\"value\":\"Requests\",\"depth\":2},{\"value\":\"Open URL\",\"depth\":3},{\"value\":\"QR Code\",\"depth\":3},{\"value\":\"Push Notifications\",\"depth\":3},{\"value\":\"Responses\",\"depth\":2},{\"value\":\"Redirect callback type\",\"depth\":3},{\"value\":\"HTTP post callback type\",\"depth\":3},{\"value\":\"Messaging Server\",\"depth\":2},{\"value\":\"Preparing callback URL\",\"depth\":3},{\"value\":\"Listening for Response\",\"depth\":3},{\"value\":\"Endpoint\",\"depth\":4},{\"value\":\"Response\",\"depth\":4},{\"value\":\"Response data\",\"depth\":4},{\"value\":\"Cleanup\",\"depth\":3},{\"value\":\"Endpoint\",\"depth\":4},{\"value\":\"Response\",\"depth\":4},{\"value\":\"Examples\",\"depth\":2},{\"value\":\"Mobile Browser Transport\",\"depth\":3},{\"value\":\"Desktop Browser Serverless Transport\",\"depth\":3},{\"value\":\"Desktop Browser Server Backed Transport\",\"depth\":3},{\"value\":\"Push Notification Transport\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/transports/push\"},\"headings\":[{\"value\":\"Push Notification Transport\",\"depth\":1},{\"value\":\"Proper encoding of the request\",\"depth\":3},{\"value\":\"Sending the request\",\"depth\":2},{\"value\":\"Push notification server\",\"depth\":3},{\"value\":\"Endpoint\",\"depth\":4},{\"value\":\"Headers\",\"depth\":4},{\"value\":\"Body\",\"depth\":4},{\"value\":\"Response\",\"depth\":4},{\"value\":\"Response data\",\"depth\":4}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/did-jwt/guides/index\"},\"headings\":[{\"value\":\"Working with did-JWT's\",\"depth\":1},{\"value\":\"Creating a JWT\",\"depth\":2},{\"value\":\"Parameters\",\"depth\":4},{\"value\":\"Promise Return Value\",\"depth\":4},{\"value\":\"Verifying a JWT\",\"depth\":2},{\"value\":\"Parameters\",\"depth\":4},{\"value\":\"Promise Return Value\",\"depth\":4},{\"value\":\"Signer Functions\",\"depth\":2},{\"value\":\"SimpleSigner\",\"depth\":3},{\"value\":\"Parameters\",\"depth\":4},{\"value\":\"Creating Custom Signers for integrating with HSM\",\"depth\":3},{\"value\":\"Parameters\",\"depth\":4},{\"value\":\"Promise Return Value\",\"depth\":4}],\"frontmatter\":{\"category\":\"guides\",\"index\":4}}},{\"node\":{\"fields\":{\"slug\":\"/did-jwt/reference/index\"},\"headings\":[{\"value\":\"Algorithms supported\",\"depth\":2},{\"value\":\"DID PublicKey Types\",\"depth\":2},{\"value\":\"Claims\",\"depth\":2},{\"value\":\"Modules\",\"depth\":2},{\"value\":\"Functions\",\"depth\":2},{\"value\":\"did-jwt/JWT\",\"depth\":2},{\"value\":\"did-jwt/JWT.decodeJWT(jwt) ⇒ \",\"depth\":3},{\"value\":\"did-jwt/JWT.createJWT(payload, \",\"depth\":3},{\"value\":\"did-jwt/JWT.verifyJWT(jwt, \",\"depth\":3},{\"value\":\"did-jwt/JWT.resolveAuthenticator(alg, did, auth) ⇒ \",\"depth\":3},{\"value\":\"SimpleSigner(hexPrivateKey) ⇒ \",\"depth\":2}],\"frontmatter\":{\"category\":\"reference\",\"index\":3}}},{\"node\":{\"fields\":{\"slug\":\"/uport-connect/guides/tutorial\"},\"headings\":[{\"value\":\"How to integrate uPort into your dapp\",\"depth\":1},{\"value\":\"Introduction\",\"depth\":2},{\"value\":\"Getting started\",\"depth\":2}],\"frontmatter\":{\"category\":\"tutorials\",\"index\":0}}},{\"node\":{\"fields\":{\"slug\":\"/muport-core-js/guides/simple-id\"},\"headings\":[{\"value\":\"Simple ID (muPort)\",\"depth\":1},{\"value\":\"Onboarding/Signup\",\"depth\":2},{\"value\":\"Interacting with a service\",\"depth\":2},{\"value\":\"Setting up recovery network\",\"depth\":2},{\"value\":\"Using the recovery network\",\"depth\":2},{\"value\":\"Updating the encrypted recovery shards\",\"depth\":2}],\"frontmatter\":{\"category\":\"guides\",\"index\":6}}},{\"node\":{\"fields\":{\"slug\":\"/uport-connect/guides/usage\"},\"headings\":[{\"value\":\"Communication and Transactions how-to\",\"depth\":1},{\"value\":\"Communication\",\"depth\":1},{\"value\":\"Default QR flow\",\"depth\":2},{\"value\":\"Default Mobile Requests\",\"depth\":2},{\"value\":\"Push Notifications\",\"depth\":2},{\"value\":\"Ethereum Interactions and Transactions\",\"depth\":1},{\"value\":\"Using with web3\",\"depth\":2},{\"value\":\"Using a provider\",\"depth\":2},{\"value\":\"Using without web3\",\"depth\":2}],\"frontmatter\":{\"category\":\"tutorials\",\"index\":2}}},{\"node\":{\"fields\":{\"slug\":\"/uport-connect/reference/index\"},\"headings\":[{\"value\":\"Modules\",\"depth\":2},{\"value\":\"Classes\",\"depth\":2},{\"value\":\"uport-connect/topicFactory\",\"depth\":2},{\"value\":\"uport-connect/topicFactory~TopicFactory(isOnMobile, pollingInterval, chasquiUrl) ⇒ \",\"depth\":3},{\"value\":\"TopicFactory~waitForHashChange(topicName, cb)\",\"depth\":4},{\"value\":\"TopicFactory~pollForResult(topicName, url, cb, cancelled)\",\"depth\":4},{\"value\":\"TopicFactory~clearTopic(url)\",\"depth\":4},{\"value\":\"TopicFactory~newTopic(topicName) ⇒ \",\"depth\":4},{\"value\":\"Connect ⇐ \",\"depth\":2},{\"value\":\"new Connect(appName, \",\"depth\":3},{\"value\":\"connect.getWeb3() ⇒ \",\"depth\":3},{\"value\":\"connect.getProvider() ⇒ \",\"depth\":3},{\"value\":\"connect.requestCredentials(\",\"depth\":3},{\"value\":\"connect.requestAddress(\",\"depth\":3},{\"value\":\"connect.attestCredentials(credential, \",\"depth\":3},{\"value\":\"connect.request(request) ⇒ \",\"depth\":3},{\"value\":\"connect.contract(abi) ⇒ \",\"depth\":3},{\"value\":\"connect.sendTransaction(txobj) ⇒ \",\"depth\":3},{\"value\":\"ConnectCore\",\"depth\":2},{\"value\":\"new ConnectCore(appName, \",\"depth\":3},{\"value\":\"connectCore.getProvider() ⇒ \",\"depth\":3},{\"value\":\"connectCore.requestCredentials(\",\"depth\":3},{\"value\":\"connectCore.requestAddress(\",\"depth\":3},{\"value\":\"connectCore.attestCredentials(credential, \",\"depth\":3},{\"value\":\"connectCore.request(request) ⇒ \",\"depth\":3},{\"value\":\"connectCore.contract(abi) ⇒ \",\"depth\":3},{\"value\":\"connectCore.sendTransaction(txobj) ⇒ \",\"depth\":3},{\"value\":\"UportSubprovider\",\"depth\":2},{\"value\":\"new UportSubprovider(args)\",\"depth\":3},{\"value\":\"uportSubprovider.send()\",\"depth\":3},{\"value\":\"uportSubprovider.sendAsync(payload, callback)\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":4}}},{\"node\":{\"fields\":{\"slug\":\"/uport-js/guides/server-side-credentials-example\"},\"headings\":[{\"value\":\"Server-side Credentials\",\"depth\":1},{\"value\":\"Prerequisites:\",\"depth\":3},{\"value\":\"Register an App\",\"depth\":2},{\"value\":\"Setup a Requestor Service\",\"depth\":2},{\"value\":\"Setup a Creator Service\",\"depth\":2},{\"value\":\"For the fields of the credential:\",\"depth\":3},{\"value\":\"Setup a Verification service\",\"depth\":2}],\"frontmatter\":{\"category\":\"tutorials\",\"index\":1}}},{\"node\":{\"fields\":{\"slug\":\"/uport-js/reference/index\"},\"headings\":[{\"value\":\"Modules\",\"depth\":2},{\"value\":\"Classes\",\"depth\":2},{\"value\":\"uport-js/JWT\",\"depth\":2},{\"value\":\"uport-js/JWT.createJWT(\",\"depth\":3},{\"value\":\"uport-js/JWT.verifyJWT(\",\"depth\":3},{\"value\":\"Credentials\",\"depth\":2},{\"value\":\"new Credentials(\",\"depth\":3},{\"value\":\"credentials.createRequest(\",\"depth\":3},{\"value\":\"credentials.createVerificationRequest(unsignedClaim, sub) ⇒ \",\"depth\":3},{\"value\":\"credentials.receive(token, \",\"depth\":3},{\"value\":\"credentials.push(token, payload, pubEncKey) ⇒ \",\"depth\":3},{\"value\":\"credentials.attest(\",\"depth\":3},{\"value\":\"credentials.lookup(address) ⇒ \",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":4}}}]},\"postBySlug\":{\"htmlAst\":{\"type\":\"root\",\"children\":[{\"type\":\"element\",\"tagName\":\"h1\",\"properties\":{\"id\":\"simple-id-muport\"},\"children\":[{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"#simple-id-muport\",\"ariaHidden\":true,\"className\":[\"anchor\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"svg\",\"properties\":{\"ariaHidden\":\"true\",\"height\":16,\"version\":\"1.1\",\"viewBox\":\"0 0 16 16\",\"width\":16},\"children\":[{\"type\":\"element\",\"tagName\":\"path\",\"properties\":{\"fillRule\":\"evenodd\",\"d\":\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"},\"children\":[]}]}]},{\"type\":\"text\",\"value\":\"Simple ID (muPort)\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"In this document we outline a description of key management for an identity using an abstract \"},{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"https://w3c-ccg.github.io/did-spec/\"},\"children\":[{\"type\":\"text\",\"value\":\"DID\"}]},{\"type\":\"text\",\"value\":\" (Decentralized IDentifier) method, as well as a number of Ethereum accounts. Thus, we assume the existence of a DID method specification for registering, updating and resolving a DID to a DDO (DID descriptor object). We will describe a suggested outline of key management for such an identity.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"In this document, lower case indicates a \"},{\"type\":\"element\",\"tagName\":\"strong\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"private key\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(k0)\"}]},{\"type\":\"text\",\"value\":\" and upper case indicates a \"},{\"type\":\"element\",\"tagName\":\"strong\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"public key\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(K0)\"}]},{\"type\":\"text\",\"value\":\", and a \"},{\"type\":\"element\",\"tagName\":\"strong\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"key pair\"}]},{\"type\":\"text\",\"value\":\" is indicated as a pair \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(k0, K0)\"}]},{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{\"id\":\"onboardingsignup\"},\"children\":[{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"#onboardingsignup\",\"ariaHidden\":true,\"className\":[\"anchor\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"svg\",\"properties\":{\"ariaHidden\":\"true\",\"height\":16,\"version\":\"1.1\",\"viewBox\":\"0 0 16 16\",\"width\":16},\"children\":[{\"type\":\"element\",\"tagName\":\"path\",\"properties\":{\"fillRule\":\"evenodd\",\"d\":\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"},\"children\":[]}]}]},{\"type\":\"text\",\"value\":\"Onboarding/Signup\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Right now the primary device a user interacts with will most likely be a smartphone but could be another \\\"device\\\" as well.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"The user's device generates a master seed/keypair \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(m, M)\"}]},{\"type\":\"text\",\"value\":\" from which we derive (using BIP39) a signing keypair \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(k0, K0)\"}]},{\"type\":\"text\",\"value\":\", a recovery keypair \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(r, R)\"}]},{\"type\":\"text\",\"value\":\" and an encryption keypair \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(e0, E0)\"}]},{\"type\":\"text\",\"value\":\". We also derive one or more ethereum account keys \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(a0, A0)\"}]},{\"type\":\"text\",\"value\":\", \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(a1, A1)\"}]},{\"type\":\"text\",\"value\":\", \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(a2, A2)\"}]},{\"type\":\"text\",\"value\":\". For simplicity to begin with we can use the keys \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(ai, Ai)\"}]},{\"type\":\"text\",\"value\":\" both as a signing key and a recovery key.  The account keys are set up to control associated Proxy contracts using the \"},{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"https://github.com/uport-project/uport-identity\"},\"children\":[{\"type\":\"text\",\"value\":\"IdentityManager\"}]},{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ul\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"A DID is registered for the user mapping to a DDO that contains the public keys \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"R\"}]},{\"type\":\"text\",\"value\":\", \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"K0\"}]},{\"type\":\"text\",\"value\":\" and \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"E0\"}]},{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"The recovery keypair \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(r, R)\"}]},{\"type\":\"text\",\"value\":\" is for updating the DDO, i.e. or updating/rotating the signing key, encryption key or the recovery key itself.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"The signing keypair \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(k0, K0)\"}]},{\"type\":\"text\",\"value\":\" is for signing messages (mainly in the form of JWTs) and authenticating.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"The encryption keypair \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(e0, E0)\"}]},{\"type\":\"text\",\"value\":\" is used to encrypt the shards of the master key in a recovery situation.\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"We use the EthPublish (\"},{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"https://github.com/uport-project/eth-publish\"},\"children\":[{\"type\":\"text\",\"value\":\"https://github.com/uport-project/eth-publish\"}]},{\"type\":\"text\",\"value\":\") contract to publish the users DID using the recovery key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"R\"}]},{\"type\":\"text\",\"value\":\", as well as publish the Proxy contract addresses associated with the Ethereum account keys A0, A1 etc. This way we can easily recover the necessary data in the event of a recovery.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{\"id\":\"interacting-with-a-service\"},\"children\":[{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"#interacting-with-a-service\",\"ariaHidden\":true,\"className\":[\"anchor\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"svg\",\"properties\":{\"ariaHidden\":\"true\",\"height\":16,\"version\":\"1.1\",\"viewBox\":\"0 0 16 16\",\"width\":16},\"children\":[{\"type\":\"element\",\"tagName\":\"path\",\"properties\":{\"fillRule\":\"evenodd\",\"d\":\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"},\"children\":[]}]}]},{\"type\":\"text\",\"value\":\"Interacting with a service\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"When interacting with a service, the service sends a request (in uPort this would be a JSON Web Token of type \"},{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"https://developer.uport.me/messages/sharereq\"},\"children\":[{\"type\":\"text\",\"value\":\"shareReq\"}]},{\"type\":\"text\",\"value\":\" - see all \"},{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"https://developer.uport.me/readme#request-flows\"},\"children\":[{\"type\":\"text\",\"value\":\"request flows\"}]},{\"type\":\"text\",\"value\":\" . The user's device would sign a response using the signing key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"k0\"}]},{\"type\":\"text\",\"value\":\" and with the issuer \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(iss)\"}]},{\"type\":\"text\",\"value\":\" field being set to the DID.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"The service uses the universal resolver to resolve the DID to the DDO, checks the signing public key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"K0\"}]},{\"type\":\"text\",\"value\":\" in the DDO and verifies that it's the same key that signed the response. It verifies the signature of the JWT using \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"K0\"}]},{\"type\":\"text\",\"value\":\", thus proving that the entity which created the JWT possesses \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"k0\"}]},{\"type\":\"text\",\"value\":\". In this way, the device authenticates to the service, proving that it possesses \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"k0\"}]},{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Using seed words to recover the master key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"m\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"This setting is for advanced users that are comfortable managing their own keys. The master key would be encoded as 12 or 24 words, following the BIP39 specification. The user can then store this either printed out or in a password manager or similar, and recover access to a new device by entering in the words.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{\"id\":\"setting-up-recovery-network\"},\"children\":[{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"#setting-up-recovery-network\",\"ariaHidden\":true,\"className\":[\"anchor\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"svg\",\"properties\":{\"ariaHidden\":\"true\",\"height\":16,\"version\":\"1.1\",\"viewBox\":\"0 0 16 16\",\"width\":16},\"children\":[{\"type\":\"element\",\"tagName\":\"path\",\"properties\":{\"fillRule\":\"evenodd\",\"d\":\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"},\"children\":[]}]}]},{\"type\":\"text\",\"value\":\"Setting up recovery network\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"If we are to lose the master private key m at some point we want a way to recover access to it. One way of doing this is to use a Shamir Threshold scheme / Shamir Secret Sharing (SSS) scheme (\"},{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"http://dl.acm.org/citation.cfm?doid=359168.359176\"},\"children\":[{\"type\":\"text\",\"value\":\"http://dl.acm.org/citation.cfm?doid=359168.359176\"}]},{\"type\":\"text\",\"value\":\").\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Suppose we designate three recovery delegates with DIDs D1, D2, D3 and corresponding asymmetric encryption key pairs \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(e1, E1)\"}]},{\"type\":\"text\",\"value\":\", \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(e2, E2)\"}]},{\"type\":\"text\",\"value\":\", \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(e3, E3)\"}]},{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"We split the master private key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"m\"}]},{\"type\":\"text\",\"value\":\" into shares \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"S1\"}]},{\"type\":\"text\",\"value\":\", \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"S2\"}]},{\"type\":\"text\",\"value\":\", \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"S3\"}]},{\"type\":\"text\",\"value\":\" in a 2-of-3 SSS scheme and encrypt them to the respective recipient:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(enc(E1, S1), enc(E2, S2), enc(E3, S3))\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"The above package is added to the DID Document. Similarly we can choose n contacts and set up a general m-of-n scheme.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Note: for this scheme to work the master key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"m\"}]},{\"type\":\"text\",\"value\":\" cannot be stored on a smart card or similar device that prevents extraction of the key.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Note: Assuming \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"m\"}]},{\"type\":\"text\",\"value\":\" is an ECC 256 bit private key, the prime modulus for SSS must be larger than 256 bits. A known good prime such as\\n\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bd\"}]},{\"type\":\"text\",\"value\":\", which is the NIST P384 curve prime should be used.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{\"id\":\"using-the-recovery-network\"},\"children\":[{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"#using-the-recovery-network\",\"ariaHidden\":true,\"className\":[\"anchor\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"svg\",\"properties\":{\"ariaHidden\":\"true\",\"height\":16,\"version\":\"1.1\",\"viewBox\":\"0 0 16 16\",\"width\":16},\"children\":[{\"type\":\"element\",\"tagName\":\"path\",\"properties\":{\"fillRule\":\"evenodd\",\"d\":\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"},\"children\":[]}]}]},{\"type\":\"text\",\"value\":\"Using the recovery network\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Suppose the user loses their master key. We can recover using the following steps:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ol\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"On their new main device, user generates a temporary encryption key pair \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(eT, ET)\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"The recovering user contacts recovery delegate D1 and presents them the encryption public key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ET\"}]},{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"D1\"}]},{\"type\":\"text\",\"value\":\" retrieves the DID document of the user and decrypts \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"enc(E1, S1)\"}]},{\"type\":\"text\",\"value\":\" using \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"e1\"}]},{\"type\":\"text\",\"value\":\" to get \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"S1\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"D1\"}]},{\"type\":\"text\",\"value\":\" encrypts \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"S1\"}]},{\"type\":\"text\",\"value\":\" to get \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"enc(ET, S1)\"}]},{\"type\":\"text\",\"value\":\" and provides this to the user through some channel. \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"D1\"}]},{\"type\":\"text\",\"value\":\" may also present the recovering user with their original DID (\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"D0\"}]},{\"type\":\"text\",\"value\":\" say) through this channel.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"User decrypts \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"enc(ET, S1)\"}]},{\"type\":\"text\",\"value\":\" with \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"eT\"}]},{\"type\":\"text\",\"value\":\" to obtain \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"S1\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"User repeats steps 2-5 until enough shares have been obtained to reconstruct \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"m\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"m\"}]},{\"type\":\"text\",\"value\":\" is used to derive the recovery key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"R\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"User retrieves the DID document (if they have their own DID) and extracts \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"R\"}]},{\"type\":\"text\",\"value\":\", and makes sure it matches the derived key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"R\"}]},{\"type\":\"text\",\"value\":\". Alternatively the key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"R\"}]},{\"type\":\"text\",\"value\":\" is used to look up the current DID & DID Document through a registry entry.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"User derives the Account keys \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(a1, A1)\"}]},{\"type\":\"text\",\"value\":\", \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(a2, A2)\"}]},{\"type\":\"text\",\"value\":\" etc. At first we can use the same key for signing and recovery, and since we are recovering the signing keys themselves no transactions are necessary during recovery.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"(\"},{\"type\":\"element\",\"tagName\":\"em\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"We may opt to skip this part for simplicity in the first iteration\"}]},{\"type\":\"text\",\"value\":\") User generates a new master keypair \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(m', M')\"}]},{\"type\":\"text\",\"value\":\", derives new keys \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(r’, R’)\"}]},{\"type\":\"text\",\"value\":\", \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(k0’, K0’)\"}]},{\"type\":\"text\",\"value\":\", \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(e0’, E0’)\"}]},{\"type\":\"text\",\"value\":\" and uses the old recovery key r to update the DID document with the new keys \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"R’\"}]},{\"type\":\"text\",\"value\":\", \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"K0’\"}]},{\"type\":\"text\",\"value\":\", \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"E0’\"}]},{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{\"id\":\"updating-the-encrypted-recovery-shards\"},\"children\":[{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"#updating-the-encrypted-recovery-shards\",\"ariaHidden\":true,\"className\":[\"anchor\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"svg\",\"properties\":{\"ariaHidden\":\"true\",\"height\":16,\"version\":\"1.1\",\"viewBox\":\"0 0 16 16\",\"width\":16},\"children\":[{\"type\":\"element\",\"tagName\":\"path\",\"properties\":{\"fillRule\":\"evenodd\",\"d\":\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"},\"children\":[]}]}]},{\"type\":\"text\",\"value\":\"Updating the encrypted recovery shards\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Suppose the user updates the recovery network. The master key should now be rotated because if we no longer trust some of the recovery delegates they should not be able to recover a useful master key.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ol\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"User selects new set of recovery delegates\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"User generates new master key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"M'\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"User sets up recovery network as in section “setting up recovery network”\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"User uses old master key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"M\"}]},{\"type\":\"text\",\"value\":\" to update DDO with new master key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"M'\"}]},{\"type\":\"text\",\"value\":\" and new recovery network\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]}],\"data\":{\"quirksMode\":false}},\"timeToRead\":6,\"excerpt\":\"Simple ID (muPort) In this document we outline a description of key management for an identity using an abstract  DID  (Decentralized…\",\"headings\":[{\"value\":\"Simple ID (muPort)\",\"depth\":1},{\"value\":\"Onboarding/Signup\",\"depth\":2},{\"value\":\"Interacting with a service\",\"depth\":2},{\"value\":\"Setting up recovery network\",\"depth\":2},{\"value\":\"Using the recovery network\",\"depth\":2},{\"value\":\"Updating the encrypted recovery shards\",\"depth\":2}],\"frontmatter\":{\"title\":\"Simple ID (muPort)\",\"category\":\"guides\",\"type\":\"content\"},\"fields\":{\"slug\":\"/muport-core-js/guides/simple-id\"}},\"postByCategory\":{\"totalCount\":19,\"edges\":[{\"node\":{\"fields\":{\"slug\":\"/attestcredentials\"},\"headings\":[{\"value\":\"Attesting Credentials\",\"depth\":1},{\"value\":\"If push is enabled\",\"depth\":6},{\"value\":\"If push is not enabled\",\"depth\":6},{\"value\":\"Calling the attest method\",\"depth\":2},{\"value\":\"Setting an expiration date\",\"depth\":2},{\"value\":\"Attesting multiple credentials\",\"depth\":2}],\"excerpt\":\"Attesting Credentials * If the user consents, the uPort app saves the attestation token to their device. Browser displays a QR code (if…\",\"timeToRead\":2,\"frontmatter\":{\"title\":\"Attesting Credentials\",\"category\":\"guides\",\"index\":2,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/gettingstarted\"},\"headings\":[{\"value\":\"Getting Started\",\"depth\":1},{\"value\":\"Requirements\",\"depth\":3},{\"value\":\"1. Get the uPort App\",\"depth\":2},{\"value\":\"2. Get an Application Identity\",\"depth\":2},{\"value\":\"3. Setup Dependencies\",\"depth\":2},{\"value\":\"4. Configure and Run Code\",\"depth\":2}],\"excerpt\":\"Getting Started Welcome! The goal of this guide is to get you set up quickly with a skeleton project and to familiarize you with a few basic…\",\"timeToRead\":4,\"frontmatter\":{\"title\":\"Getting Started\",\"category\":\"guides\",\"index\":0,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/readme\"},\"headings\":[{\"value\":\"uPort Specs\",\"depth\":1},{\"value\":\"Identities\",\"depth\":2},{\"value\":\"Identities created using the uPort Mobile App\",\"depth\":3},{\"value\":\"Request Flows\",\"depth\":2},{\"value\":\"More about request flows\",\"depth\":3},{\"value\":\"Request and Response Transports\",\"depth\":2},{\"value\":\"Request/Response Transports\",\"depth\":3},{\"value\":\"Off-chain Messages\",\"depth\":2},{\"value\":\"More about Off-chain Messages\",\"depth\":3},{\"value\":\"On-chain Transactions\",\"depth\":2},{\"value\":\"More about Signing Ethereum transactions\",\"depth\":3},{\"value\":\"uPort PKI\",\"depth\":2},{\"value\":\"More about the uPort PKI\",\"depth\":3}],\"excerpt\":\"uPort Specs uPort is a platform for user centric identity and communication. The platform currently consists of our mobile app, Ethereum…\",\"timeToRead\":2,\"frontmatter\":{\"title\":\"Uport Specs\",\"category\":\"reference\",\"index\":0,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/reactuporttruffle\"},\"headings\":[{\"value\":\"React-uport Truffle box\",\"depth\":1},{\"value\":\"Setup React Truffle Box\",\"depth\":2},{\"value\":\"Create the necessary uport-connect objects\",\"depth\":2},{\"value\":\"Request a user's information\",\"depth\":2},{\"value\":\"Create an Attestation\",\"depth\":2},{\"value\":\"Wrapping it up\",\"depth\":2}],\"excerpt\":\"React-uport Truffle box This a short tutorial to requesting credentials and signing attestations with uPort.  We will be leveraging the…\",\"timeToRead\":4,\"frontmatter\":{\"title\":\"React-Uport Truffle Box\",\"category\":\"tutorials\",\"index\":0,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/requestcredentials\"},\"headings\":[{\"value\":\"Requesting Credentials\",\"depth\":1},{\"value\":\"Desktop web\",\"depth\":3},{\"value\":\"Mobile web\",\"depth\":3},{\"value\":\"Calling the request method\",\"depth\":2},{\"value\":\"Requesting specific credentials\",\"depth\":2},{\"value\":\"Verifying credentials\",\"depth\":2},{\"value\":\"Enabling Push Notifications\",\"depth\":2}],\"excerpt\":\"Requesting Credentials The first and most basic step you should take is to allow your user to connect their uPort to your app. Uport-connect…\",\"timeToRead\":4,\"frontmatter\":{\"title\":\"Requesting Credentials\",\"category\":\"guides\",\"index\":1,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/signtransactions\"},\"headings\":[{\"value\":\"Signing Transactions\",\"depth\":1},{\"value\":\"Supply the contract ABI\",\"depth\":2},{\"value\":\"Create the contract object\",\"depth\":2},{\"value\":\"Call a basic method on the contract\",\"depth\":2},{\"value\":\"Call a tx signing method on the contract\",\"depth\":2},{\"value\":\"Wait for mining to complete\",\"depth\":2}],\"excerpt\":\"Signing Transactions Browser displays QR code with randomly generated sessionID in a URI Browser starts polling chasqui using the sessionId…\",\"timeToRead\":4,\"frontmatter\":{\"title\":\"Signing Transactions\",\"category\":\"guides\",\"index\":3,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/clients\"},\"headings\":[{\"value\":\"Clients (apps)\",\"depth\":1},{\"value\":\"uPort Mobile Wallet\",\"depth\":2},{\"value\":\"uPort App Manager\",\"depth\":2},{\"value\":\"uPort JS Client\",\"depth\":2}],\"excerpt\":\"Clients (apps) Allow users, developers, and applications to interact with the uPort platform. uPort Mobile Wallet : Secure mobile self…\",\"timeToRead\":1,\"frontmatter\":{\"title\":\"Clients (apps)\",\"category\":\"overview\",\"index\":3,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/overview\"},\"headings\":[{\"value\":\"OVERVIEW\",\"depth\":1}],\"excerpt\":\"OVERVIEW uPort is an interoperable identity network for a secure, private, decentralized web. uPort provides open protocols for…\",\"timeToRead\":1,\"frontmatter\":{\"title\":\"Overview\",\"category\":\"overview\",\"index\":0,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/platform\"},\"headings\":[{\"value\":\"PLATFORM\",\"depth\":1},{\"value\":\"Ethereum Identity Components\",\"depth\":2},{\"value\":\"Network Microservices\",\"depth\":2},{\"value\":\"Libraries\",\"depth\":2}],\"excerpt\":\"PLATFORM The uPort Platform is our implementation of the uPort Protocol designed to make decentralized identities on Ethereum easy to create…\",\"timeToRead\":3,\"frontmatter\":{\"title\":\"Platform\",\"category\":\"overview\",\"index\":2,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/protocol\"},\"headings\":[{\"value\":\"PROTOCOLS\",\"depth\":1},{\"value\":\"uPort Identity Protocol\",\"depth\":2},{\"value\":\"uPort Claims Protocol\",\"depth\":2}],\"excerpt\":\"PROTOCOLS uPort consists of identity and messaging protocols that together form an interoperable identity layer for the decentralized web…\",\"timeToRead\":1,\"frontmatter\":{\"title\":\"Protocols\",\"category\":\"overview\",\"index\":3,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/lambda-olorun/readme\"},\"headings\":[{\"value\":\"lambda-olorun\",\"depth\":1},{\"value\":\"Setting a new private chain\",\"depth\":2},{\"value\":\"Deploy uPort Identity Contracts\",\"depth\":3},{\"value\":\"Configure Olorun hosted service for a new private chain\",\"depth\":3},{\"value\":\"Run your own Olorun\",\"depth\":3},{\"value\":\"Contributing\",\"depth\":2}],\"excerpt\":\"lambda-olorun Olorun  (Yoruba: Ọlọrun or Ọlọhun), literally the ruler of (or in) the Heavens, is the name given to one of the three…\",\"timeToRead\":3,\"frontmatter\":{\"title\":\"Private Chain Support\",\"category\":\"guides\",\"index\":5,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/did-jwt/guides/index\"},\"headings\":[{\"value\":\"Working with did-JWT's\",\"depth\":1},{\"value\":\"Creating a JWT\",\"depth\":2},{\"value\":\"Parameters\",\"depth\":4},{\"value\":\"Promise Return Value\",\"depth\":4},{\"value\":\"Verifying a JWT\",\"depth\":2},{\"value\":\"Parameters\",\"depth\":4},{\"value\":\"Promise Return Value\",\"depth\":4},{\"value\":\"Signer Functions\",\"depth\":2},{\"value\":\"SimpleSigner\",\"depth\":3},{\"value\":\"Parameters\",\"depth\":4},{\"value\":\"Creating Custom Signers for integrating with HSM\",\"depth\":3},{\"value\":\"Parameters\",\"depth\":4},{\"value\":\"Promise Return Value\",\"depth\":4}],\"excerpt\":\"Working with did-JWT's Creating a JWT Use the   function Parameters Name Description Required an object containing any claims you want to…\",\"timeToRead\":5,\"frontmatter\":{\"title\":\"Working with did-JWT's\",\"category\":\"guides\",\"index\":4,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/did-jwt/reference/index\"},\"headings\":[{\"value\":\"Algorithms supported\",\"depth\":2},{\"value\":\"DID PublicKey Types\",\"depth\":2},{\"value\":\"Claims\",\"depth\":2},{\"value\":\"Modules\",\"depth\":2},{\"value\":\"Functions\",\"depth\":2},{\"value\":\"did-jwt/JWT\",\"depth\":2},{\"value\":\"did-jwt/JWT.decodeJWT(jwt) ⇒ \",\"depth\":3},{\"value\":\"did-jwt/JWT.createJWT(payload, \",\"depth\":3},{\"value\":\"did-jwt/JWT.verifyJWT(jwt, \",\"depth\":3},{\"value\":\"did-jwt/JWT.resolveAuthenticator(alg, did, auth) ⇒ \",\"depth\":3},{\"value\":\"SimpleSigner(hexPrivateKey) ⇒ \",\"depth\":2}],\"excerpt\":\"Algorithms supported  the  secp256k1 ECDSA curve  the  secp256k1 ECDSA curve  with recovery parameter DID PublicKey Types The   section of a…\",\"timeToRead\":7,\"frontmatter\":{\"title\":\"did-jwt\",\"category\":\"reference\",\"index\":3,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/uport-connect/guides/tutorial\"},\"headings\":[{\"value\":\"How to integrate uPort into your dapp\",\"depth\":1},{\"value\":\"Introduction\",\"depth\":2},{\"value\":\"Getting started\",\"depth\":2}],\"excerpt\":\"How to integrate uPort into your dapp Introduction This tutorial will show you how to add support for uPort in your decentralized Ethereum…\",\"timeToRead\":3,\"frontmatter\":{\"title\":\"How to integrate Uport-Connect\",\"category\":\"tutorials\",\"index\":0,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/muport-core-js/guides/simple-id\"},\"headings\":[{\"value\":\"Simple ID (muPort)\",\"depth\":1},{\"value\":\"Onboarding/Signup\",\"depth\":2},{\"value\":\"Interacting with a service\",\"depth\":2},{\"value\":\"Setting up recovery network\",\"depth\":2},{\"value\":\"Using the recovery network\",\"depth\":2},{\"value\":\"Updating the encrypted recovery shards\",\"depth\":2}],\"excerpt\":\"Simple ID (muPort) In this document we outline a description of key management for an identity using an abstract  DID  (Decentralized…\",\"timeToRead\":6,\"frontmatter\":{\"title\":\"Simple ID (muPort)\",\"category\":\"guides\",\"index\":6,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/uport-connect/guides/usage\"},\"headings\":[{\"value\":\"Communication and Transactions how-to\",\"depth\":1},{\"value\":\"Communication\",\"depth\":1},{\"value\":\"Default QR flow\",\"depth\":2},{\"value\":\"Default Mobile Requests\",\"depth\":2},{\"value\":\"Push Notifications\",\"depth\":2},{\"value\":\"Ethereum Interactions and Transactions\",\"depth\":1},{\"value\":\"Using with web3\",\"depth\":2},{\"value\":\"Using a provider\",\"depth\":2},{\"value\":\"Using without web3\",\"depth\":2}],\"excerpt\":\"Communication and Transactions how-to The following Connect object is the primary interface you will use. All details and additional…\",\"timeToRead\":7,\"frontmatter\":{\"title\":\"Communication and Transactions\",\"category\":\"tutorials\",\"index\":2,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/uport-connect/reference/index\"},\"headings\":[{\"value\":\"Modules\",\"depth\":2},{\"value\":\"Classes\",\"depth\":2},{\"value\":\"uport-connect/topicFactory\",\"depth\":2},{\"value\":\"uport-connect/topicFactory~TopicFactory(isOnMobile, pollingInterval, chasquiUrl) ⇒ \",\"depth\":3},{\"value\":\"TopicFactory~waitForHashChange(topicName, cb)\",\"depth\":4},{\"value\":\"TopicFactory~pollForResult(topicName, url, cb, cancelled)\",\"depth\":4},{\"value\":\"TopicFactory~clearTopic(url)\",\"depth\":4},{\"value\":\"TopicFactory~newTopic(topicName) ⇒ \",\"depth\":4},{\"value\":\"Connect ⇐ \",\"depth\":2},{\"value\":\"new Connect(appName, \",\"depth\":3},{\"value\":\"connect.getWeb3() ⇒ \",\"depth\":3},{\"value\":\"connect.getProvider() ⇒ \",\"depth\":3},{\"value\":\"connect.requestCredentials(\",\"depth\":3},{\"value\":\"connect.requestAddress(\",\"depth\":3},{\"value\":\"connect.attestCredentials(credential, \",\"depth\":3},{\"value\":\"connect.request(request) ⇒ \",\"depth\":3},{\"value\":\"connect.contract(abi) ⇒ \",\"depth\":3},{\"value\":\"connect.sendTransaction(txobj) ⇒ \",\"depth\":3},{\"value\":\"ConnectCore\",\"depth\":2},{\"value\":\"new ConnectCore(appName, \",\"depth\":3},{\"value\":\"connectCore.getProvider() ⇒ \",\"depth\":3},{\"value\":\"connectCore.requestCredentials(\",\"depth\":3},{\"value\":\"connectCore.requestAddress(\",\"depth\":3},{\"value\":\"connectCore.attestCredentials(credential, \",\"depth\":3},{\"value\":\"connectCore.request(request) ⇒ \",\"depth\":3},{\"value\":\"connectCore.contract(abi) ⇒ \",\"depth\":3},{\"value\":\"connectCore.sendTransaction(txobj) ⇒ \",\"depth\":3},{\"value\":\"UportSubprovider\",\"depth\":2},{\"value\":\"new UportSubprovider(args)\",\"depth\":3},{\"value\":\"uportSubprovider.send()\",\"depth\":3},{\"value\":\"uportSubprovider.sendAsync(payload, callback)\",\"depth\":3}],\"excerpt\":\"Modules Classes uport-connect/topicFactory Manages the communication channel between the uport-connect library and a\\n uPort mobile app. The…\",\"timeToRead\":25,\"frontmatter\":{\"title\":\"Uport Connect\",\"category\":\"reference\",\"index\":4,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/uport-js/guides/server-side-credentials-example\"},\"headings\":[{\"value\":\"Server-side Credentials\",\"depth\":1},{\"value\":\"Prerequisites:\",\"depth\":3},{\"value\":\"Register an App\",\"depth\":2},{\"value\":\"Setup a Requestor Service\",\"depth\":2},{\"value\":\"Setup a Creator Service\",\"depth\":2},{\"value\":\"For the fields of the credential:\",\"depth\":3},{\"value\":\"Setup a Verification service\",\"depth\":2}],\"excerpt\":\"Server-side Credentials Here we will demonstrate how to create and sign a custom credential on a server (called the Creator) and present…\",\"timeToRead\":9,\"frontmatter\":{\"title\":\"Uport-JS Server How-to\",\"category\":\"tutorials\",\"index\":1,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/uport-js/reference/index\"},\"headings\":[{\"value\":\"Modules\",\"depth\":2},{\"value\":\"Classes\",\"depth\":2},{\"value\":\"uport-js/JWT\",\"depth\":2},{\"value\":\"uport-js/JWT.createJWT(\",\"depth\":3},{\"value\":\"uport-js/JWT.verifyJWT(\",\"depth\":3},{\"value\":\"Credentials\",\"depth\":2},{\"value\":\"new Credentials(\",\"depth\":3},{\"value\":\"credentials.createRequest(\",\"depth\":3},{\"value\":\"credentials.createVerificationRequest(unsignedClaim, sub) ⇒ \",\"depth\":3},{\"value\":\"credentials.receive(token, \",\"depth\":3},{\"value\":\"credentials.push(token, payload, pubEncKey) ⇒ \",\"depth\":3},{\"value\":\"credentials.attest(\",\"depth\":3},{\"value\":\"credentials.lookup(address) ⇒ \",\"depth\":3}],\"excerpt\":\"Modules Classes uport-js/JWT uport-js/JWT .createJWT([config], payload)  ⇒  Promise. < Object, Error > .verifyJWT([config], jwt, callbackUrl…\",\"timeToRead\":10,\"frontmatter\":{\"title\":\"Uport JS\",\"category\":\"reference\",\"index\":4,\"type\":\"content\"}}}]}},\"pathContext\":{\"slug\":\"/muport-core-js/guides/simple-id\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---muport-core-js-guides-simple-id-f9d839aa88ca114f2646.js","module.exports = {\"data\":{\"allPostTitles\":{\"edges\":[{\"node\":{\"frontmatter\":{\"title\":\"Attesting Credentials\",\"index\":2,\"type\":\"content\"},\"fields\":{\"slug\":\"/attestcredentials\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Getting Started\",\"index\":0,\"type\":\"content\"},\"fields\":{\"slug\":\"/gettingstarted\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Uport Specs\",\"index\":0,\"type\":\"content\"},\"fields\":{\"slug\":\"/readme\"}}},{\"node\":{\"frontmatter\":{\"title\":\"React-Uport Truffle Box\",\"index\":0,\"type\":\"content\"},\"fields\":{\"slug\":\"/reactuporttruffle\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Requesting Credentials\",\"index\":1,\"type\":\"content\"},\"fields\":{\"slug\":\"/requestcredentials\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Signing Transactions\",\"index\":3,\"type\":\"content\"},\"fields\":{\"slug\":\"/signtransactions\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Clients (apps)\",\"index\":3,\"type\":\"content\"},\"fields\":{\"slug\":\"/clients\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Overview\",\"index\":0,\"type\":\"content\"},\"fields\":{\"slug\":\"/overview\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Platform\",\"index\":2,\"type\":\"content\"},\"fields\":{\"slug\":\"/platform\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Protocols\",\"index\":3,\"type\":\"content\"},\"fields\":{\"slug\":\"/protocol\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Private Chain Support\",\"index\":5,\"type\":\"content\"},\"fields\":{\"slug\":\"/lambda-olorun/readme\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Working with did-JWT's\",\"index\":4,\"type\":\"content\"},\"fields\":{\"slug\":\"/did-jwt/guides/index\"}}},{\"node\":{\"frontmatter\":{\"title\":\"did-jwt\",\"index\":3,\"type\":\"content\"},\"fields\":{\"slug\":\"/did-jwt/reference/index\"}}},{\"node\":{\"frontmatter\":{\"title\":\"How to integrate Uport-Connect\",\"index\":0,\"type\":\"content\"},\"fields\":{\"slug\":\"/uport-connect/guides/tutorial\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Simple ID (muPort)\",\"index\":6,\"type\":\"content\"},\"fields\":{\"slug\":\"/muport-core-js/guides/simple-id\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Communication and Transactions\",\"index\":2,\"type\":\"content\"},\"fields\":{\"slug\":\"/uport-connect/guides/usage\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Uport Connect\",\"index\":4,\"type\":\"content\"},\"fields\":{\"slug\":\"/uport-connect/reference/index\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Uport-JS Server How-to\",\"index\":1,\"type\":\"content\"},\"fields\":{\"slug\":\"/uport-js/guides/server-side-credentials-example\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Uport JS\",\"index\":4,\"type\":\"content\"},\"fields\":{\"slug\":\"/uport-js/reference/index\"}}}]},\"navCategories\":{\"edges\":[{\"node\":{\"fields\":{\"slug\":\"/attestcredentials\"},\"headings\":[{\"value\":\"Attesting Credentials\",\"depth\":1},{\"value\":\"If push is enabled\",\"depth\":6},{\"value\":\"If push is not enabled\",\"depth\":6},{\"value\":\"Calling the attest method\",\"depth\":2},{\"value\":\"Setting an expiration date\",\"depth\":2},{\"value\":\"Attesting multiple credentials\",\"depth\":2}],\"frontmatter\":{\"category\":\"guides\",\"index\":2}}},{\"node\":{\"fields\":{\"slug\":\"/gettingstarted\"},\"headings\":[{\"value\":\"Getting Started\",\"depth\":1},{\"value\":\"Requirements\",\"depth\":3},{\"value\":\"1. Get the uPort App\",\"depth\":2},{\"value\":\"2. Get an Application Identity\",\"depth\":2},{\"value\":\"3. Setup Dependencies\",\"depth\":2},{\"value\":\"4. Configure and Run Code\",\"depth\":2}],\"frontmatter\":{\"category\":\"guides\",\"index\":0}}},{\"node\":{\"fields\":{\"slug\":\"/readme\"},\"headings\":[{\"value\":\"uPort Specs\",\"depth\":1},{\"value\":\"Identities\",\"depth\":2},{\"value\":\"Identities created using the uPort Mobile App\",\"depth\":3},{\"value\":\"Request Flows\",\"depth\":2},{\"value\":\"More about request flows\",\"depth\":3},{\"value\":\"Request and Response Transports\",\"depth\":2},{\"value\":\"Request/Response Transports\",\"depth\":3},{\"value\":\"Off-chain Messages\",\"depth\":2},{\"value\":\"More about Off-chain Messages\",\"depth\":3},{\"value\":\"On-chain Transactions\",\"depth\":2},{\"value\":\"More about Signing Ethereum transactions\",\"depth\":3},{\"value\":\"uPort PKI\",\"depth\":2},{\"value\":\"More about the uPort PKI\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":0}}},{\"node\":{\"fields\":{\"slug\":\"/reactuporttruffle\"},\"headings\":[{\"value\":\"React-uport Truffle box\",\"depth\":1},{\"value\":\"Setup React Truffle Box\",\"depth\":2},{\"value\":\"Create the necessary uport-connect objects\",\"depth\":2},{\"value\":\"Request a user's information\",\"depth\":2},{\"value\":\"Create an Attestation\",\"depth\":2},{\"value\":\"Wrapping it up\",\"depth\":2}],\"frontmatter\":{\"category\":\"tutorials\",\"index\":0}}},{\"node\":{\"fields\":{\"slug\":\"/requestcredentials\"},\"headings\":[{\"value\":\"Requesting Credentials\",\"depth\":1},{\"value\":\"Desktop web\",\"depth\":3},{\"value\":\"Mobile web\",\"depth\":3},{\"value\":\"Calling the request method\",\"depth\":2},{\"value\":\"Requesting specific credentials\",\"depth\":2},{\"value\":\"Verifying credentials\",\"depth\":2},{\"value\":\"Enabling Push Notifications\",\"depth\":2}],\"frontmatter\":{\"category\":\"guides\",\"index\":1}}},{\"node\":{\"fields\":{\"slug\":\"/signtransactions\"},\"headings\":[{\"value\":\"Signing Transactions\",\"depth\":1},{\"value\":\"Supply the contract ABI\",\"depth\":2},{\"value\":\"Create the contract object\",\"depth\":2},{\"value\":\"Call a basic method on the contract\",\"depth\":2},{\"value\":\"Call a tx signing method on the contract\",\"depth\":2},{\"value\":\"Wait for mining to complete\",\"depth\":2}],\"frontmatter\":{\"category\":\"guides\",\"index\":3}}},{\"node\":{\"fields\":{\"slug\":\"/clients\"},\"headings\":[{\"value\":\"Clients (apps)\",\"depth\":1},{\"value\":\"uPort Mobile Wallet\",\"depth\":2},{\"value\":\"uPort App Manager\",\"depth\":2},{\"value\":\"uPort JS Client\",\"depth\":2}],\"frontmatter\":{\"category\":\"overview\",\"index\":3}}},{\"node\":{\"fields\":{\"slug\":\"/overview\"},\"headings\":[{\"value\":\"OVERVIEW\",\"depth\":1}],\"frontmatter\":{\"category\":\"overview\",\"index\":0}}},{\"node\":{\"fields\":{\"slug\":\"/platform\"},\"headings\":[{\"value\":\"PLATFORM\",\"depth\":1},{\"value\":\"Ethereum Identity Components\",\"depth\":2},{\"value\":\"Network Microservices\",\"depth\":2},{\"value\":\"Libraries\",\"depth\":2}],\"frontmatter\":{\"category\":\"overview\",\"index\":2}}},{\"node\":{\"fields\":{\"slug\":\"/protocol\"},\"headings\":[{\"value\":\"PROTOCOLS\",\"depth\":1},{\"value\":\"uPort Identity Protocol\",\"depth\":2},{\"value\":\"uPort Claims Protocol\",\"depth\":2}],\"frontmatter\":{\"category\":\"overview\",\"index\":3}}},{\"node\":{\"fields\":{\"slug\":\"/lambda-olorun/readme\"},\"headings\":[{\"value\":\"lambda-olorun\",\"depth\":1},{\"value\":\"Setting a new private chain\",\"depth\":2},{\"value\":\"Deploy uPort Identity Contracts\",\"depth\":3},{\"value\":\"Configure Olorun hosted service for a new private chain\",\"depth\":3},{\"value\":\"Run your own Olorun\",\"depth\":3},{\"value\":\"Contributing\",\"depth\":2}],\"frontmatter\":{\"category\":\"guides\",\"index\":5}}},{\"node\":{\"fields\":{\"slug\":\"/flows/index\"},\"headings\":[{\"value\":\"Uport Request Flows\",\"depth\":1},{\"value\":\"Unified Message Request Flow\",\"depth\":2},{\"value\":\"Specific Application flows\",\"depth\":2},{\"value\":\"Errors\",\"depth\":2}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/flows/privatechain\"},\"headings\":[{\"value\":\"Private Chain Provisioning Flow\",\"depth\":1},{\"value\":\"Requirements\",\"depth\":2},{\"value\":\"Provisioning Methodology\",\"depth\":2},{\"value\":\"Endpoint\",\"depth\":2},{\"value\":\"Client Callback\",\"depth\":2},{\"value\":\"Successful Response\",\"depth\":3},{\"value\":\"Errors\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/flows/selectivedisclosure\"},\"headings\":[{\"value\":\"Selective Disclosure Flow\",\"depth\":1},{\"value\":\"Endpoint\",\"depth\":2},{\"value\":\"Send Request\",\"depth\":2},{\"value\":\"Deprecated Flows\",\"depth\":3},{\"value\":\"Client Callback\",\"depth\":2},{\"value\":\"Successful Response\",\"depth\":3},{\"value\":\"Errors\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/flows/tx\"},\"headings\":[{\"value\":\"Ethereum Transaction Flow\",\"depth\":1},{\"value\":\"Endpoint\",\"depth\":2},{\"value\":\"Send Request\",\"depth\":2},{\"value\":\"Client Callback\",\"depth\":2},{\"value\":\"Successful Response\",\"depth\":3},{\"value\":\"Errors\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/flows/verification\"},\"headings\":[{\"value\":\"Send Verification Flow\",\"depth\":1},{\"value\":\"Endpoint\",\"depth\":2},{\"value\":\"Send Verifications\",\"depth\":2},{\"value\":\"Deprecated Flows\",\"depth\":3},{\"value\":\"Client Callback\",\"depth\":2},{\"value\":\"Successful Response\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/encryption\"},\"headings\":[{\"value\":\"Message Encryption\",\"depth\":1},{\"value\":\"Encryption Public Key resolution\",\"depth\":2},{\"value\":\"Request/Response resolution\",\"depth\":2},{\"value\":\"JOSE JWK Standards\",\"depth\":3},{\"value\":\"Encrypting the request\",\"depth\":2},{\"value\":\"Decrypting the request\",\"depth\":2},{\"value\":\"Padding\",\"depth\":2},{\"value\":\"Legacy Encryption of the request\",\"depth\":2},{\"value\":\"Encoding the encrypted data\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/index\"},\"headings\":[{\"value\":\"Off-chain Messages\",\"depth\":1},{\"value\":\"JSON Web Token\",\"depth\":2},{\"value\":\"Requirements\",\"depth\":3},{\"value\":\"JOSE Header\",\"depth\":4},{\"value\":\"Attributes\",\"depth\":4},{\"value\":\"Signature Verification\",\"depth\":3},{\"value\":\"Message Encryption\",\"depth\":3},{\"value\":\"Unsigned Requests (Deprecated)\",\"depth\":2},{\"value\":\"Standard Unsigned Parameters\",\"depth\":3},{\"value\":\"Message types\",\"depth\":2}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/privatechain\"},\"headings\":[{\"value\":\"Private Chain Provisioning Message\",\"depth\":1},{\"value\":\"Attributes\",\"depth\":2}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/sharereq\"},\"headings\":[{\"value\":\"Selective Disclosure Request\",\"depth\":1},{\"value\":\"Attributes\",\"depth\":4},{\"value\":\"Unsigned Requests (Deprecated)\",\"depth\":2}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/shareresp\"},\"headings\":[{\"value\":\"Selective Disclosure Response\",\"depth\":1},{\"value\":\"Attributes\",\"depth\":4}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/tx\"},\"headings\":[{\"value\":\"Ethereum Transaction Request\",\"depth\":1},{\"value\":\"Signed Transaction Request\",\"depth\":2},{\"value\":\"Attributes\",\"depth\":3},{\"value\":\"ERC 67 Unsigned Transaction Request\",\"depth\":2},{\"value\":\"Attributes\",\"depth\":3},{\"value\":\"Addresses and Network selection\",\"depth\":2},{\"value\":\"Transaction Request Validity\",\"depth\":2},{\"value\":\"ETH Value Transfer\",\"depth\":3},{\"value\":\"ETH Value Transfer\",\"depth\":3},{\"value\":\"Ethereum Smart Contract creation\",\"depth\":3},{\"value\":\"Client Callback\",\"depth\":2}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/verification\"},\"headings\":[{\"value\":\"Verification\",\"depth\":1},{\"value\":\"Attributes\",\"depth\":2},{\"value\":\"Claims Best Practices\",\"depth\":2},{\"value\":\"Use atomic claims\",\"depth\":3},{\"value\":\"Bundling multiple claims as one\",\"depth\":3},{\"value\":\"Claim Taxonomy\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/verificationreq\"},\"headings\":[{\"value\":\"Verified Claim Request\",\"depth\":1},{\"value\":\"Attributes\",\"depth\":4}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/pki/identitydocument\"},\"headings\":[{\"value\":\"Identity Document\",\"depth\":1},{\"value\":\"Contents\",\"depth\":2},{\"value\":\"Parameters\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/pki/index\"},\"headings\":[{\"value\":\"uPort PKI\",\"depth\":1},{\"value\":\"Purpose\",\"depth\":2},{\"value\":\"Creating and Verifying a JWT\",\"depth\":2},{\"value\":\"Identity Document\",\"depth\":2},{\"value\":\"Verifying a signature\",\"depth\":2},{\"value\":\"Resolving the Public Key for \",\"depth\":3},{\"value\":\"Resolving the Public Encryption Key for \",\"depth\":3},{\"value\":\"Registering an Identity Document\",\"depth\":2},{\"value\":\"External Accounts (Key Pairs)\",\"depth\":3},{\"value\":\"Smart Contract Accounts\",\"depth\":3},{\"value\":\"uPort Mobile App Created Identities\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/rest-apis/fuel-server\"},\"headings\":[{\"value\":\"Transaction Fueling Server\",\"depth\":1},{\"value\":\"API Description\",\"depth\":2},{\"value\":\"Fuel Token\",\"depth\":3},{\"value\":\"Fund address\",\"depth\":3},{\"value\":\"Endpoint\",\"depth\":4},{\"value\":\"Header\",\"depth\":4},{\"value\":\"Body\",\"depth\":4},{\"value\":\"Response\",\"depth\":4},{\"value\":\"Response data\",\"depth\":4}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/rest-apis/relay-server\"},\"headings\":[{\"value\":\"Meta Transaction Relaying Server\",\"depth\":1},{\"value\":\"API Description\",\"depth\":2},{\"value\":\"Fuel Token\",\"depth\":3},{\"value\":\"MetaSignedTx\",\"depth\":3},{\"value\":\"Endpoint\",\"depth\":4},{\"value\":\"Header\",\"depth\":4},{\"value\":\"Body\",\"depth\":4},{\"value\":\"Response\",\"depth\":4},{\"value\":\"Response data\",\"depth\":4}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/transports/index\"},\"headings\":[{\"value\":\"Request/Response Transports\",\"depth\":1},{\"value\":\"Requests\",\"depth\":2},{\"value\":\"Open URL\",\"depth\":3},{\"value\":\"QR Code\",\"depth\":3},{\"value\":\"Push Notifications\",\"depth\":3},{\"value\":\"Responses\",\"depth\":2},{\"value\":\"Redirect callback type\",\"depth\":3},{\"value\":\"HTTP post callback type\",\"depth\":3},{\"value\":\"Messaging Server\",\"depth\":2},{\"value\":\"Preparing callback URL\",\"depth\":3},{\"value\":\"Listening for Response\",\"depth\":3},{\"value\":\"Endpoint\",\"depth\":4},{\"value\":\"Response\",\"depth\":4},{\"value\":\"Response data\",\"depth\":4},{\"value\":\"Cleanup\",\"depth\":3},{\"value\":\"Endpoint\",\"depth\":4},{\"value\":\"Response\",\"depth\":4},{\"value\":\"Examples\",\"depth\":2},{\"value\":\"Mobile Browser Transport\",\"depth\":3},{\"value\":\"Desktop Browser Serverless Transport\",\"depth\":3},{\"value\":\"Desktop Browser Server Backed Transport\",\"depth\":3},{\"value\":\"Push Notification Transport\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/transports/push\"},\"headings\":[{\"value\":\"Push Notification Transport\",\"depth\":1},{\"value\":\"Proper encoding of the request\",\"depth\":3},{\"value\":\"Sending the request\",\"depth\":2},{\"value\":\"Push notification server\",\"depth\":3},{\"value\":\"Endpoint\",\"depth\":4},{\"value\":\"Headers\",\"depth\":4},{\"value\":\"Body\",\"depth\":4},{\"value\":\"Response\",\"depth\":4},{\"value\":\"Response data\",\"depth\":4}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/did-jwt/guides/index\"},\"headings\":[{\"value\":\"Working with did-JWT's\",\"depth\":1},{\"value\":\"Creating a JWT\",\"depth\":2},{\"value\":\"Parameters\",\"depth\":4},{\"value\":\"Promise Return Value\",\"depth\":4},{\"value\":\"Verifying a JWT\",\"depth\":2},{\"value\":\"Parameters\",\"depth\":4},{\"value\":\"Promise Return Value\",\"depth\":4},{\"value\":\"Signer Functions\",\"depth\":2},{\"value\":\"SimpleSigner\",\"depth\":3},{\"value\":\"Parameters\",\"depth\":4},{\"value\":\"Creating Custom Signers for integrating with HSM\",\"depth\":3},{\"value\":\"Parameters\",\"depth\":4},{\"value\":\"Promise Return Value\",\"depth\":4}],\"frontmatter\":{\"category\":\"guides\",\"index\":4}}},{\"node\":{\"fields\":{\"slug\":\"/did-jwt/reference/index\"},\"headings\":[{\"value\":\"Algorithms supported\",\"depth\":2},{\"value\":\"DID PublicKey Types\",\"depth\":2},{\"value\":\"Claims\",\"depth\":2},{\"value\":\"Modules\",\"depth\":2},{\"value\":\"Functions\",\"depth\":2},{\"value\":\"did-jwt/JWT\",\"depth\":2},{\"value\":\"did-jwt/JWT.decodeJWT(jwt) ⇒ \",\"depth\":3},{\"value\":\"did-jwt/JWT.createJWT(payload, \",\"depth\":3},{\"value\":\"did-jwt/JWT.verifyJWT(jwt, \",\"depth\":3},{\"value\":\"did-jwt/JWT.resolveAuthenticator(alg, did, auth) ⇒ \",\"depth\":3},{\"value\":\"SimpleSigner(hexPrivateKey) ⇒ \",\"depth\":2}],\"frontmatter\":{\"category\":\"reference\",\"index\":3}}},{\"node\":{\"fields\":{\"slug\":\"/uport-connect/guides/tutorial\"},\"headings\":[{\"value\":\"How to integrate uPort into your dapp\",\"depth\":1},{\"value\":\"Introduction\",\"depth\":2},{\"value\":\"Getting started\",\"depth\":2}],\"frontmatter\":{\"category\":\"tutorials\",\"index\":0}}},{\"node\":{\"fields\":{\"slug\":\"/muport-core-js/guides/simple-id\"},\"headings\":[{\"value\":\"Simple ID (muPort)\",\"depth\":1},{\"value\":\"Onboarding/Signup\",\"depth\":2},{\"value\":\"Interacting with a service\",\"depth\":2},{\"value\":\"Setting up recovery network\",\"depth\":2},{\"value\":\"Using the recovery network\",\"depth\":2},{\"value\":\"Updating the encrypted recovery shards\",\"depth\":2}],\"frontmatter\":{\"category\":\"guides\",\"index\":6}}},{\"node\":{\"fields\":{\"slug\":\"/uport-connect/guides/usage\"},\"headings\":[{\"value\":\"Communication and Transactions how-to\",\"depth\":1},{\"value\":\"Communication\",\"depth\":1},{\"value\":\"Default QR flow\",\"depth\":2},{\"value\":\"Default Mobile Requests\",\"depth\":2},{\"value\":\"Push Notifications\",\"depth\":2},{\"value\":\"Ethereum Interactions and Transactions\",\"depth\":1},{\"value\":\"Using with web3\",\"depth\":2},{\"value\":\"Using a provider\",\"depth\":2},{\"value\":\"Using without web3\",\"depth\":2}],\"frontmatter\":{\"category\":\"tutorials\",\"index\":2}}},{\"node\":{\"fields\":{\"slug\":\"/uport-connect/reference/index\"},\"headings\":[{\"value\":\"Modules\",\"depth\":2},{\"value\":\"Classes\",\"depth\":2},{\"value\":\"uport-connect/topicFactory\",\"depth\":2},{\"value\":\"uport-connect/topicFactory~TopicFactory(isOnMobile, pollingInterval, chasquiUrl) ⇒ \",\"depth\":3},{\"value\":\"TopicFactory~waitForHashChange(topicName, cb)\",\"depth\":4},{\"value\":\"TopicFactory~pollForResult(topicName, url, cb, cancelled)\",\"depth\":4},{\"value\":\"TopicFactory~clearTopic(url)\",\"depth\":4},{\"value\":\"TopicFactory~newTopic(topicName) ⇒ \",\"depth\":4},{\"value\":\"Connect ⇐ \",\"depth\":2},{\"value\":\"new Connect(appName, \",\"depth\":3},{\"value\":\"connect.getWeb3() ⇒ \",\"depth\":3},{\"value\":\"connect.getProvider() ⇒ \",\"depth\":3},{\"value\":\"connect.requestCredentials(\",\"depth\":3},{\"value\":\"connect.requestAddress(\",\"depth\":3},{\"value\":\"connect.attestCredentials(credential, \",\"depth\":3},{\"value\":\"connect.request(request) ⇒ \",\"depth\":3},{\"value\":\"connect.contract(abi) ⇒ \",\"depth\":3},{\"value\":\"connect.sendTransaction(txobj) ⇒ \",\"depth\":3},{\"value\":\"ConnectCore\",\"depth\":2},{\"value\":\"new ConnectCore(appName, \",\"depth\":3},{\"value\":\"connectCore.getProvider() ⇒ \",\"depth\":3},{\"value\":\"connectCore.requestCredentials(\",\"depth\":3},{\"value\":\"connectCore.requestAddress(\",\"depth\":3},{\"value\":\"connectCore.attestCredentials(credential, \",\"depth\":3},{\"value\":\"connectCore.request(request) ⇒ \",\"depth\":3},{\"value\":\"connectCore.contract(abi) ⇒ \",\"depth\":3},{\"value\":\"connectCore.sendTransaction(txobj) ⇒ \",\"depth\":3},{\"value\":\"UportSubprovider\",\"depth\":2},{\"value\":\"new UportSubprovider(args)\",\"depth\":3},{\"value\":\"uportSubprovider.send()\",\"depth\":3},{\"value\":\"uportSubprovider.sendAsync(payload, callback)\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":4}}},{\"node\":{\"fields\":{\"slug\":\"/uport-js/guides/server-side-credentials-example\"},\"headings\":[{\"value\":\"Server-side Credentials\",\"depth\":1},{\"value\":\"Prerequisites:\",\"depth\":3},{\"value\":\"Register an App\",\"depth\":2},{\"value\":\"Setup a Requestor Service\",\"depth\":2},{\"value\":\"Setup a Creator Service\",\"depth\":2},{\"value\":\"For the fields of the credential:\",\"depth\":3},{\"value\":\"Setup a Verification service\",\"depth\":2}],\"frontmatter\":{\"category\":\"tutorials\",\"index\":1}}},{\"node\":{\"fields\":{\"slug\":\"/uport-js/reference/index\"},\"headings\":[{\"value\":\"Modules\",\"depth\":2},{\"value\":\"Classes\",\"depth\":2},{\"value\":\"uport-js/JWT\",\"depth\":2},{\"value\":\"uport-js/JWT.createJWT(\",\"depth\":3},{\"value\":\"uport-js/JWT.verifyJWT(\",\"depth\":3},{\"value\":\"Credentials\",\"depth\":2},{\"value\":\"new Credentials(\",\"depth\":3},{\"value\":\"credentials.createRequest(\",\"depth\":3},{\"value\":\"credentials.createVerificationRequest(unsignedClaim, sub) ⇒ \",\"depth\":3},{\"value\":\"credentials.receive(token, \",\"depth\":3},{\"value\":\"credentials.push(token, payload, pubEncKey) ⇒ \",\"depth\":3},{\"value\":\"credentials.attest(\",\"depth\":3},{\"value\":\"credentials.lookup(address) ⇒ \",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":4}}}]},\"postBySlug\":{\"htmlAst\":{\"type\":\"root\",\"children\":[{\"type\":\"element\",\"tagName\":\"h1\",\"properties\":{\"id\":\"simple-id-muport\"},\"children\":[{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"#simple-id-muport\",\"ariaHidden\":true,\"className\":[\"anchor\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"svg\",\"properties\":{\"ariaHidden\":\"true\",\"height\":16,\"version\":\"1.1\",\"viewBox\":\"0 0 16 16\",\"width\":16},\"children\":[{\"type\":\"element\",\"tagName\":\"path\",\"properties\":{\"fillRule\":\"evenodd\",\"d\":\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"},\"children\":[]}]}]},{\"type\":\"text\",\"value\":\"Simple ID (muPort)\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"In this document we outline a description of key management for an identity using an abstract \"},{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"https://w3c-ccg.github.io/did-spec/\"},\"children\":[{\"type\":\"text\",\"value\":\"DID\"}]},{\"type\":\"text\",\"value\":\" (Decentralized IDentifier) method, as well as a number of Ethereum accounts. Thus, we assume the existence of a DID method specification for registering, updating and resolving a DID to a DDO (DID descriptor object). We will describe a suggested outline of key management for such an identity.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"In this document, lower case indicates a \"},{\"type\":\"element\",\"tagName\":\"strong\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"private key\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(k0)\"}]},{\"type\":\"text\",\"value\":\" and upper case indicates a \"},{\"type\":\"element\",\"tagName\":\"strong\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"public key\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(K0)\"}]},{\"type\":\"text\",\"value\":\", and a \"},{\"type\":\"element\",\"tagName\":\"strong\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"key pair\"}]},{\"type\":\"text\",\"value\":\" is indicated as a pair \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(k0, K0)\"}]},{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{\"id\":\"onboardingsignup\"},\"children\":[{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"#onboardingsignup\",\"ariaHidden\":true,\"className\":[\"anchor\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"svg\",\"properties\":{\"ariaHidden\":\"true\",\"height\":16,\"version\":\"1.1\",\"viewBox\":\"0 0 16 16\",\"width\":16},\"children\":[{\"type\":\"element\",\"tagName\":\"path\",\"properties\":{\"fillRule\":\"evenodd\",\"d\":\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"},\"children\":[]}]}]},{\"type\":\"text\",\"value\":\"Onboarding/Signup\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Right now the primary device a user interacts with will most likely be a smartphone but could be another \\\"device\\\" as well.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"The user's device generates a master seed/keypair \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(m, M)\"}]},{\"type\":\"text\",\"value\":\" from which we derive (using BIP39) a signing keypair \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(k0, K0)\"}]},{\"type\":\"text\",\"value\":\", a recovery keypair \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(r, R)\"}]},{\"type\":\"text\",\"value\":\" and an encryption keypair \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(e0, E0)\"}]},{\"type\":\"text\",\"value\":\". We also derive one or more ethereum account keys \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(a0, A0)\"}]},{\"type\":\"text\",\"value\":\", \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(a1, A1)\"}]},{\"type\":\"text\",\"value\":\", \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(a2, A2)\"}]},{\"type\":\"text\",\"value\":\". For simplicity to begin with we can use the keys \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(ai, Ai)\"}]},{\"type\":\"text\",\"value\":\" both as a signing key and a recovery key.  The account keys are set up to control associated Proxy contracts using the \"},{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"https://github.com/uport-project/uport-identity\"},\"children\":[{\"type\":\"text\",\"value\":\"IdentityManager\"}]},{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ul\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"A DID is registered for the user mapping to a DDO that contains the public keys \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"R\"}]},{\"type\":\"text\",\"value\":\", \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"K0\"}]},{\"type\":\"text\",\"value\":\" and \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"E0\"}]},{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"The recovery keypair \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(r, R)\"}]},{\"type\":\"text\",\"value\":\" is for updating the DDO, i.e. or updating/rotating the signing key, encryption key or the recovery key itself.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"The signing keypair \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(k0, K0)\"}]},{\"type\":\"text\",\"value\":\" is for signing messages (mainly in the form of JWTs) and authenticating.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"The encryption keypair \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(e0, E0)\"}]},{\"type\":\"text\",\"value\":\" is used to encrypt the shards of the master key in a recovery situation.\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"We use the EthPublish (\"},{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"https://github.com/uport-project/eth-publish\"},\"children\":[{\"type\":\"text\",\"value\":\"https://github.com/uport-project/eth-publish\"}]},{\"type\":\"text\",\"value\":\") contract to publish the users DID using the recovery key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"R\"}]},{\"type\":\"text\",\"value\":\", as well as publish the Proxy contract addresses associated with the Ethereum account keys A0, A1 etc. This way we can easily recover the necessary data in the event of a recovery.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{\"id\":\"interacting-with-a-service\"},\"children\":[{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"#interacting-with-a-service\",\"ariaHidden\":true,\"className\":[\"anchor\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"svg\",\"properties\":{\"ariaHidden\":\"true\",\"height\":16,\"version\":\"1.1\",\"viewBox\":\"0 0 16 16\",\"width\":16},\"children\":[{\"type\":\"element\",\"tagName\":\"path\",\"properties\":{\"fillRule\":\"evenodd\",\"d\":\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"},\"children\":[]}]}]},{\"type\":\"text\",\"value\":\"Interacting with a service\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"When interacting with a service, the service sends a request (in uPort this would be a JSON Web Token of type \"},{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"https://developer.uport.me/messages/sharereq\"},\"children\":[{\"type\":\"text\",\"value\":\"shareReq\"}]},{\"type\":\"text\",\"value\":\" - see all \"},{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"https://developer.uport.me/readme#request-flows\"},\"children\":[{\"type\":\"text\",\"value\":\"request flows\"}]},{\"type\":\"text\",\"value\":\" . The user's device would sign a response using the signing key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"k0\"}]},{\"type\":\"text\",\"value\":\" and with the issuer \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(iss)\"}]},{\"type\":\"text\",\"value\":\" field being set to the DID.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"The service uses the universal resolver to resolve the DID to the DDO, checks the signing public key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"K0\"}]},{\"type\":\"text\",\"value\":\" in the DDO and verifies that it's the same key that signed the response. It verifies the signature of the JWT using \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"K0\"}]},{\"type\":\"text\",\"value\":\", thus proving that the entity which created the JWT possesses \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"k0\"}]},{\"type\":\"text\",\"value\":\". In this way, the device authenticates to the service, proving that it possesses \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"k0\"}]},{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Using seed words to recover the master key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"m\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"This setting is for advanced users that are comfortable managing their own keys. The master key would be encoded as 12 or 24 words, following the BIP39 specification. The user can then store this either printed out or in a password manager or similar, and recover access to a new device by entering in the words.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{\"id\":\"setting-up-recovery-network\"},\"children\":[{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"#setting-up-recovery-network\",\"ariaHidden\":true,\"className\":[\"anchor\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"svg\",\"properties\":{\"ariaHidden\":\"true\",\"height\":16,\"version\":\"1.1\",\"viewBox\":\"0 0 16 16\",\"width\":16},\"children\":[{\"type\":\"element\",\"tagName\":\"path\",\"properties\":{\"fillRule\":\"evenodd\",\"d\":\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"},\"children\":[]}]}]},{\"type\":\"text\",\"value\":\"Setting up recovery network\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"If we are to lose the master private key m at some point we want a way to recover access to it. One way of doing this is to use a Shamir Threshold scheme / Shamir Secret Sharing (SSS) scheme (\"},{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"http://dl.acm.org/citation.cfm?doid=359168.359176\"},\"children\":[{\"type\":\"text\",\"value\":\"http://dl.acm.org/citation.cfm?doid=359168.359176\"}]},{\"type\":\"text\",\"value\":\").\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Suppose we designate three recovery delegates with DIDs D1, D2, D3 and corresponding asymmetric encryption key pairs \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(e1, E1)\"}]},{\"type\":\"text\",\"value\":\", \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(e2, E2)\"}]},{\"type\":\"text\",\"value\":\", \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(e3, E3)\"}]},{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"We split the master private key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"m\"}]},{\"type\":\"text\",\"value\":\" into shares \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"S1\"}]},{\"type\":\"text\",\"value\":\", \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"S2\"}]},{\"type\":\"text\",\"value\":\", \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"S3\"}]},{\"type\":\"text\",\"value\":\" in a 2-of-3 SSS scheme and encrypt them to the respective recipient:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(enc(E1, S1), enc(E2, S2), enc(E3, S3))\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"The above package is added to the DID Document. Similarly we can choose n contacts and set up a general m-of-n scheme.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Note: for this scheme to work the master key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"m\"}]},{\"type\":\"text\",\"value\":\" cannot be stored on a smart card or similar device that prevents extraction of the key.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Note: Assuming \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"m\"}]},{\"type\":\"text\",\"value\":\" is an ECC 256 bit private key, the prime modulus for SSS must be larger than 256 bits. A known good prime such as\\n\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bd\"}]},{\"type\":\"text\",\"value\":\", which is the NIST P384 curve prime should be used.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{\"id\":\"using-the-recovery-network\"},\"children\":[{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"#using-the-recovery-network\",\"ariaHidden\":true,\"className\":[\"anchor\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"svg\",\"properties\":{\"ariaHidden\":\"true\",\"height\":16,\"version\":\"1.1\",\"viewBox\":\"0 0 16 16\",\"width\":16},\"children\":[{\"type\":\"element\",\"tagName\":\"path\",\"properties\":{\"fillRule\":\"evenodd\",\"d\":\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"},\"children\":[]}]}]},{\"type\":\"text\",\"value\":\"Using the recovery network\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Suppose the user loses their master key. We can recover using the following steps:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ol\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"On their new main device, user generates a temporary encryption key pair \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(eT, ET)\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"The recovering user contacts recovery delegate D1 and presents them the encryption public key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ET\"}]},{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"D1\"}]},{\"type\":\"text\",\"value\":\" retrieves the DID document of the user and decrypts \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"enc(E1, S1)\"}]},{\"type\":\"text\",\"value\":\" using \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"e1\"}]},{\"type\":\"text\",\"value\":\" to get \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"S1\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"D1\"}]},{\"type\":\"text\",\"value\":\" encrypts \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"S1\"}]},{\"type\":\"text\",\"value\":\" to get \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"enc(ET, S1)\"}]},{\"type\":\"text\",\"value\":\" and provides this to the user through some channel. \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"D1\"}]},{\"type\":\"text\",\"value\":\" may also present the recovering user with their original DID (\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"D0\"}]},{\"type\":\"text\",\"value\":\" say) through this channel.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"User decrypts \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"enc(ET, S1)\"}]},{\"type\":\"text\",\"value\":\" with \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"eT\"}]},{\"type\":\"text\",\"value\":\" to obtain \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"S1\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"User repeats steps 2-5 until enough shares have been obtained to reconstruct \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"m\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"m\"}]},{\"type\":\"text\",\"value\":\" is used to derive the recovery key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"R\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"User retrieves the DID document (if they have their own DID) and extracts \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"R\"}]},{\"type\":\"text\",\"value\":\", and makes sure it matches the derived key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"R\"}]},{\"type\":\"text\",\"value\":\". Alternatively the key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"R\"}]},{\"type\":\"text\",\"value\":\" is used to look up the current DID & DID Document through a registry entry.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"User derives the Account keys \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(a1, A1)\"}]},{\"type\":\"text\",\"value\":\", \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(a2, A2)\"}]},{\"type\":\"text\",\"value\":\" etc. At first we can use the same key for signing and recovery, and since we are recovering the signing keys themselves no transactions are necessary during recovery.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"(\"},{\"type\":\"element\",\"tagName\":\"em\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"We may opt to skip this part for simplicity in the first iteration\"}]},{\"type\":\"text\",\"value\":\") User generates a new master keypair \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(m', M')\"}]},{\"type\":\"text\",\"value\":\", derives new keys \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(r’, R’)\"}]},{\"type\":\"text\",\"value\":\", \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(k0’, K0’)\"}]},{\"type\":\"text\",\"value\":\", \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"(e0’, E0’)\"}]},{\"type\":\"text\",\"value\":\" and uses the old recovery key r to update the DID document with the new keys \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"R’\"}]},{\"type\":\"text\",\"value\":\", \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"K0’\"}]},{\"type\":\"text\",\"value\":\", \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"E0’\"}]},{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{\"id\":\"updating-the-encrypted-recovery-shards\"},\"children\":[{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"#updating-the-encrypted-recovery-shards\",\"ariaHidden\":true,\"className\":[\"anchor\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"svg\",\"properties\":{\"ariaHidden\":\"true\",\"height\":16,\"version\":\"1.1\",\"viewBox\":\"0 0 16 16\",\"width\":16},\"children\":[{\"type\":\"element\",\"tagName\":\"path\",\"properties\":{\"fillRule\":\"evenodd\",\"d\":\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"},\"children\":[]}]}]},{\"type\":\"text\",\"value\":\"Updating the encrypted recovery shards\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Suppose the user updates the recovery network. The master key should now be rotated because if we no longer trust some of the recovery delegates they should not be able to recover a useful master key.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ol\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"User selects new set of recovery delegates\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"User generates new master key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"M'\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"User sets up recovery network as in section “setting up recovery network”\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"User uses old master key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"M\"}]},{\"type\":\"text\",\"value\":\" to update DDO with new master key \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"M'\"}]},{\"type\":\"text\",\"value\":\" and new recovery network\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]}],\"data\":{\"quirksMode\":false}},\"timeToRead\":6,\"excerpt\":\"Simple ID (muPort) In this document we outline a description of key management for an identity using an abstract  DID  (Decentralized…\",\"headings\":[{\"value\":\"Simple ID (muPort)\",\"depth\":1},{\"value\":\"Onboarding/Signup\",\"depth\":2},{\"value\":\"Interacting with a service\",\"depth\":2},{\"value\":\"Setting up recovery network\",\"depth\":2},{\"value\":\"Using the recovery network\",\"depth\":2},{\"value\":\"Updating the encrypted recovery shards\",\"depth\":2}],\"frontmatter\":{\"title\":\"Simple ID (muPort)\",\"category\":\"guides\",\"type\":\"content\"},\"fields\":{\"slug\":\"/muport-core-js/guides/simple-id\"}},\"postByCategory\":{\"totalCount\":19,\"edges\":[{\"node\":{\"fields\":{\"slug\":\"/attestcredentials\"},\"headings\":[{\"value\":\"Attesting Credentials\",\"depth\":1},{\"value\":\"If push is enabled\",\"depth\":6},{\"value\":\"If push is not enabled\",\"depth\":6},{\"value\":\"Calling the attest method\",\"depth\":2},{\"value\":\"Setting an expiration date\",\"depth\":2},{\"value\":\"Attesting multiple credentials\",\"depth\":2}],\"excerpt\":\"Attesting Credentials * If the user consents, the uPort app saves the attestation token to their device. Browser displays a QR code (if…\",\"timeToRead\":2,\"frontmatter\":{\"title\":\"Attesting Credentials\",\"category\":\"guides\",\"index\":2,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/gettingstarted\"},\"headings\":[{\"value\":\"Getting Started\",\"depth\":1},{\"value\":\"Requirements\",\"depth\":3},{\"value\":\"1. Get the uPort App\",\"depth\":2},{\"value\":\"2. Get an Application Identity\",\"depth\":2},{\"value\":\"3. Setup Dependencies\",\"depth\":2},{\"value\":\"4. Configure and Run Code\",\"depth\":2}],\"excerpt\":\"Getting Started Welcome! The goal of this guide is to get you set up quickly with a skeleton project and to familiarize you with a few basic…\",\"timeToRead\":4,\"frontmatter\":{\"title\":\"Getting Started\",\"category\":\"guides\",\"index\":0,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/readme\"},\"headings\":[{\"value\":\"uPort Specs\",\"depth\":1},{\"value\":\"Identities\",\"depth\":2},{\"value\":\"Identities created using the uPort Mobile App\",\"depth\":3},{\"value\":\"Request Flows\",\"depth\":2},{\"value\":\"More about request flows\",\"depth\":3},{\"value\":\"Request and Response Transports\",\"depth\":2},{\"value\":\"Request/Response Transports\",\"depth\":3},{\"value\":\"Off-chain Messages\",\"depth\":2},{\"value\":\"More about Off-chain Messages\",\"depth\":3},{\"value\":\"On-chain Transactions\",\"depth\":2},{\"value\":\"More about Signing Ethereum transactions\",\"depth\":3},{\"value\":\"uPort PKI\",\"depth\":2},{\"value\":\"More about the uPort PKI\",\"depth\":3}],\"excerpt\":\"uPort Specs uPort is a platform for user centric identity and communication. The platform currently consists of our mobile app, Ethereum…\",\"timeToRead\":2,\"frontmatter\":{\"title\":\"Uport Specs\",\"category\":\"reference\",\"index\":0,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/reactuporttruffle\"},\"headings\":[{\"value\":\"React-uport Truffle box\",\"depth\":1},{\"value\":\"Setup React Truffle Box\",\"depth\":2},{\"value\":\"Create the necessary uport-connect objects\",\"depth\":2},{\"value\":\"Request a user's information\",\"depth\":2},{\"value\":\"Create an Attestation\",\"depth\":2},{\"value\":\"Wrapping it up\",\"depth\":2}],\"excerpt\":\"React-uport Truffle box This a short tutorial to requesting credentials and signing attestations with uPort.  We will be leveraging the…\",\"timeToRead\":4,\"frontmatter\":{\"title\":\"React-Uport Truffle Box\",\"category\":\"tutorials\",\"index\":0,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/requestcredentials\"},\"headings\":[{\"value\":\"Requesting Credentials\",\"depth\":1},{\"value\":\"Desktop web\",\"depth\":3},{\"value\":\"Mobile web\",\"depth\":3},{\"value\":\"Calling the request method\",\"depth\":2},{\"value\":\"Requesting specific credentials\",\"depth\":2},{\"value\":\"Verifying credentials\",\"depth\":2},{\"value\":\"Enabling Push Notifications\",\"depth\":2}],\"excerpt\":\"Requesting Credentials The first and most basic step you should take is to allow your user to connect their uPort to your app. Uport-connect…\",\"timeToRead\":4,\"frontmatter\":{\"title\":\"Requesting Credentials\",\"category\":\"guides\",\"index\":1,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/signtransactions\"},\"headings\":[{\"value\":\"Signing Transactions\",\"depth\":1},{\"value\":\"Supply the contract ABI\",\"depth\":2},{\"value\":\"Create the contract object\",\"depth\":2},{\"value\":\"Call a basic method on the contract\",\"depth\":2},{\"value\":\"Call a tx signing method on the contract\",\"depth\":2},{\"value\":\"Wait for mining to complete\",\"depth\":2}],\"excerpt\":\"Signing Transactions Browser displays QR code with randomly generated sessionID in a URI Browser starts polling chasqui using the sessionId…\",\"timeToRead\":4,\"frontmatter\":{\"title\":\"Signing Transactions\",\"category\":\"guides\",\"index\":3,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/clients\"},\"headings\":[{\"value\":\"Clients (apps)\",\"depth\":1},{\"value\":\"uPort Mobile Wallet\",\"depth\":2},{\"value\":\"uPort App Manager\",\"depth\":2},{\"value\":\"uPort JS Client\",\"depth\":2}],\"excerpt\":\"Clients (apps) Allow users, developers, and applications to interact with the uPort platform. uPort Mobile Wallet : Secure mobile self…\",\"timeToRead\":1,\"frontmatter\":{\"title\":\"Clients (apps)\",\"category\":\"overview\",\"index\":3,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/overview\"},\"headings\":[{\"value\":\"OVERVIEW\",\"depth\":1}],\"excerpt\":\"OVERVIEW uPort is an interoperable identity network for a secure, private, decentralized web. uPort provides open protocols for…\",\"timeToRead\":1,\"frontmatter\":{\"title\":\"Overview\",\"category\":\"overview\",\"index\":0,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/platform\"},\"headings\":[{\"value\":\"PLATFORM\",\"depth\":1},{\"value\":\"Ethereum Identity Components\",\"depth\":2},{\"value\":\"Network Microservices\",\"depth\":2},{\"value\":\"Libraries\",\"depth\":2}],\"excerpt\":\"PLATFORM The uPort Platform is our implementation of the uPort Protocol designed to make decentralized identities on Ethereum easy to create…\",\"timeToRead\":3,\"frontmatter\":{\"title\":\"Platform\",\"category\":\"overview\",\"index\":2,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/protocol\"},\"headings\":[{\"value\":\"PROTOCOLS\",\"depth\":1},{\"value\":\"uPort Identity Protocol\",\"depth\":2},{\"value\":\"uPort Claims Protocol\",\"depth\":2}],\"excerpt\":\"PROTOCOLS uPort consists of identity and messaging protocols that together form an interoperable identity layer for the decentralized web…\",\"timeToRead\":1,\"frontmatter\":{\"title\":\"Protocols\",\"category\":\"overview\",\"index\":3,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/lambda-olorun/readme\"},\"headings\":[{\"value\":\"lambda-olorun\",\"depth\":1},{\"value\":\"Setting a new private chain\",\"depth\":2},{\"value\":\"Deploy uPort Identity Contracts\",\"depth\":3},{\"value\":\"Configure Olorun hosted service for a new private chain\",\"depth\":3},{\"value\":\"Run your own Olorun\",\"depth\":3},{\"value\":\"Contributing\",\"depth\":2}],\"excerpt\":\"lambda-olorun Olorun  (Yoruba: Ọlọrun or Ọlọhun), literally the ruler of (or in) the Heavens, is the name given to one of the three…\",\"timeToRead\":3,\"frontmatter\":{\"title\":\"Private Chain Support\",\"category\":\"guides\",\"index\":5,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/did-jwt/guides/index\"},\"headings\":[{\"value\":\"Working with did-JWT's\",\"depth\":1},{\"value\":\"Creating a JWT\",\"depth\":2},{\"value\":\"Parameters\",\"depth\":4},{\"value\":\"Promise Return Value\",\"depth\":4},{\"value\":\"Verifying a JWT\",\"depth\":2},{\"value\":\"Parameters\",\"depth\":4},{\"value\":\"Promise Return Value\",\"depth\":4},{\"value\":\"Signer Functions\",\"depth\":2},{\"value\":\"SimpleSigner\",\"depth\":3},{\"value\":\"Parameters\",\"depth\":4},{\"value\":\"Creating Custom Signers for integrating with HSM\",\"depth\":3},{\"value\":\"Parameters\",\"depth\":4},{\"value\":\"Promise Return Value\",\"depth\":4}],\"excerpt\":\"Working with did-JWT's Creating a JWT Use the   function Parameters Name Description Required an object containing any claims you want to…\",\"timeToRead\":5,\"frontmatter\":{\"title\":\"Working with did-JWT's\",\"category\":\"guides\",\"index\":4,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/did-jwt/reference/index\"},\"headings\":[{\"value\":\"Algorithms supported\",\"depth\":2},{\"value\":\"DID PublicKey Types\",\"depth\":2},{\"value\":\"Claims\",\"depth\":2},{\"value\":\"Modules\",\"depth\":2},{\"value\":\"Functions\",\"depth\":2},{\"value\":\"did-jwt/JWT\",\"depth\":2},{\"value\":\"did-jwt/JWT.decodeJWT(jwt) ⇒ \",\"depth\":3},{\"value\":\"did-jwt/JWT.createJWT(payload, \",\"depth\":3},{\"value\":\"did-jwt/JWT.verifyJWT(jwt, \",\"depth\":3},{\"value\":\"did-jwt/JWT.resolveAuthenticator(alg, did, auth) ⇒ \",\"depth\":3},{\"value\":\"SimpleSigner(hexPrivateKey) ⇒ \",\"depth\":2}],\"excerpt\":\"Algorithms supported  the  secp256k1 ECDSA curve  the  secp256k1 ECDSA curve  with recovery parameter DID PublicKey Types The   section of a…\",\"timeToRead\":7,\"frontmatter\":{\"title\":\"did-jwt\",\"category\":\"reference\",\"index\":3,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/uport-connect/guides/tutorial\"},\"headings\":[{\"value\":\"How to integrate uPort into your dapp\",\"depth\":1},{\"value\":\"Introduction\",\"depth\":2},{\"value\":\"Getting started\",\"depth\":2}],\"excerpt\":\"How to integrate uPort into your dapp Introduction This tutorial will show you how to add support for uPort in your decentralized Ethereum…\",\"timeToRead\":3,\"frontmatter\":{\"title\":\"How to integrate Uport-Connect\",\"category\":\"tutorials\",\"index\":0,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/muport-core-js/guides/simple-id\"},\"headings\":[{\"value\":\"Simple ID (muPort)\",\"depth\":1},{\"value\":\"Onboarding/Signup\",\"depth\":2},{\"value\":\"Interacting with a service\",\"depth\":2},{\"value\":\"Setting up recovery network\",\"depth\":2},{\"value\":\"Using the recovery network\",\"depth\":2},{\"value\":\"Updating the encrypted recovery shards\",\"depth\":2}],\"excerpt\":\"Simple ID (muPort) In this document we outline a description of key management for an identity using an abstract  DID  (Decentralized…\",\"timeToRead\":6,\"frontmatter\":{\"title\":\"Simple ID (muPort)\",\"category\":\"guides\",\"index\":6,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/uport-connect/guides/usage\"},\"headings\":[{\"value\":\"Communication and Transactions how-to\",\"depth\":1},{\"value\":\"Communication\",\"depth\":1},{\"value\":\"Default QR flow\",\"depth\":2},{\"value\":\"Default Mobile Requests\",\"depth\":2},{\"value\":\"Push Notifications\",\"depth\":2},{\"value\":\"Ethereum Interactions and Transactions\",\"depth\":1},{\"value\":\"Using with web3\",\"depth\":2},{\"value\":\"Using a provider\",\"depth\":2},{\"value\":\"Using without web3\",\"depth\":2}],\"excerpt\":\"Communication and Transactions how-to The following Connect object is the primary interface you will use. All details and additional…\",\"timeToRead\":7,\"frontmatter\":{\"title\":\"Communication and Transactions\",\"category\":\"tutorials\",\"index\":2,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/uport-connect/reference/index\"},\"headings\":[{\"value\":\"Modules\",\"depth\":2},{\"value\":\"Classes\",\"depth\":2},{\"value\":\"uport-connect/topicFactory\",\"depth\":2},{\"value\":\"uport-connect/topicFactory~TopicFactory(isOnMobile, pollingInterval, chasquiUrl) ⇒ \",\"depth\":3},{\"value\":\"TopicFactory~waitForHashChange(topicName, cb)\",\"depth\":4},{\"value\":\"TopicFactory~pollForResult(topicName, url, cb, cancelled)\",\"depth\":4},{\"value\":\"TopicFactory~clearTopic(url)\",\"depth\":4},{\"value\":\"TopicFactory~newTopic(topicName) ⇒ \",\"depth\":4},{\"value\":\"Connect ⇐ \",\"depth\":2},{\"value\":\"new Connect(appName, \",\"depth\":3},{\"value\":\"connect.getWeb3() ⇒ \",\"depth\":3},{\"value\":\"connect.getProvider() ⇒ \",\"depth\":3},{\"value\":\"connect.requestCredentials(\",\"depth\":3},{\"value\":\"connect.requestAddress(\",\"depth\":3},{\"value\":\"connect.attestCredentials(credential, \",\"depth\":3},{\"value\":\"connect.request(request) ⇒ \",\"depth\":3},{\"value\":\"connect.contract(abi) ⇒ \",\"depth\":3},{\"value\":\"connect.sendTransaction(txobj) ⇒ \",\"depth\":3},{\"value\":\"ConnectCore\",\"depth\":2},{\"value\":\"new ConnectCore(appName, \",\"depth\":3},{\"value\":\"connectCore.getProvider() ⇒ \",\"depth\":3},{\"value\":\"connectCore.requestCredentials(\",\"depth\":3},{\"value\":\"connectCore.requestAddress(\",\"depth\":3},{\"value\":\"connectCore.attestCredentials(credential, \",\"depth\":3},{\"value\":\"connectCore.request(request) ⇒ \",\"depth\":3},{\"value\":\"connectCore.contract(abi) ⇒ \",\"depth\":3},{\"value\":\"connectCore.sendTransaction(txobj) ⇒ \",\"depth\":3},{\"value\":\"UportSubprovider\",\"depth\":2},{\"value\":\"new UportSubprovider(args)\",\"depth\":3},{\"value\":\"uportSubprovider.send()\",\"depth\":3},{\"value\":\"uportSubprovider.sendAsync(payload, callback)\",\"depth\":3}],\"excerpt\":\"Modules Classes uport-connect/topicFactory Manages the communication channel between the uport-connect library and a\\n uPort mobile app. The…\",\"timeToRead\":25,\"frontmatter\":{\"title\":\"Uport Connect\",\"category\":\"reference\",\"index\":4,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/uport-js/guides/server-side-credentials-example\"},\"headings\":[{\"value\":\"Server-side Credentials\",\"depth\":1},{\"value\":\"Prerequisites:\",\"depth\":3},{\"value\":\"Register an App\",\"depth\":2},{\"value\":\"Setup a Requestor Service\",\"depth\":2},{\"value\":\"Setup a Creator Service\",\"depth\":2},{\"value\":\"For the fields of the credential:\",\"depth\":3},{\"value\":\"Setup a Verification service\",\"depth\":2}],\"excerpt\":\"Server-side Credentials Here we will demonstrate how to create and sign a custom credential on a server (called the Creator) and present…\",\"timeToRead\":9,\"frontmatter\":{\"title\":\"Uport-JS Server How-to\",\"category\":\"tutorials\",\"index\":1,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/uport-js/reference/index\"},\"headings\":[{\"value\":\"Modules\",\"depth\":2},{\"value\":\"Classes\",\"depth\":2},{\"value\":\"uport-js/JWT\",\"depth\":2},{\"value\":\"uport-js/JWT.createJWT(\",\"depth\":3},{\"value\":\"uport-js/JWT.verifyJWT(\",\"depth\":3},{\"value\":\"Credentials\",\"depth\":2},{\"value\":\"new Credentials(\",\"depth\":3},{\"value\":\"credentials.createRequest(\",\"depth\":3},{\"value\":\"credentials.createVerificationRequest(unsignedClaim, sub) ⇒ \",\"depth\":3},{\"value\":\"credentials.receive(token, \",\"depth\":3},{\"value\":\"credentials.push(token, payload, pubEncKey) ⇒ \",\"depth\":3},{\"value\":\"credentials.attest(\",\"depth\":3},{\"value\":\"credentials.lookup(address) ⇒ \",\"depth\":3}],\"excerpt\":\"Modules Classes uport-js/JWT uport-js/JWT .createJWT([config], payload)  ⇒  Promise. < Object, Error > .verifyJWT([config], jwt, callbackUrl…\",\"timeToRead\":10,\"frontmatter\":{\"title\":\"Uport JS\",\"category\":\"reference\",\"index\":4,\"type\":\"content\"}}}]}},\"pathContext\":{\"slug\":\"/muport-core-js/guides/simple-id\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/muport-core-js-guides-simple-id.json\n// module id = 652\n// module chunks = 131990869628306"],"sourceRoot":""}