{"version":3,"sources":["webpack:///./node_modules/react-autolink-text2/lib/index.js","webpack:///./node_modules/react-autolink-text2/lib/match_parser.js","webpack:///./node_modules/react-autolink-text2/lib/match_validator.js","webpack:///./node_modules/react-autolink-text2/lib/url_match.js","webpack:///./node_modules/unist-util-visit/index.js","webpack:///./node_modules/unist-util-is/index.js","webpack:///./node_modules/space-separated-tokens/index.js","webpack:///./node_modules/comma-separated-tokens/index.js","webpack:///./node_modules/unist-util-visit-parents/index.js"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","__webpack_require__","_react2","_interopRequireDefault","_propTypes2","_match_parser2","obj","__esModule","default","AutoLinkText","_PureComponent","instance","TypeError","_classCallCheck","this","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","arguments","subClass","superClass","create","constructor","setPrototypeOf","_inherits","PureComponent","matches","text","_this2","elements","lastIndex","forEach","match","position","start","push","createElement","slice","assign","href","getAnchorHref","linkProps","getAnchorText","end","items","_this3","maxLength","some","el","children","truncatedText","cloneElement","map","index","keyedElements","keyElements","truncate","prepareElements","propTypes","string","object","oneOfType","number","_slicedToArray","arr","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","sliceIterator","regex","RegExp","urlRegex","exec","_match2","matchedText","protocolUrlMatch","wwwProtocolRelativeMatch","tldProtocolRelativeMatch","protocolRelativeMatch","charBeforeProtocolRelMatchRegex","_match_validator","isValidMatch","_url_match2","_url_match","domainNameRegex","source","join","urlMatch","uriSchemeMatch","uriScheme","uriSchemeRegex","toLowerCase","hasFullProtocolRegex","test","indexOf","urlMatchDoesNotHaveProtocolOrDot","hasWordCharAfterProtocolRegex","urlMatchDoesNotHaveAtLeastOneWordChar","invalidProtocolRelMatchRegex","isInvalidProtocolRelativeMatch","URL_PREFIX_REGEX","PROTOCOL_RELATIVE_REGEX","URLMatch","url","_url","_protocolUrlMatch","_protocolRelativeMatch","protocolPrepended","getUrl","replace","anchorText","stripProtocolRelativePrefix","stripUrlPrefix","removeTrailingSlash","charAt","module","visit","visitParents","CONTINUE","SKIP","EXIT","tree","visitor","reverse","node","parents","parent","convert","Boolean","type","typeFactory","ok","tests","checks","results","convertAll","Error","is","context","hasParent","hasIndex","check","Infinity","trim","parse","input","String","empty","split","whiteSpace","stringify","values","space","val","comma","options","settings","left","padLeft","right","padRight","concat","one","result","child","step","all"],"mappings":"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","file":"3-b8d73506aa6855ba97b6.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _match_parser = require('./match_parser');\n\nvar _match_parser2 = _interopRequireDefault(_match_parser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar AutoLinkText = function (_PureComponent) {\n  _inherits(AutoLinkText, _PureComponent);\n\n  function AutoLinkText() {\n    _classCallCheck(this, AutoLinkText);\n\n    return _possibleConstructorReturn(this, (AutoLinkText.__proto__ || Object.getPrototypeOf(AutoLinkText)).apply(this, arguments));\n  }\n\n  _createClass(AutoLinkText, [{\n    key: 'prepareElements',\n    value: function prepareElements(matches, text) {\n      var _this2 = this;\n\n      var elements = [];\n      var lastIndex = 0;\n\n      matches.forEach(function (match) {\n        if (match.position.start !== 0) {\n          elements.push(_react2.default.createElement('span', {}, text.slice(lastIndex, match.position.start)));\n        }\n        elements.push(_react2.default.createElement('a', Object.assign({}, { href: match.getAnchorHref() }, _this2.props.linkProps), match.getAnchorText()));\n        lastIndex = match.position.end;\n      });\n\n      if (lastIndex < text.length) {\n        elements.push(_react2.default.createElement('span', {}, text.slice(lastIndex)));\n      }\n\n      return elements;\n    }\n  }, {\n    key: 'truncate',\n    value: function truncate(items) {\n      var _this3 = this;\n\n      if (!this.props.maxLength) return items;\n\n      var elements = [];\n      var length = 0;\n\n      items.some(function (el) {\n        length += el.props.children.length;\n\n        if (length > _this3.props.maxLength) {\n          var truncatedText = el.props.children.slice(0, -(length - _this3.props.maxLength));\n          elements.push(_react2.default.cloneElement(el, {}, truncatedText));\n          return true; // stop iterating through the elements\n        }\n\n        elements.push(el);\n      });\n\n      return elements;\n    }\n\n    /*\n     * Generate unique keys for each of the elements.\n     * The key will be based on the index of the element.\n     */\n\n  }, {\n    key: 'keyElements',\n    value: function keyElements(elements) {\n      return elements.map(function (el, index) {\n        return _react2.default.cloneElement(el, { key: index });\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var text = this.props.text || '';\n\n      var keyedElements = this.keyElements(this.truncate(this.prepareElements((0, _match_parser2.default)(text), text)));\n\n      return _react2.default.createElement('span', {}, keyedElements);\n    }\n  }]);\n\n  return AutoLinkText;\n}(_react.PureComponent);\n\nexports.default = AutoLinkText;\n\n\nAutoLinkText.propTypes = {\n  text: _propTypes2.default.string,\n  linkProps: _propTypes2.default.object,\n  maxLength: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.default = function (text) {\n  var regex = new RegExp(urlRegex, 'gi');\n  var matches = [];\n\n  var match;\n  while ((match = regex.exec(text)) !== null) {\n    var _match = match,\n        _match2 = _slicedToArray(_match, 4),\n        matchedText = _match2[0],\n        protocolUrlMatch = _match2[1],\n        wwwProtocolRelativeMatch = _match2[2],\n        tldProtocolRelativeMatch = _match2[3];\n\n    var protocolRelativeMatch = wwwProtocolRelativeMatch || tldProtocolRelativeMatch;\n\n    // If it's a protocol-relative '//' match, remove the character\n    // before the '//' (which the matcherRegex needed to match due to\n    // the lack of a negative look-behind in JavaScript regular\n    // expressions)\n    if (protocolRelativeMatch) {\n      var charBeforeMatch = protocolRelativeMatch.match(charBeforeProtocolRelMatchRegex)[1] || '';\n\n      // fix up the `matchStr` if there was a preceding char before a protocol-relative match, which was needed to determine the match itself (since there are no look-behinds in JS regexes)\n      if (charBeforeMatch) {\n        matchedText = matchedText.slice(1); // remove the prefixed char from the match\n        match.index++;\n      }\n    }\n\n    if ((0, _match_validator.isValidMatch)(matchedText, protocolUrlMatch, protocolRelativeMatch)) {\n      var position = { start: match.index, end: regex.lastIndex };\n      matches.push(new _url_match2.default(matchedText, protocolUrlMatch, protocolRelativeMatch, position));\n    }\n  }\n\n  return matches;\n};\n\nvar _match_validator = require('./match_validator');\n\nvar _url_match = require('./url_match');\n\nvar _url_match2 = _interopRequireDefault(_url_match);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// match protocol, allow in format \"http://\" or \"mailto:\". However, do not match\n// the first part of something like 'link:http://www.google.com' (i.e. don't match \"link:\").\n// Also, make sure we don't interpret 'google.com:8000' as if 'google.com' was a\n// protocol here (i.e. ignore a trailing port number in this regex)\nvar protocolRegex = /(?:[A-Za-z][-.+A-Za-z0-9]+:(?![A-Za-z][-.+A-Za-z0-9]+:\\/\\/)(?!\\d+\\/?)(?:\\/\\/)?)/;\n\n// starting with 'www.'\nvar wwwRegex = /(?:www\\.)/;\n\n// anything looking at all like a domain, non-unicode domains, not ending in a period\nvar domainNameRegex = /[A-Za-z0-9.-]*[A-Za-z0-9-]/;\n\n// match our known top level domains (TLDs)\nvar tldRegex = /\\.(?:international|construction|contractors|enterprises|photography|productions|foundation|immobilien|industries|management|properties|technology|christmas|community|directory|education|equipment|institute|marketing|solutions|vacations|bargains|boutique|builders|catering|cleaning|clothing|computer|democrat|diamonds|graphics|holdings|lighting|partners|plumbing|supplies|training|ventures|academy|careers|company|cruises|domains|exposed|flights|florist|gallery|guitars|holiday|kitchen|neustar|okinawa|recipes|rentals|reviews|shiksha|singles|support|systems|agency|berlin|camera|center|coffee|condos|dating|estate|events|expert|futbol|kaufen|luxury|maison|monash|museum|nagoya|photos|repair|report|social|supply|tattoo|tienda|travel|viajes|villas|vision|voting|voyage|actor|build|cards|cheap|codes|dance|email|glass|house|mango|ninja|parts|photo|shoes|solar|today|tokyo|tools|watch|works|aero|arpa|asia|best|bike|blue|buzz|camp|club|cool|coop|farm|fish|gift|guru|info|jobs|kiwi|kred|land|limo|link|menu|mobi|moda|name|pics|pink|post|qpon|rich|ruhr|sexy|tips|vote|voto|wang|wien|wiki|zone|bar|bid|biz|cab|cat|ceo|com|edu|gov|int|kim|mil|net|onl|org|pro|pub|red|tel|uno|wed|xxx|xyz|ac|ad|ae|af|ag|ai|al|am|an|ao|aq|ar|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cu|cv|cw|cx|cy|cz|de|dj|dk|dm|do|dz|ec|ee|eg|er|es|et|eu|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|st|su|sv|sx|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tp|tr|tt|tv|tw|tz|ua|ug|uk|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|za|zm|zw)\\b/;\n\n// Allow optional path, query string, and hash anchor, not ending in the following characters: \"?!:,.;\"\n// http://blog.codinghorror.com/the-problem-with-urls/\nvar urlSuffixRegex = /[-A-Za-z0-9+&@#/%=~_()|'$*[\\]?!:,.;]*[-A-Za-z0-9+&@#/%=~_()|'$*[\\]]/;\n\nvar charBeforeProtocolRelMatchRegex = /^(.)?\\/\\//;\n\n/* eslint-disable indent */\nvar urlRegex = ['(?:', // parens to cover match for protocol (optional), and domain\n'(', // *** Capturing group $1, for a protocol-prefixed url (ex: http://google.com)\nprotocolRegex.source, domainNameRegex.source, ')', '|', '(?:', // non-capturing paren for a 'www.' prefixed url (ex: www.google.com)\n'(.?//)?', // *** Capturing group $2 for an optional protocol-relative URL. Must be at the beginning of the string or start with a non-word character\nwwwRegex.source, domainNameRegex.source, ')', '|', '(?:', // non-capturing paren for known a TLD url (ex: google.com)\n'(.?//)?', // *** Capturing group $3 for an optional protocol-relative URL. Must be at the beginning of the string or start with a non-word character\ndomainNameRegex.source, tldRegex.source, ')', ')', '(?:' + urlSuffixRegex.source + ')?'].join('');\n/* eslint-enable indent */","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isValidMatch = isValidMatch;\nvar uriSchemeRegex = /^[A-Za-z][-.+A-Za-z0-9]+:/;\nvar hasFullProtocolRegex = /^[A-Za-z][-.+A-Za-z0-9]+:\\/\\//;\nvar hasWordCharAfterProtocolRegex = /:[^\\s]*?[A-Za-z]/;\nvar invalidProtocolRelMatchRegex = /^[\\w]\\/\\//;\n\n/**\n * Determines if a given match found by the match parser is valid.\n * Will return `false` for:\n *\n * 1) URL matches which do not have at least have one period ('.') in the\n *    domain name (effectively skipping over matches like \"abc:def\").\n *    However, URL matches with a protocol will be allowed (ex: 'http://localhost')\n * 2) URL matches which do not have at least one word character in the\n *    domain name (effectively skipping over matches like \"git:1.0\").\n * 3) A protocol-relative url match (a URL beginning with '//') whose\n *    previous character is a word character (effectively skipping over\n *    strings like \"abc//google.com\")\n *\n * Otherwise, returns `true`.\n *\n * @param {String} urlMatch The matched URL, if there was one. Will be an\n *   empty string if the match is not a URL match.\n * @param {String} protocolUrlMatch The match URL string for a protocol\n *   match. Ex: 'http://yahoo.com'. This is used to match something like\n *   'http://localhost', where we won't double check that the domain name\n *   has at least one '.' in it.\n * @param {String} protocolRelativeMatch The protocol-relative string for a\n *   URL match (i.e. '//'), possibly with a preceding character (ex, a\n *   space, such as: ' //', or a letter, such as: 'a//'). The match is\n *   invalid if there is a word character preceding the '//'.\n * @return {Boolean} `true` if the match given is valid and should be\n *   processed, or `false` if the match is invalid and/or should just not be\n *   processed.\n */\nfunction isValidMatch(urlMatch, protocolUrlMatch, protocolRelativeMatch) {\n  if (protocolUrlMatch && !isValidUriScheme(protocolUrlMatch) || urlMatchDoesNotHaveProtocolOrDot(urlMatch, protocolUrlMatch) || // At least one period ('.') must exist in the URL match for us to consider it an actual URL, *unless* it was a full protocol match (like 'http://localhost')\n  urlMatchDoesNotHaveAtLeastOneWordChar(urlMatch, protocolUrlMatch) || // At least one letter character must exist in the domain name after a protocol match. Ex: skip over something like \"git:1.0\"\n  isInvalidProtocolRelativeMatch(protocolRelativeMatch) // A protocol-relative match which has a word character in front of it (so we can skip something like \"abc//google.com\")\n  ) {\n      return false;\n    }\n\n  return true;\n}\n\n/**\n * Determines if the URI scheme is a valid scheme to be autolinked. Returns\n * `false` if the scheme is 'javascript:' or 'vbscript:'\n *\n * @private\n * @param {String} uriSchemeMatch The match URL string for a full URI scheme\n *   match. Ex: 'http://yahoo.com' or 'mailto:a@a.com'.\n * @return {Boolean} `true` if the scheme is a valid one, `false` otherwise.\n */\nfunction isValidUriScheme(uriSchemeMatch) {\n  var uriScheme = uriSchemeMatch.match(uriSchemeRegex)[0].toLowerCase();\n\n  return uriScheme !== 'javascript:' && uriScheme !== 'vbscript:';\n}\n\n/**\n * Determines if a URL match does not have either:\n *\n * a) a full protocol (i.e. 'http://'), or\n * b) at least one dot ('.') in the domain name (for a non-full-protocol\n *    match).\n *\n * Either situation is considered an invalid URL (ex: 'git:d' does not have\n * either the '://' part, or at least one dot in the domain name. If the\n * match was 'git:abc.com', we would consider this valid.)\n *\n * @private\n * @param {String} urlMatch The matched URL, if there was one. Will be an\n *   empty string if the match is not a URL match.\n * @param {String} protocolUrlMatch The match URL string for a protocol\n *   match. Ex: 'http://yahoo.com'. This is used to match something like\n *   'http://localhost', where we won't double check that the domain name\n *   has at least one '.' in it.\n * @return {Boolean} `true` if the URL match does not have a full protocol,\n *   or at least one dot ('.') in a non-full-protocol match.\n */\nfunction urlMatchDoesNotHaveProtocolOrDot(urlMatch, protocolUrlMatch) {\n  return !!urlMatch && (!protocolUrlMatch || !hasFullProtocolRegex.test(protocolUrlMatch)) && urlMatch.indexOf('.') === -1;\n}\n\n/**\n * Determines if a URL match does not have at least one word character after\n * the protocol (i.e. in the domain name).\n *\n * At least one letter character must exist in the domain name after a\n * protocol match. Ex: skip over something like \"git:1.0\"\n *\n * @private\n * @param {String} urlMatch The matched URL, if there was one. Will be an\n *   empty string if the match is not a URL match.\n * @param {String} protocolUrlMatch The match URL string for a protocol\n *   match. Ex: 'http://yahoo.com'. This is used to know whether or not we\n *   have a protocol in the URL string, in order to check for a word\n *   character after the protocol separator (':').\n * @return {Boolean} `true` if the URL match does not have at least one word\n *   character in it after the protocol, `false` otherwise.\n */\nfunction urlMatchDoesNotHaveAtLeastOneWordChar(urlMatch, protocolUrlMatch) {\n  if (urlMatch && protocolUrlMatch) {\n    return !hasWordCharAfterProtocolRegex.test(urlMatch);\n  } else {\n    return false;\n  }\n}\n\n/**\n * Determines if a protocol-relative match is an invalid one. This method\n * returns `true` if there is a `protocolRelativeMatch`, and that match\n * contains a word character before the '//' (i.e. it must contain\n * whitespace or nothing before the '//' in order to be considered valid).\n *\n * @private\n * @param {String} protocolRelativeMatch The protocol-relative string for a\n *   URL match (i.e. '//'), possibly with a preceding character (ex, a\n *   space, such as: ' //', or a letter, such as: 'a//'). The match is\n *   invalid if there is a word character preceding the '//'.\n * @return {Boolean} `true` if it is an invalid protocol-relative match,\n *   `false` otherwise.\n */\nfunction isInvalidProtocolRelativeMatch(protocolRelativeMatch) {\n  return !!protocolRelativeMatch && invalidProtocolRelMatchRegex.test(protocolRelativeMatch);\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * A regular expression used to remove the 'http://' or 'https://' and/or the 'www.' from URLs.\n */\nvar URL_PREFIX_REGEX = /^(https?:\\/\\/)?(www\\.)?/i;\n\n/**\n * The regular expression used to remove the protocol-relative '//' from the {@link #url} string, for purposes\n * of {@link #getAnchorText}. A protocol-relative URL is, for example, \"//yahoo.com\"\n */\nvar PROTOCOL_RELATIVE_REGEX = /^\\/\\//;\n\n/**\n * @class Autolinker.match.Url\n *\n * Represents a Url match found in an input string which should be Autolinked.\n */\n\nvar URLMatch = function () {\n  function URLMatch(url, protocolUrlMatch, protocolRelativeMatch, position) {\n    _classCallCheck(this, URLMatch);\n\n    this._url = url;\n    this._protocolUrlMatch = protocolUrlMatch;\n    this._protocolRelativeMatch = protocolRelativeMatch;\n    this.position = position;\n\n    /**\n     * Will be set to `true` if the 'http://' protocol has been prepended to the {@link #url} (because the\n     * {@link #url} did not have a protocol)\n     */\n    this.protocolPrepended = false;\n  }\n\n  /**\n   * Returns the url that was matched, assuming the protocol to be 'http://' if the original\n   * match was missing a protocol.\n   *\n   * @return {String}\n   */\n\n\n  _createClass(URLMatch, [{\n    key: 'getUrl',\n    value: function getUrl() {\n      var url = this._url;\n\n      // if the url string doesn't begin with a protocol, assume 'http://'\n      if (!this._protocolRelativeMatch && !this._protocolUrlMatch && !this.protocolPrepended) {\n        url = this._url = 'http://' + url;\n\n        this.protocolPrepended = true;\n      }\n\n      return url;\n    }\n\n    /**\n     * Returns the anchor href that should be generated for the match.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'getAnchorHref',\n    value: function getAnchorHref() {\n      var url = this.getUrl();\n\n      return url.replace(/&amp;/g, '&'); // any &amp;'s in the URL should be converted back to '&' if they were displayed as &amp; in the source html\n    }\n\n    /**\n     * Returns the anchor text that should be generated for the match.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'getAnchorText',\n    value: function getAnchorText() {\n      var anchorText = this.getUrl();\n\n      if (this._protocolRelativeMatch) {\n        // Strip off any protocol-relative '//' from the anchor text\n        anchorText = this.stripProtocolRelativePrefix(anchorText);\n      }\n      anchorText = this.stripUrlPrefix(anchorText); // remove URL prefix\n      anchorText = this.removeTrailingSlash(anchorText); // remove trailing slash, if there is one\n\n      return anchorText;\n    }\n\n    // ---------------------------------------\n\n    // Utility Functionality\n\n    /**\n     * Strips the URL prefix (such as \"http://\" or \"https://\") from the given text.\n     *\n     * @private\n     * @param {String} text The text of the anchor that is being generated, for which to strip off the\n     *   url prefix (such as stripping off \"http://\")\n     * @return {String} The `anchorText`, with the prefix stripped.\n     */\n\n  }, {\n    key: 'stripUrlPrefix',\n    value: function stripUrlPrefix(text) {\n      return text.replace(URL_PREFIX_REGEX, '');\n    }\n\n    /**\n     * Strips any protocol-relative '//' from the anchor text.\n     *\n     * @private\n     * @param {String} text The text of the anchor that is being generated, for which to strip off the\n     *   protocol-relative prefix (such as stripping off \"//\")\n     * @return {String} The `anchorText`, with the protocol-relative prefix stripped.\n     */\n\n  }, {\n    key: 'stripProtocolRelativePrefix',\n    value: function stripProtocolRelativePrefix(text) {\n      return text.replace(PROTOCOL_RELATIVE_REGEX, '');\n    }\n\n    /**\n     * Removes any trailing slash from the given `anchorText`, in preparation for the text to be displayed.\n     *\n     * @private\n     * @param {String} anchorText The text of the anchor that is being generated, for which to remove any trailing\n     *   slash ('/') that may exist.\n     * @return {String} The `anchorText`, with the trailing slash removed.\n     */\n\n  }, {\n    key: 'removeTrailingSlash',\n    value: function removeTrailingSlash(anchorText) {\n      if (anchorText.charAt(anchorText.length - 1) === '/') {\n        anchorText = anchorText.slice(0, -1);\n      }\n      return anchorText;\n    }\n  }]);\n\n  return URLMatch;\n}();\n\nexports.default = URLMatch;","'use strict'\n\nmodule.exports = visit\n\nvar visitParents = require('unist-util-visit-parents')\n\nvar CONTINUE = visitParents.CONTINUE\nvar SKIP = visitParents.SKIP\nvar EXIT = visitParents.EXIT\n\nvisit.CONTINUE = CONTINUE\nvisit.SKIP = SKIP\nvisit.EXIT = EXIT\n\nfunction visit(tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  function overload(node, parents) {\n    var parent = parents[parents.length - 1]\n    var index = parent ? parent.children.indexOf(node) : null\n    return visitor(node, index, parent)\n  }\n}\n","'use strict'\n\n/* eslint-disable max-params */\n\n/* Expose. */\nmodule.exports = is\n\n/* Assert if `test` passes for `node`.\n * When a `parent` node is known the `index` of node */\nfunction is(test, node, index, parent, context) {\n  var hasParent = parent !== null && parent !== undefined\n  var hasIndex = index !== null && index !== undefined\n  var check = convert(test)\n\n  if (\n    hasIndex &&\n    (typeof index !== 'number' || index < 0 || index === Infinity)\n  ) {\n    throw new Error('Expected positive finite index or child node')\n  }\n\n  if (hasParent && (!is(null, parent) || !parent.children)) {\n    throw new Error('Expected parent node')\n  }\n\n  if (!node || !node.type || typeof node.type !== 'string') {\n    return false\n  }\n\n  if (hasParent !== hasIndex) {\n    throw new Error('Expected both parent and index')\n  }\n\n  return Boolean(check.call(context, node, index, parent))\n}\n\nfunction convert(test) {\n  if (typeof test === 'string') {\n    return typeFactory(test)\n  }\n\n  if (test === null || test === undefined) {\n    return ok\n  }\n\n  if (typeof test === 'object') {\n    return ('length' in test ? anyFactory : matchesFactory)(test)\n  }\n\n  if (typeof test === 'function') {\n    return test\n  }\n\n  throw new Error('Expected function, string, or object as test')\n}\n\nfunction convertAll(tests) {\n  var results = []\n  var length = tests.length\n  var index = -1\n\n  while (++index < length) {\n    results[index] = convert(tests[index])\n  }\n\n  return results\n}\n\n/* Utility assert each property in `test` is represented\n * in `node`, and each values are strictly equal. */\nfunction matchesFactory(test) {\n  return matches\n\n  function matches(node) {\n    var key\n\n    for (key in test) {\n      if (node[key] !== test[key]) {\n        return false\n      }\n    }\n\n    return true\n  }\n}\n\nfunction anyFactory(tests) {\n  var checks = convertAll(tests)\n  var length = checks.length\n\n  return matches\n\n  function matches() {\n    var index = -1\n\n    while (++index < length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/* Utility to convert a string into a function which checks\n * a given node’s type for said string. */\nfunction typeFactory(test) {\n  return type\n\n  function type(node) {\n    return Boolean(node && node.type === test)\n  }\n}\n\n/* Utility to return true. */\nfunction ok() {\n  return true\n}\n","'use strict'\n\nvar trim = require('trim')\n\nexports.parse = parse\nexports.stringify = stringify\n\nvar empty = ''\nvar space = ' '\nvar whiteSpace = /[ \\t\\n\\r\\f]+/g\n\nfunction parse(value) {\n  var input = trim(String(value || empty))\n  return input === empty ? [] : input.split(whiteSpace)\n}\n\nfunction stringify(values) {\n  return trim(values.join(space))\n}\n","'use strict'\n\nexports.parse = parse\nexports.stringify = stringify\n\nvar trim = require('trim')\n\nvar comma = ','\nvar space = ' '\nvar empty = ''\n\n/* Parse comma-separated tokens to an array. */\nfunction parse(value) {\n  var values = []\n  var input = String(value || empty)\n  var index = input.indexOf(comma)\n  var lastIndex = 0\n  var end = false\n  var val\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    val = trim(input.slice(lastIndex, index))\n\n    if (val || !end) {\n      values.push(val)\n    }\n\n    lastIndex = index + 1\n    index = input.indexOf(comma, lastIndex)\n  }\n\n  return values\n}\n\n/* Compile an array to comma-separated tokens.\n * `options.padLeft` (default: `true`) pads a space left of each\n * token, and `options.padRight` (default: `false`) pads a space\n * to the right of each token. */\nfunction stringify(values, options) {\n  var settings = options || {}\n  var left = settings.padLeft === false ? empty : space\n  var right = settings.padRight ? space : empty\n\n  /* Ensure the last empty entry is seen. */\n  if (values[values.length - 1] === empty) {\n    values = values.concat(empty)\n  }\n\n  return trim(values.join(right + comma + left))\n}\n","'use strict'\n\nmodule.exports = visitParents\n\nvar is = require('unist-util-is')\n\nvar CONTINUE = true\nvar SKIP = 'skip'\nvar EXIT = false\n\nvisitParents.CONTINUE = CONTINUE\nvisitParents.SKIP = SKIP\nvisitParents.EXIT = EXIT\n\nfunction visitParents(tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  one(tree, null, [])\n\n  // Visit a single node.\n  function one(node, index, parents) {\n    var result\n\n    if (!test || is(test, node, index, parents[parents.length - 1] || null)) {\n      result = visitor(node, parents)\n\n      if (result === EXIT) {\n        return result\n      }\n    }\n\n    if (node.children && result !== SKIP) {\n      return all(node.children, parents.concat(node)) === EXIT ? EXIT : result\n    }\n\n    return result\n  }\n\n  // Visit children in `parent`.\n  function all(children, parents) {\n    var min = -1\n    var step = reverse ? -1 : 1\n    var index = (reverse ? children.length : min) + step\n    var child\n    var result\n\n    while (index > min && index < children.length) {\n      child = children[index]\n      result = child && one(child, index, parents)\n\n      if (result === EXIT) {\n        return result\n      }\n\n      index = typeof result === 'number' ? result : index + step\n    }\n  }\n}\n"],"sourceRoot":""}