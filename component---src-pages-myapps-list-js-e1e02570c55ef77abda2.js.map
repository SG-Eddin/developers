{"version":3,"sources":["webpack:///./src/components/MyApps/AppList.js","webpack:///./src/pages/myapps/list.js","webpack:///./src/images/myapps-bg.svg"],"names":["AppList","Component","constructor","props","super","this","state","bgImageStyles","componentDidMount","bgImageArray","profile","uportApps","map","app","index","configuration","profileImage","profileImageURL","backgroundImage","setState","myAppsBg","handleAppItemClick","event","clearCurrentApp","setCurrentApp","redirectToAppDetails","render","react_default","a","createElement","Wrapper","grid","span","className","key","onClick","e","style","backgroundColor","accentColor","name","network","propTypes","PropTypes","object","isRequired","func","styled","div","withConfig","displayName","componentId","connect","currentApp","dispatch","type","MyAppsAppListPage","React","Object","keys","length","redirectToMyApps","layout","location","Helmet_default","title","config","siteTitle","Main","AppManagerHeadContainer","Header","activeCategory","categories","data","navCategories","gatsby_browser_entry","to","MyApps_AppList","theme","brand","main","MyAppsAppListPageContainer","query","extends_default","_1856389890","module","exports","__webpack_require__","p"],"mappings":"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","file":"component---src-pages-myapps-list-js-e1e02570c55ef77abda2.js","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { Grid, Col } from '../../layouts/grid'\nimport myAppsBg from '../../images/myapps-bg.svg'\n\nclass AppList extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      bgImageStyles: []\n    }\n  }\n  componentDidMount () {\n    let bgImageArray = this.state.bgImageStyles\n    this.props.profile.uportApps.map((app, index) => {\n      if (app.configuration.profileImage) {\n        let profileImageURL = 'https://ipfs.io' + app.configuration.profileImage\n        bgImageArray[index] = {backgroundImage: `url(${profileImageURL})`}\n        this.setState({bgImageStyles: bgImageArray})\n        return {backgroundImage: `url(${profileImageURL})`}\n      } else {\n        return {backgroundImage: `url(${myAppsBg})`}\n      }\n    })\n  }\n  handleAppItemClick (event, index) {\n    this.props.clearCurrentApp()\n    this.props.setCurrentApp(this.props.profile.uportApps[index], index)\n    this.props.redirectToAppDetails()\n  }\n  render () {\n    const { uportApps } = this.props.profile\n    return (<Wrapper>\n      <Grid>\n        {uportApps.map((app, index) => (<Col span={4}\n          className='appItem'\n          key={index}\n          onClick={(e) => { this.handleAppItemClick(e, index) }}\n        >\n          <div className='appCover'\n            style={{backgroundColor: app.configuration.accentColor || '#5c54c7'}}\n          >&nbsp;</div>\n          <div className={'avatar ' + (app.configuration.profileImage ? 'uploaded' : 'default')}\n            style={this.state.bgImageStyles[index]}\n          >&nbsp;</div>\n          <h3>{app.name}</h3>\n          <span>{app.configuration.network}</span>\n        </Col>))}\n      </Grid>\n    </Wrapper>)\n  }\n}\n\nAppList.propTypes = {\n  profile: PropTypes.object.isRequired,\n  setCurrentApp: PropTypes.func.isRequired,\n  clearCurrentApp: PropTypes.func.isRequired\n}\n\nconst Wrapper = styled.div`\n  .appItem {\n    float: none;\n    margin: 0;\n    width: auto;\n    min-width: auto;\n  }\n`\n\nconst mapStateToProps = ({ profile, currentApp }) => {\n  return { profile, currentApp }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentApp: (app, index) => dispatch({ type: `SET_CURRENT_APP`, app: app, index: index }),\n    clearCurrentApp: () => dispatch({ type: `CLEAR_CURRENT_APP` })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppList)\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { graphql, Link, StaticQuery } from 'gatsby'\n\nimport SiteHeader from '../../components/Layout/Header'\nimport Layout from \"../../components/layout\"\nimport AppList from '../../components/MyApps/AppList'\nimport { Container, Grid, Col, Spacer } from '../../layouts/grid'\nimport config from '../../../data/SiteConfig'\nimport '../../layouts/css/myapps.css'\n\nconst BodyContainer = styled.div`\nbackground-color: #f9f9fa;\nheight: 100%;\nmin-height: 100vh;\n`\n\nclass MyAppsAppListPage extends React.Component {\n  componentDidMount () {\n    if (Object.keys(this.props.profile).length === 0) {\n      this.props.redirectToMyApps()\n    }\n  }\n  render () {\n    const { redirectToAppDetails } = this.props\n    return (<Layout location={this.props.location}>\n      <div className='index-container myAppsWrap appListPage'>\n        <Helmet title={config.siteTitle} />\n        <Main>\n          <AppManagerHeadContainer>\n            <SiteHeader\n              activeCategory={''}\n              location={this.props.location}\n              categories={this.props.data.navCategories} />\n          </AppManagerHeadContainer>\n          <Container>\n            <Grid>\n              <Spacer span={1} />\n              <Col span={5}>\n                <h1>My Apps</h1>\n              </Col>\n              <Col span={5}>\n                <Link to='/myapps/configurator' className='register-button'>\n                  <span>+</span>\n                  Register an App\n                </Link>\n              </Col>\n              <Spacer span={1} />\n              <Spacer span={1} />\n              <Col span={10}>\n                <div className='appList'>\n                  {this.props.profile.uportApps\n                  ? <AppList redirectToAppDetails={redirectToAppDetails} />\n                  : null\n                  }\n                </div>\n              </Col>\n              <Spacer span={1} />\n            </Grid>\n          </Container>\n        </Main>\n      </div>\n    </Layout>)\n  }\n}\n\nconst AppManagerHeadContainer = styled.div`\n  background: ${props => props.theme.brand}\n`\nconst Main = styled.main`\n  min-height: 100vh;\n  padding-bottom: 50px;\n`\n\nconst query = graphql`\nquery AppManagerMyAppsQuery {\n    allMarkdownRemark(\n      limit: 2000\n      filter: { frontmatter: { type: { eq: \"content\" }}}\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n    navCategories:\n    allMarkdownRemark(\n      filter: { frontmatter: { category: { ne: null }, index: { ne: null }}}\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          headings {\n            value\n            depth\n          }\n          frontmatter {\n            category\n            index\n          }\n        }\n      }\n    }\n  }\n`\n\nMyAppsAppListPage.propTypes = {\n  profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = ({ profile }) => {\n  return { profile }\n}\nconst mapDispatchToProps = dispatch => ({\n  redirectToMyApps() {\n    dispatch({\n      type: 'REDIRECT_MYAPPS'\n    })\n  },\n  redirectToAppDetails() {\n    dispatch({\n      type: 'REDIRECT_APP_DETAILS'\n    })\n  }\n})\n\nconst MyAppsAppListPageContainer = connect(mapStateToProps, mapDispatchToProps)(MyAppsAppListPage)\n\nexport default (props => <StaticQuery\n  query={query}\n  render={data => <MyAppsAppListPageContainer {...props} data={data} /> } />)\n","module.exports = __webpack_public_path__ + \"static/myapps-bg-0d771963a42d51e459192102dbd4f073.svg\";"],"sourceRoot":""}