{"version":3,"sources":["webpack:///./node_modules/lodash/_createCompounder.js","webpack:///./node_modules/lodash/_arrayReduce.js","webpack:///./node_modules/lodash/deburr.js","webpack:///./node_modules/lodash/_deburrLetter.js","webpack:///./node_modules/lodash/_basePropertyOf.js","webpack:///./node_modules/lodash/words.js","webpack:///./node_modules/lodash/_asciiWords.js","webpack:///./node_modules/lodash/_hasUnicodeWord.js","webpack:///./node_modules/lodash/_unicodeWords.js","webpack:///./node_modules/react-autolink-text2/lib/index.js","webpack:///./node_modules/lodash/isArray.js","webpack:///./node_modules/lodash/_root.js","webpack:///./node_modules/lodash/isObjectLike.js","webpack:///./node_modules/lodash/_Symbol.js","webpack:///./node_modules/lodash/_baseGetTag.js","webpack:///./node_modules/lodash/kebabCase.js","webpack:///./node_modules/react-autolink-text2/lib/match_parser.js","webpack:///./node_modules/react-autolink-text2/lib/match_validator.js","webpack:///./node_modules/react-autolink-text2/lib/url_match.js","webpack:///./node_modules/lodash/isSymbol.js","webpack:///./node_modules/unist-util-visit/index.js","webpack:///./node_modules/unist-util-is/index.js","webpack:///./node_modules/lodash/toString.js","webpack:///./node_modules/lodash/_freeGlobal.js","webpack:///./node_modules/lodash/_arrayMap.js","webpack:///./node_modules/lodash/_baseToString.js","webpack:///./node_modules/lodash/_getRawTag.js","webpack:///./node_modules/lodash/_objectToString.js","webpack:///./node_modules/space-separated-tokens/index.js","webpack:///./node_modules/comma-separated-tokens/index.js","webpack:///./node_modules/unist-util-visit-parents/index.js"],"names":["arrayReduce","__webpack_require__","deburr","words","reApos","RegExp","module","exports","callback","string","replace","array","iteratee","accumulator","initAccum","index","length","deburrLetter","toString","reLatin","reComboMark","basePropertyOf","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","object","key","undefined","asciiWords","hasUnicodeWord","unicodeWords","pattern","guard","match","reAsciiWord","reHasUnicodeWord","test","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","reOptMod","rsModifier","rsSeq","join","rsEmoji","reUnicodeWord","Object","defineProperty","value","_createClass","defineProperties","target","props","i","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","prototype","_react","_react2","_interopRequireDefault","_propTypes2","_match_parser2","obj","__esModule","default","AutoLinkText","_PureComponent","instance","TypeError","_classCallCheck","this","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","arguments","subClass","superClass","create","constructor","setPrototypeOf","_inherits","PureComponent","matches","text","_this2","elements","lastIndex","forEach","position","start","push","createElement","slice","assign","href","getAnchorHref","linkProps","getAnchorText","end","items","_this3","maxLength","some","el","children","truncatedText","cloneElement","map","keyedElements","keyElements","truncate","prepareElements","propTypes","oneOfType","number","isArray","Array","freeGlobal","freeSelf","root","Function","Symbol","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","kebabCase","createCompounder","result","word","toLowerCase","_slicedToArray","arr","iterator","_arr","_n","_d","_e","_s","_i","next","done","err","sliceIterator","regex","urlRegex","exec","_match2","matchedText","protocolUrlMatch","wwwProtocolRelativeMatch","tldProtocolRelativeMatch","protocolRelativeMatch","charBeforeProtocolRelMatchRegex","_match_validator","isValidMatch","_url_match2","_url_match","domainNameRegex","source","urlMatch","uriSchemeMatch","uriScheme","uriSchemeRegex","hasFullProtocolRegex","indexOf","urlMatchDoesNotHaveProtocolOrDot","hasWordCharAfterProtocolRegex","urlMatchDoesNotHaveAtLeastOneWordChar","invalidProtocolRelMatchRegex","isInvalidProtocolRelativeMatch","URL_PREFIX_REGEX","PROTOCOL_RELATIVE_REGEX","URLMatch","url","_url","_protocolUrlMatch","_protocolRelativeMatch","protocolPrepended","getUrl","anchorText","stripProtocolRelativePrefix","stripUrlPrefix","removeTrailingSlash","charAt","baseGetTag","isObjectLike","symbolTag","visit","visitParents","CONTINUE","SKIP","EXIT","tree","visitor","reverse","node","parents","parent","convert","Boolean","type","typeFactory","ok","tests","checks","results","convertAll","Error","is","context","hasParent","hasIndex","check","Infinity","baseToString","global","arrayMap","isSymbol","INFINITY","symbolProto","symbolToString","objectProto","hasOwnProperty","nativeObjectToString","isOwn","tag","unmasked","e","trim","parse","input","String","empty","split","whiteSpace","stringify","values","space","val","comma","options","settings","left","padLeft","right","padRight","concat","one","child","step","all"],"mappings":"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","file":"3-d30cba02ee03b2aab1d6.js","sourcesContent":["var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","var deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n","var basePropertyOf = require('./_basePropertyOf');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 's'\n};\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\nmodule.exports = deburrLetter;\n","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _match_parser = require('./match_parser');\n\nvar _match_parser2 = _interopRequireDefault(_match_parser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar AutoLinkText = function (_PureComponent) {\n  _inherits(AutoLinkText, _PureComponent);\n\n  function AutoLinkText() {\n    _classCallCheck(this, AutoLinkText);\n\n    return _possibleConstructorReturn(this, (AutoLinkText.__proto__ || Object.getPrototypeOf(AutoLinkText)).apply(this, arguments));\n  }\n\n  _createClass(AutoLinkText, [{\n    key: 'prepareElements',\n    value: function prepareElements(matches, text) {\n      var _this2 = this;\n\n      var elements = [];\n      var lastIndex = 0;\n\n      matches.forEach(function (match) {\n        if (match.position.start !== 0) {\n          elements.push(_react2.default.createElement('span', {}, text.slice(lastIndex, match.position.start)));\n        }\n        elements.push(_react2.default.createElement('a', Object.assign({}, { href: match.getAnchorHref() }, _this2.props.linkProps), match.getAnchorText()));\n        lastIndex = match.position.end;\n      });\n\n      if (lastIndex < text.length) {\n        elements.push(_react2.default.createElement('span', {}, text.slice(lastIndex)));\n      }\n\n      return elements;\n    }\n  }, {\n    key: 'truncate',\n    value: function truncate(items) {\n      var _this3 = this;\n\n      if (!this.props.maxLength) return items;\n\n      var elements = [];\n      var length = 0;\n\n      items.some(function (el) {\n        length += el.props.children.length;\n\n        if (length > _this3.props.maxLength) {\n          var truncatedText = el.props.children.slice(0, -(length - _this3.props.maxLength));\n          elements.push(_react2.default.cloneElement(el, {}, truncatedText));\n          return true; // stop iterating through the elements\n        }\n\n        elements.push(el);\n      });\n\n      return elements;\n    }\n\n    /*\n     * Generate unique keys for each of the elements.\n     * The key will be based on the index of the element.\n     */\n\n  }, {\n    key: 'keyElements',\n    value: function keyElements(elements) {\n      return elements.map(function (el, index) {\n        return _react2.default.cloneElement(el, { key: index });\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var text = this.props.text || '';\n\n      var keyedElements = this.keyElements(this.truncate(this.prepareElements((0, _match_parser2.default)(text), text)));\n\n      return _react2.default.createElement('span', {}, keyedElements);\n    }\n  }]);\n\n  return AutoLinkText;\n}(_react.PureComponent);\n\nexports.default = AutoLinkText;\n\n\nAutoLinkText.propTypes = {\n  text: _propTypes2.default.string,\n  linkProps: _propTypes2.default.object,\n  maxLength: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.default = function (text) {\n  var regex = new RegExp(urlRegex, 'gi');\n  var matches = [];\n\n  var match;\n  while ((match = regex.exec(text)) !== null) {\n    var _match = match,\n        _match2 = _slicedToArray(_match, 4),\n        matchedText = _match2[0],\n        protocolUrlMatch = _match2[1],\n        wwwProtocolRelativeMatch = _match2[2],\n        tldProtocolRelativeMatch = _match2[3];\n\n    var protocolRelativeMatch = wwwProtocolRelativeMatch || tldProtocolRelativeMatch;\n\n    // If it's a protocol-relative '//' match, remove the character\n    // before the '//' (which the matcherRegex needed to match due to\n    // the lack of a negative look-behind in JavaScript regular\n    // expressions)\n    if (protocolRelativeMatch) {\n      var charBeforeMatch = protocolRelativeMatch.match(charBeforeProtocolRelMatchRegex)[1] || '';\n\n      // fix up the `matchStr` if there was a preceding char before a protocol-relative match, which was needed to determine the match itself (since there are no look-behinds in JS regexes)\n      if (charBeforeMatch) {\n        matchedText = matchedText.slice(1); // remove the prefixed char from the match\n        match.index++;\n      }\n    }\n\n    if ((0, _match_validator.isValidMatch)(matchedText, protocolUrlMatch, protocolRelativeMatch)) {\n      var position = { start: match.index, end: regex.lastIndex };\n      matches.push(new _url_match2.default(matchedText, protocolUrlMatch, protocolRelativeMatch, position));\n    }\n  }\n\n  return matches;\n};\n\nvar _match_validator = require('./match_validator');\n\nvar _url_match = require('./url_match');\n\nvar _url_match2 = _interopRequireDefault(_url_match);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// match protocol, allow in format \"http://\" or \"mailto:\". However, do not match\n// the first part of something like 'link:http://www.google.com' (i.e. don't match \"link:\").\n// Also, make sure we don't interpret 'google.com:8000' as if 'google.com' was a\n// protocol here (i.e. ignore a trailing port number in this regex)\nvar protocolRegex = /(?:[A-Za-z][-.+A-Za-z0-9]+:(?![A-Za-z][-.+A-Za-z0-9]+:\\/\\/)(?!\\d+\\/?)(?:\\/\\/)?)/;\n\n// starting with 'www.'\nvar wwwRegex = /(?:www\\.)/;\n\n// anything looking at all like a domain, non-unicode domains, not ending in a period\nvar domainNameRegex = /[A-Za-z0-9.-]*[A-Za-z0-9-]/;\n\n// match our known top level domains (TLDs)\nvar tldRegex = /\\.(?:international|construction|contractors|enterprises|photography|productions|foundation|immobilien|industries|management|properties|technology|christmas|community|directory|education|equipment|institute|marketing|solutions|vacations|bargains|boutique|builders|catering|cleaning|clothing|computer|democrat|diamonds|graphics|holdings|lighting|partners|plumbing|supplies|training|ventures|academy|careers|company|cruises|domains|exposed|flights|florist|gallery|guitars|holiday|kitchen|neustar|okinawa|recipes|rentals|reviews|shiksha|singles|support|systems|agency|berlin|camera|center|coffee|condos|dating|estate|events|expert|futbol|kaufen|luxury|maison|monash|museum|nagoya|photos|repair|report|social|supply|tattoo|tienda|travel|viajes|villas|vision|voting|voyage|actor|build|cards|cheap|codes|dance|email|glass|house|mango|ninja|parts|photo|shoes|solar|today|tokyo|tools|watch|works|aero|arpa|asia|best|bike|blue|buzz|camp|club|cool|coop|farm|fish|gift|guru|info|jobs|kiwi|kred|land|limo|link|menu|mobi|moda|name|pics|pink|post|qpon|rich|ruhr|sexy|tips|vote|voto|wang|wien|wiki|zone|bar|bid|biz|cab|cat|ceo|com|edu|gov|int|kim|mil|net|onl|org|pro|pub|red|tel|uno|wed|xxx|xyz|ac|ad|ae|af|ag|ai|al|am|an|ao|aq|ar|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cu|cv|cw|cx|cy|cz|de|dj|dk|dm|do|dz|ec|ee|eg|er|es|et|eu|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|st|su|sv|sx|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tp|tr|tt|tv|tw|tz|ua|ug|uk|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|za|zm|zw)\\b/;\n\n// Allow optional path, query string, and hash anchor, not ending in the following characters: \"?!:,.;\"\n// http://blog.codinghorror.com/the-problem-with-urls/\nvar urlSuffixRegex = /[-A-Za-z0-9+&@#/%=~_()|'$*[\\]?!:,.;]*[-A-Za-z0-9+&@#/%=~_()|'$*[\\]]/;\n\nvar charBeforeProtocolRelMatchRegex = /^(.)?\\/\\//;\n\n/* eslint-disable indent */\nvar urlRegex = ['(?:', // parens to cover match for protocol (optional), and domain\n'(', // *** Capturing group $1, for a protocol-prefixed url (ex: http://google.com)\nprotocolRegex.source, domainNameRegex.source, ')', '|', '(?:', // non-capturing paren for a 'www.' prefixed url (ex: www.google.com)\n'(.?//)?', // *** Capturing group $2 for an optional protocol-relative URL. Must be at the beginning of the string or start with a non-word character\nwwwRegex.source, domainNameRegex.source, ')', '|', '(?:', // non-capturing paren for known a TLD url (ex: google.com)\n'(.?//)?', // *** Capturing group $3 for an optional protocol-relative URL. Must be at the beginning of the string or start with a non-word character\ndomainNameRegex.source, tldRegex.source, ')', ')', '(?:' + urlSuffixRegex.source + ')?'].join('');\n/* eslint-enable indent */","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isValidMatch = isValidMatch;\nvar uriSchemeRegex = /^[A-Za-z][-.+A-Za-z0-9]+:/;\nvar hasFullProtocolRegex = /^[A-Za-z][-.+A-Za-z0-9]+:\\/\\//;\nvar hasWordCharAfterProtocolRegex = /:[^\\s]*?[A-Za-z]/;\nvar invalidProtocolRelMatchRegex = /^[\\w]\\/\\//;\n\n/**\n * Determines if a given match found by the match parser is valid.\n * Will return `false` for:\n *\n * 1) URL matches which do not have at least have one period ('.') in the\n *    domain name (effectively skipping over matches like \"abc:def\").\n *    However, URL matches with a protocol will be allowed (ex: 'http://localhost')\n * 2) URL matches which do not have at least one word character in the\n *    domain name (effectively skipping over matches like \"git:1.0\").\n * 3) A protocol-relative url match (a URL beginning with '//') whose\n *    previous character is a word character (effectively skipping over\n *    strings like \"abc//google.com\")\n *\n * Otherwise, returns `true`.\n *\n * @param {String} urlMatch The matched URL, if there was one. Will be an\n *   empty string if the match is not a URL match.\n * @param {String} protocolUrlMatch The match URL string for a protocol\n *   match. Ex: 'http://yahoo.com'. This is used to match something like\n *   'http://localhost', where we won't double check that the domain name\n *   has at least one '.' in it.\n * @param {String} protocolRelativeMatch The protocol-relative string for a\n *   URL match (i.e. '//'), possibly with a preceding character (ex, a\n *   space, such as: ' //', or a letter, such as: 'a//'). The match is\n *   invalid if there is a word character preceding the '//'.\n * @return {Boolean} `true` if the match given is valid and should be\n *   processed, or `false` if the match is invalid and/or should just not be\n *   processed.\n */\nfunction isValidMatch(urlMatch, protocolUrlMatch, protocolRelativeMatch) {\n  if (protocolUrlMatch && !isValidUriScheme(protocolUrlMatch) || urlMatchDoesNotHaveProtocolOrDot(urlMatch, protocolUrlMatch) || // At least one period ('.') must exist in the URL match for us to consider it an actual URL, *unless* it was a full protocol match (like 'http://localhost')\n  urlMatchDoesNotHaveAtLeastOneWordChar(urlMatch, protocolUrlMatch) || // At least one letter character must exist in the domain name after a protocol match. Ex: skip over something like \"git:1.0\"\n  isInvalidProtocolRelativeMatch(protocolRelativeMatch) // A protocol-relative match which has a word character in front of it (so we can skip something like \"abc//google.com\")\n  ) {\n      return false;\n    }\n\n  return true;\n}\n\n/**\n * Determines if the URI scheme is a valid scheme to be autolinked. Returns\n * `false` if the scheme is 'javascript:' or 'vbscript:'\n *\n * @private\n * @param {String} uriSchemeMatch The match URL string for a full URI scheme\n *   match. Ex: 'http://yahoo.com' or 'mailto:a@a.com'.\n * @return {Boolean} `true` if the scheme is a valid one, `false` otherwise.\n */\nfunction isValidUriScheme(uriSchemeMatch) {\n  var uriScheme = uriSchemeMatch.match(uriSchemeRegex)[0].toLowerCase();\n\n  return uriScheme !== 'javascript:' && uriScheme !== 'vbscript:';\n}\n\n/**\n * Determines if a URL match does not have either:\n *\n * a) a full protocol (i.e. 'http://'), or\n * b) at least one dot ('.') in the domain name (for a non-full-protocol\n *    match).\n *\n * Either situation is considered an invalid URL (ex: 'git:d' does not have\n * either the '://' part, or at least one dot in the domain name. If the\n * match was 'git:abc.com', we would consider this valid.)\n *\n * @private\n * @param {String} urlMatch The matched URL, if there was one. Will be an\n *   empty string if the match is not a URL match.\n * @param {String} protocolUrlMatch The match URL string for a protocol\n *   match. Ex: 'http://yahoo.com'. This is used to match something like\n *   'http://localhost', where we won't double check that the domain name\n *   has at least one '.' in it.\n * @return {Boolean} `true` if the URL match does not have a full protocol,\n *   or at least one dot ('.') in a non-full-protocol match.\n */\nfunction urlMatchDoesNotHaveProtocolOrDot(urlMatch, protocolUrlMatch) {\n  return !!urlMatch && (!protocolUrlMatch || !hasFullProtocolRegex.test(protocolUrlMatch)) && urlMatch.indexOf('.') === -1;\n}\n\n/**\n * Determines if a URL match does not have at least one word character after\n * the protocol (i.e. in the domain name).\n *\n * At least one letter character must exist in the domain name after a\n * protocol match. Ex: skip over something like \"git:1.0\"\n *\n * @private\n * @param {String} urlMatch The matched URL, if there was one. Will be an\n *   empty string if the match is not a URL match.\n * @param {String} protocolUrlMatch The match URL string for a protocol\n *   match. Ex: 'http://yahoo.com'. This is used to know whether or not we\n *   have a protocol in the URL string, in order to check for a word\n *   character after the protocol separator (':').\n * @return {Boolean} `true` if the URL match does not have at least one word\n *   character in it after the protocol, `false` otherwise.\n */\nfunction urlMatchDoesNotHaveAtLeastOneWordChar(urlMatch, protocolUrlMatch) {\n  if (urlMatch && protocolUrlMatch) {\n    return !hasWordCharAfterProtocolRegex.test(urlMatch);\n  } else {\n    return false;\n  }\n}\n\n/**\n * Determines if a protocol-relative match is an invalid one. This method\n * returns `true` if there is a `protocolRelativeMatch`, and that match\n * contains a word character before the '//' (i.e. it must contain\n * whitespace or nothing before the '//' in order to be considered valid).\n *\n * @private\n * @param {String} protocolRelativeMatch The protocol-relative string for a\n *   URL match (i.e. '//'), possibly with a preceding character (ex, a\n *   space, such as: ' //', or a letter, such as: 'a//'). The match is\n *   invalid if there is a word character preceding the '//'.\n * @return {Boolean} `true` if it is an invalid protocol-relative match,\n *   `false` otherwise.\n */\nfunction isInvalidProtocolRelativeMatch(protocolRelativeMatch) {\n  return !!protocolRelativeMatch && invalidProtocolRelMatchRegex.test(protocolRelativeMatch);\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * A regular expression used to remove the 'http://' or 'https://' and/or the 'www.' from URLs.\n */\nvar URL_PREFIX_REGEX = /^(https?:\\/\\/)?(www\\.)?/i;\n\n/**\n * The regular expression used to remove the protocol-relative '//' from the {@link #url} string, for purposes\n * of {@link #getAnchorText}. A protocol-relative URL is, for example, \"//yahoo.com\"\n */\nvar PROTOCOL_RELATIVE_REGEX = /^\\/\\//;\n\n/**\n * @class Autolinker.match.Url\n *\n * Represents a Url match found in an input string which should be Autolinked.\n */\n\nvar URLMatch = function () {\n  function URLMatch(url, protocolUrlMatch, protocolRelativeMatch, position) {\n    _classCallCheck(this, URLMatch);\n\n    this._url = url;\n    this._protocolUrlMatch = protocolUrlMatch;\n    this._protocolRelativeMatch = protocolRelativeMatch;\n    this.position = position;\n\n    /**\n     * Will be set to `true` if the 'http://' protocol has been prepended to the {@link #url} (because the\n     * {@link #url} did not have a protocol)\n     */\n    this.protocolPrepended = false;\n  }\n\n  /**\n   * Returns the url that was matched, assuming the protocol to be 'http://' if the original\n   * match was missing a protocol.\n   *\n   * @return {String}\n   */\n\n\n  _createClass(URLMatch, [{\n    key: 'getUrl',\n    value: function getUrl() {\n      var url = this._url;\n\n      // if the url string doesn't begin with a protocol, assume 'http://'\n      if (!this._protocolRelativeMatch && !this._protocolUrlMatch && !this.protocolPrepended) {\n        url = this._url = 'http://' + url;\n\n        this.protocolPrepended = true;\n      }\n\n      return url;\n    }\n\n    /**\n     * Returns the anchor href that should be generated for the match.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'getAnchorHref',\n    value: function getAnchorHref() {\n      var url = this.getUrl();\n\n      return url.replace(/&amp;/g, '&'); // any &amp;'s in the URL should be converted back to '&' if they were displayed as &amp; in the source html\n    }\n\n    /**\n     * Returns the anchor text that should be generated for the match.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'getAnchorText',\n    value: function getAnchorText() {\n      var anchorText = this.getUrl();\n\n      if (this._protocolRelativeMatch) {\n        // Strip off any protocol-relative '//' from the anchor text\n        anchorText = this.stripProtocolRelativePrefix(anchorText);\n      }\n      anchorText = this.stripUrlPrefix(anchorText); // remove URL prefix\n      anchorText = this.removeTrailingSlash(anchorText); // remove trailing slash, if there is one\n\n      return anchorText;\n    }\n\n    // ---------------------------------------\n\n    // Utility Functionality\n\n    /**\n     * Strips the URL prefix (such as \"http://\" or \"https://\") from the given text.\n     *\n     * @private\n     * @param {String} text The text of the anchor that is being generated, for which to strip off the\n     *   url prefix (such as stripping off \"http://\")\n     * @return {String} The `anchorText`, with the prefix stripped.\n     */\n\n  }, {\n    key: 'stripUrlPrefix',\n    value: function stripUrlPrefix(text) {\n      return text.replace(URL_PREFIX_REGEX, '');\n    }\n\n    /**\n     * Strips any protocol-relative '//' from the anchor text.\n     *\n     * @private\n     * @param {String} text The text of the anchor that is being generated, for which to strip off the\n     *   protocol-relative prefix (such as stripping off \"//\")\n     * @return {String} The `anchorText`, with the protocol-relative prefix stripped.\n     */\n\n  }, {\n    key: 'stripProtocolRelativePrefix',\n    value: function stripProtocolRelativePrefix(text) {\n      return text.replace(PROTOCOL_RELATIVE_REGEX, '');\n    }\n\n    /**\n     * Removes any trailing slash from the given `anchorText`, in preparation for the text to be displayed.\n     *\n     * @private\n     * @param {String} anchorText The text of the anchor that is being generated, for which to remove any trailing\n     *   slash ('/') that may exist.\n     * @return {String} The `anchorText`, with the trailing slash removed.\n     */\n\n  }, {\n    key: 'removeTrailingSlash',\n    value: function removeTrailingSlash(anchorText) {\n      if (anchorText.charAt(anchorText.length - 1) === '/') {\n        anchorText = anchorText.slice(0, -1);\n      }\n      return anchorText;\n    }\n  }]);\n\n  return URLMatch;\n}();\n\nexports.default = URLMatch;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","'use strict'\n\nmodule.exports = visit\n\nvar visitParents = require('unist-util-visit-parents')\n\nvar CONTINUE = visitParents.CONTINUE\nvar SKIP = visitParents.SKIP\nvar EXIT = visitParents.EXIT\n\nvisit.CONTINUE = CONTINUE\nvisit.SKIP = SKIP\nvisit.EXIT = EXIT\n\nfunction visit(tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  function overload(node, parents) {\n    var parent = parents[parents.length - 1]\n    var index = parent ? parent.children.indexOf(node) : null\n    return visitor(node, index, parent)\n  }\n}\n","'use strict'\n\n/* eslint-disable max-params */\n\n/* Expose. */\nmodule.exports = is\n\n/* Assert if `test` passes for `node`.\n * When a `parent` node is known the `index` of node */\nfunction is(test, node, index, parent, context) {\n  var hasParent = parent !== null && parent !== undefined\n  var hasIndex = index !== null && index !== undefined\n  var check = convert(test)\n\n  if (\n    hasIndex &&\n    (typeof index !== 'number' || index < 0 || index === Infinity)\n  ) {\n    throw new Error('Expected positive finite index or child node')\n  }\n\n  if (hasParent && (!is(null, parent) || !parent.children)) {\n    throw new Error('Expected parent node')\n  }\n\n  if (!node || !node.type || typeof node.type !== 'string') {\n    return false\n  }\n\n  if (hasParent !== hasIndex) {\n    throw new Error('Expected both parent and index')\n  }\n\n  return Boolean(check.call(context, node, index, parent))\n}\n\nfunction convert(test) {\n  if (typeof test === 'string') {\n    return typeFactory(test)\n  }\n\n  if (test === null || test === undefined) {\n    return ok\n  }\n\n  if (typeof test === 'object') {\n    return ('length' in test ? anyFactory : matchesFactory)(test)\n  }\n\n  if (typeof test === 'function') {\n    return test\n  }\n\n  throw new Error('Expected function, string, or object as test')\n}\n\nfunction convertAll(tests) {\n  var results = []\n  var length = tests.length\n  var index = -1\n\n  while (++index < length) {\n    results[index] = convert(tests[index])\n  }\n\n  return results\n}\n\n/* Utility assert each property in `test` is represented\n * in `node`, and each values are strictly equal. */\nfunction matchesFactory(test) {\n  return matches\n\n  function matches(node) {\n    var key\n\n    for (key in test) {\n      if (node[key] !== test[key]) {\n        return false\n      }\n    }\n\n    return true\n  }\n}\n\nfunction anyFactory(tests) {\n  var checks = convertAll(tests)\n  var length = checks.length\n\n  return matches\n\n  function matches() {\n    var index = -1\n\n    while (++index < length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/* Utility to convert a string into a function which checks\n * a given node’s type for said string. */\nfunction typeFactory(test) {\n  return type\n\n  function type(node) {\n    return Boolean(node && node.type === test)\n  }\n}\n\n/* Utility to return true. */\nfunction ok() {\n  return true\n}\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","'use strict'\n\nvar trim = require('trim')\n\nexports.parse = parse\nexports.stringify = stringify\n\nvar empty = ''\nvar space = ' '\nvar whiteSpace = /[ \\t\\n\\r\\f]+/g\n\nfunction parse(value) {\n  var input = trim(String(value || empty))\n  return input === empty ? [] : input.split(whiteSpace)\n}\n\nfunction stringify(values) {\n  return trim(values.join(space))\n}\n","'use strict'\n\nexports.parse = parse\nexports.stringify = stringify\n\nvar trim = require('trim')\n\nvar comma = ','\nvar space = ' '\nvar empty = ''\n\n/* Parse comma-separated tokens to an array. */\nfunction parse(value) {\n  var values = []\n  var input = String(value || empty)\n  var index = input.indexOf(comma)\n  var lastIndex = 0\n  var end = false\n  var val\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    val = trim(input.slice(lastIndex, index))\n\n    if (val || !end) {\n      values.push(val)\n    }\n\n    lastIndex = index + 1\n    index = input.indexOf(comma, lastIndex)\n  }\n\n  return values\n}\n\n/* Compile an array to comma-separated tokens.\n * `options.padLeft` (default: `true`) pads a space left of each\n * token, and `options.padRight` (default: `false`) pads a space\n * to the right of each token. */\nfunction stringify(values, options) {\n  var settings = options || {}\n  var left = settings.padLeft === false ? empty : space\n  var right = settings.padRight ? space : empty\n\n  /* Ensure the last empty entry is seen. */\n  if (values[values.length - 1] === empty) {\n    values = values.concat(empty)\n  }\n\n  return trim(values.join(right + comma + left))\n}\n","'use strict'\n\nmodule.exports = visitParents\n\nvar is = require('unist-util-is')\n\nvar CONTINUE = true\nvar SKIP = 'skip'\nvar EXIT = false\n\nvisitParents.CONTINUE = CONTINUE\nvisitParents.SKIP = SKIP\nvisitParents.EXIT = EXIT\n\nfunction visitParents(tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  one(tree, null, [])\n\n  // Visit a single node.\n  function one(node, index, parents) {\n    var result\n\n    if (!test || is(test, node, index, parents[parents.length - 1] || null)) {\n      result = visitor(node, parents)\n\n      if (result === EXIT) {\n        return result\n      }\n    }\n\n    if (node.children && result !== SKIP) {\n      return all(node.children, parents.concat(node)) === EXIT ? EXIT : result\n    }\n\n    return result\n  }\n\n  // Visit children in `parent`.\n  function all(children, parents) {\n    var min = -1\n    var step = reverse ? -1 : 1\n    var index = (reverse ? children.length : min) + step\n    var child\n    var result\n\n    while (index > min && index < children.length) {\n      child = children[index]\n      result = child && one(child, index, parents)\n\n      if (result === EXIT) {\n        return result\n      }\n\n      index = typeof result === 'number' ? result : index + step\n    }\n  }\n}\n"],"sourceRoot":""}